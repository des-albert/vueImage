{"version":3,"sources":["webpack:///./node_modules/.pnpm/apollo-link@1.2.14/node_modules/apollo-link/lib/bundle.esm.js","webpack:///./node_modules/.pnpm/apollo-client@2.6.10/node_modules/apollo-client/bundle.esm.js","webpack:///./node_modules/.pnpm/apollo-cache@1.3.5/node_modules/apollo-cache/lib/bundle.esm.js","webpack:///./node_modules/.pnpm/apollo-cache-inmemory@1.6.6/node_modules/apollo-cache-inmemory/lib/bundle.esm.js","webpack:///./node_modules/.pnpm/apollo-link-http-common@0.2.16/node_modules/apollo-link-http-common/lib/bundle.esm.js","webpack:///./node_modules/.pnpm/apollo-link-http@1.5.17/node_modules/apollo-link-http/lib/bundle.esm.js","webpack:///./node_modules/.pnpm/apollo-link-error@1.1.13/node_modules/apollo-link-error/lib/bundle.esm.js","webpack:///./node_modules/.pnpm/apollo-boost@0.4.9/node_modules/apollo-boost/lib/bundle.esm.js","webpack:///./node_modules/.pnpm/apollo-utilities@1.3.4/node_modules/apollo-utilities/lib/bundle.esm.js"],"names":["validateOperation","operation","OPERATION_FIELDS","_i","_a","Object","keys","length","key","indexOf","_super","LinkError","message","link","_this","call","this","Error","isTerminating","request","fromError","errorValue","observer","error","transformOperation","transformedOperation","variables","extensions","operationName","query","createOperation","starting","context","setContext","next","getContext","defineProperty","enumerable","value","getKey","JSON","stringify","passthrough","op","forward","of","toLink","handler","empty","from","links","map","reduce","x","y","concat","split","test","left","right","leftLink","rightLink","first","second","firstLink","nextLink","ApolloLink","prototype","execute","NetworkStatus","isNetworkRequestInFlight","networkStatus","Observable","apply","arguments","isNonEmptyArray","Array","isArray","isApolloError","err","hasOwnProperty","FetchType","generateErrorMessage","graphQLErrors","forEach","graphQLError","errorMessage","networkError","replace","ApolloError","extraInfo","__proto__","hasError","storeValue","policy","ObservableQuery","queryManager","options","_b","shouldSubscribe","onSubscribe","observers","Set","subscriptions","isTornDown","queryId","generateQueryId","opDef","queryName","name","result","Promise","resolve","reject","delete","size","removeQuery","setTimeout","subscription","unsubscribe","subscribe","currentResult","getCurrentResult","undefined","data","lastResult","lastError","loading","getCurrentQueryResult","partial","queryStoreValue","queryStore","get","fetchPolicy","isNetworkFetchPolicy","errorPolicy","errors","ready","updateLastResult","stale","isDifferentFromLastResult","newResult","snapshot","lastResultSnapshot","getLastResult","getLastError","resetLastResults","resetQueryStoreErrors","refetch","fetchQuery","fetchMore","fetchMoreOptions","updateQuery","combinedOptions","qid","normal","then","fetchMoreResult","previousResult","stopQuery","subscribeToMore","startGraphQLSubscription","document","subscriptionData","previous","onError","add","setOptions","opts","oldFetchPolicy","pollInterval","startPolling","stopPolling","setVariables","fetchResults","tryFetch","mapFn","getQueryWithPreviousResult","dataStore","markUpdateQueryResult","broadcastQueries","stopPollingQuery","assertNotCacheFirstOrOnly","startPollingQuery","assumeImmutableResults","subObserver","_subscription","_observer","defaultSubscriptionObserverErrorCallback","setUpQuery","tearDownQuery","addObservableQuery","iterateObserversSafely","observeQuery","previousResult_1","query_1","fetchPolicy_1","transform","hasClientExports","getLocalState","addExportedVariables","previousVariables","serverQuery","catch","sub","clear","removeObservableQuery","method","argument","observersWithMethod","obs","push","obsQuery","MutationStore","store","getStore","mutationId","initMutation","mutation","markMutationError","markMutationResult","reset","QueryStore","initQuery","previousQuery","isSetVariables","storePreviousVariables","isPoll","poll","isRefetch","metadata","fetchMoreForQueryId","markQueryResult","markQueryError","markQueryResultClient","complete","observableQueryIds","capitalizeFirstLetter","str","charAt","toUpperCase","slice","LocalState","cache","client","resolvers","fragmentMatcher","addResolvers","setFragmentMatcher","resolverGroup","setResolvers","getResolvers","runResolvers","remoteResult","onlyRunForcedResolvers","_c","resolveDocument","localResult","getFragmentMatcher","clientQuery","prepareContext","newContext","getCacheKey","obj","config","dataIdFromObject","buildRootValueFromCache","exportedVariables","shouldForceResolvers","forceResolvers","Directive","enter","node","some","arg","kind","diff","returnPartialData","optimistic","rootValue","mainDefinition","fragments","fragmentMap","definitionOperation","defaultOperationType","execContext","resolveSelectionSet","selectionSet","resultsToMerge","selection","fragment","typeCondition","resolveField","fieldResult","fragmentResult","all","selections","field","fieldName","aliasedFieldName","aliasUsed","defaultResult","resultPromise","resolverType","resolverMap","__typename","directives","directive","resolveSubSelectedArray","item","multiplex","inner","asyncMap","observable","activeNextCount","completed","e","QueryManager","queryDeduplication","onBroadcast","_d","ssrMode","_e","clientAwareness","localState","mutationStore","idCounter","queries","Map","fetchQueryRejectFns","transformCache","WeakMap","inFlightLinkObservables","pollingInfoByQueryId","getCache","stop","_info","stopQueryNoBroadcast","mutate","optimisticResponse","updateQueriesByName","updateQueries","refetchQueries","awaitRefetchQueries","updateWithProxyFn","update","generateUpdateQueriesInfo","self","_f","label","setQuery","getVariables","sent","ret","observableQuery","updater","markMutationInit","storeResult","getObservableFromLink","markMutationComplete","refetchQueryPromises","refetchQuery","queryOptions","fetchType","isNetworkOnly","needToFetch","shouldFetch","requestId","cancel","networkResult","updateQueryWatch","lastRequestId","invalidated","invalidate","fetchRequest","getQuery","hasForcedResolvers","newData","queryListenerForObserver","invoke","networkStatusChanged","shouldNotifyIfLoading","notifyOnNetworkStatusChange","hasGraphQLErrors","isMissing","errorStatusChanged","diffResult","resultFromStore","has","transformed","transformDocument","forLink","transformForLink","cacheEntry_1","defaultVars","doc","set","watchQuery","transformedOptions","watchedQuery","String","stopQueryInStore","stopQueryInStoreNoBroadcast","addQueryListener","listener","listeners","watch","callback","clearStore","resetIds","resetStore","reFetchObservableQueries","includeStandby","observableQueryPromises","startQuery","makeObservable","markSubscriptionResult","observablePromise_1","queryIdOrObservable","foundObserveableQuery","info","id","deduplication","inFlightLinkObservables_1","forceFetch","byVariables_1","varJson_1","cleanup","cleanupSub_1","errorsFromStore","fqrfId","result_1","prev","newInfo","checkInFlight","interval","maybeFetch_1","poll_1","clearTimeout","timeout","DataStore","initialCache","ignoreErrors","writeWithErrors","write","dataId","optimistic_1","recordOptimisticTransaction","c","orig","cacheWrites_1","updateQueries_1","currentQueryResult","nextQueryResult","mutationResult","queryVariables","performTransaction","removeOptimistic","ApolloClient","defaultOptions","resetStoreCallbacks","clearStoreCallbacks","ssrForceFetchDelay","connectToDevTools","typeDefs","clientAwarenessName","clientAwarenessVersion","version","disableNetworkFetches","bind","defaultConnectToDevTools","window","__APOLLO_CLIENT__","devToolsHookCb","action","state","mutations","dataWithOptimisticResults","extract","readQuery","readFragment","writeQuery","writeFragment","writeData","__actionHookForDevTools","cb","__requestRaw","payload","initQueryManager","fn","onResetStore","filter","onClearStore","restore","serializedState","setLocalStateFragmentMatcher","queryFromPojo","selectionSetFromObj","out","definitions","fragmentFromPojo","typename","frag","nestedSelSet","Cache","justTypenameQuery","variableDefinitions","alias","ApolloCache","read","fragmentName","rootId","typenameResult","dataToWrite","assign","haveWarned","shouldWarn","answer","HeuristicFragmentMatcher","ensureReady","canBypassInit","match","idValue","isRootQuery","hasOwn","IntrospectionFragmentMatcher","introspectionQueryResultData","possibleTypesMap","parseIntrospectionResult","isReady","implementingTypes","introspectionResultData","typeMap","__schema","types","type","possibleTypes","implementingType","DepTrackingCache","create","depend","disposable","makeCacheKey","toObject","oldValue","dirty","defaultNormalizedCacheFactory","seed","StoreReader","cacheKeyRoot","freezeResults","executeStoreQuery","executeSelectionSet","executeSubSelectedArray","contextValue","variableValues","lookup","array","readQueryFromStore","diffQueryAgainstStore","fragmentMatcherFunction","queryDefinition","cacheRedirects","execResult","generated","hasMissingFields","missing","tolerable","defaultFragmentMatcher","finalResult","objectsToMerge","object","handleMissing","executeField","fragmentExecResult","args","resultKey","readStoreResult","readStoreResolver","combineExecResults","assertSelectionSetForIdValue","execResults","pop","childResult","storeKeyName","fieldValue","resolver","storeObj","json","ObjectCache","WriteError","enhanceErrorWithDocument","enhancedError","stack","StoreWriter","writeQueryToStore","writeResultToStore","operationDefinition","writeSelectionSetToStore","processedData","resultFieldKey","writeFieldToStore","isDefered","isClient","matches","fakeContext","storeObject","storeFieldName","generatedId","processArrayValue","valueDataId","isGeneratedId","semanticId","isDataProcessed","escapedId","hadTypename","hasTypename","typenameChanged","mergeWithGenerated","index","itemDataId","generatedKey","realKey","real","madeChanges","realValue","newRealValue","defaultConfig","defaultDataIdFromObject","addTypename","resultCaching","_id","hasOwn$1","OptimisticCacheLayer","optimisticId","parent","transaction","InMemoryCache","watches","typenameDocumentCache","silenceBroadcast","customResolvers","cacheResolvers","optimisticData","storeWriter","storeReader","maybeBroadcastWatch","broadcastWatches","evict","idToRemove","toReapply","removedCount","layer","layer_1","defaultHttpOptions","includeQuery","includeExtensions","defaultHeaders","accept","fallbackHttpConfig","http","headers","throwServerError","response","statusCode","status","parseAndCheckHttpResponse","operations","text","bodyText","parse","parseError","checkFetcher","fetcher","fetch","createSignalIfSupported","AbortController","controller","signal","selectHttpOptionsAndBody","fallbackConfig","configs","credentials","body","serializeFetchParameter","p","serialized","selectURI","fallbackURI","contextURI","uri","createHttpLink","linkOptions","useGETForQueries","requestOptions","linkConfig","fetchOptions","chosenURI","clientAwarenessHeaders","name_1","contextHeaders","contextConfig","_controller","definitionIsMutation","d","rewriteURIForGET","newURI","abort","queryParams","addQueryParam","encodeURIComponent","serializedVariables","serializedExtensions","preFragment","fragmentStart","substr","queryParamsPrefix","join","HttpLink","errorHandler","retriedSub","retriedResult","ErrorLink","PRESET_CONFIG_KEYS","DefaultClient","clientState","errorCallback","errorLink","locations","path","requestHandler","handle","oper","httpLink","activeResolvers","activeTypeDefs","activeFragmentMatcher","defaults","isStringValue","isBooleanValue","isIntValue","isFloatValue","isVariable","isObjectValue","isListValue","isEnumValue","isNullValue","valueToObjectRepresentation","argObj","Number","nestedArgObj_1","fields","variableValue","values","listValue","nestedArgArrayObj","storeKeyNameFromField","directivesObj","getStoreKeyName","KNOWN_DIRECTIVES","filterKeys","sort","queryArgs_1","filteredArgs_1","completeFieldName","stringifiedArgs","argumentsObjectFromField","argObj_1","resultKeyNameFromField","isField","isInlineFragment","isIdValue","idObject","toIdValue","idConfig","isJsonValue","jsonObject","getDirectiveInfoFromField","directiveObj_1","shouldInclude","getInclusionDirectives","every","ifArgument","evaledValue","getDirectiveNames","names","hasDirectives","isInclusionDirective","directiveArguments","ifValue","getFragmentQueryDocument","actualFragmentName","definition","target","sources","source","checkDocument","getOperationDefinition","getOperationName","getFragmentDefinitions","getQueryDefinition","queryDef","getFragmentDefinition","fragmentDef","getMainDefinition","queryDoc","fragmentDefinition","createFragmentMap","symTable","getDefaultValues","defaultValues","defaultValue","variable","defaultValueObj","filterInPlace","elem","i","TYPENAME_FIELD","isEmpty","nullIfDocIsEmpty","getDirectiveMatcher","dir","removeDirectivesFromDocument","variablesInUse","variablesToRemove","fragmentSpreadsInUse","fragmentSpreadsToRemove","modifiedDoc","Variable","_key","Field","shouldRemoveField","remove","getAllFragmentSpreadsFromSelectionSet","FragmentSpread","v","removeArgumentsFromDocument","fs","removeFragmentSpreadFromDocument","addTypenameToDocument","SelectionSet","skip","lastIndexOf","connectionRemoveConfig","willRemove","removeConnectionDirectiveFromDocument","getArgumentMatcher","aConfig","argMatcher","OperationDefinition","varDef","argConfig","argMatchCount_1","Argument","def","FragmentDefinition","allFragments","buildQueryFromSelectionSet","removeClientSetsFromDocument","isTypenameOnly","canUseWeakMap","navigator","product","toString","cloneDeep","cloneDeepHelper","val","seen","copy_1","child","copy_2","getPrototypeOf","getEnv","process","isEnv","env","isProduction","isDevelopment","isTest","tryFunctionOrLogError","f","console","graphQLResultHasError","deepFreeze","o","freeze","getOwnPropertyNames","prop","isFrozen","maybeDeepFreeze","symbolIsPolyfilled","Symbol","mergeDeep","mergeDeepArray","count","pastCopies","shallowCopyForMerge","mergeHelper","isObject","isExtensible","sourceKey","sourceValue","targetValue"],"mappings":"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","file":"js/chunk-vendors~37a86107.23cff40d.js","sourcesContent":["import Observable from 'zen-observable-ts';\nexport { default as Observable } from 'zen-observable-ts';\nimport { invariant, InvariantError } from 'ts-invariant';\nimport { __extends, __assign } from 'tslib';\nimport { getOperationName } from 'apollo-utilities';\nexport { getOperationName } from 'apollo-utilities';\n\nfunction validateOperation(operation) {\n    var OPERATION_FIELDS = [\n        'query',\n        'operationName',\n        'variables',\n        'extensions',\n        'context',\n    ];\n    for (var _i = 0, _a = Object.keys(operation); _i < _a.length; _i++) {\n        var key = _a[_i];\n        if (OPERATION_FIELDS.indexOf(key) < 0) {\n            throw process.env.NODE_ENV === \"production\" ? new InvariantError(2) : new InvariantError(\"illegal argument: \" + key);\n        }\n    }\n    return operation;\n}\nvar LinkError = (function (_super) {\n    __extends(LinkError, _super);\n    function LinkError(message, link) {\n        var _this = _super.call(this, message) || this;\n        _this.link = link;\n        return _this;\n    }\n    return LinkError;\n}(Error));\nfunction isTerminating(link) {\n    return link.request.length <= 1;\n}\nfunction toPromise(observable) {\n    var completed = false;\n    return new Promise(function (resolve, reject) {\n        observable.subscribe({\n            next: function (data) {\n                if (completed) {\n                    process.env.NODE_ENV === \"production\" || invariant.warn(\"Promise Wrapper does not support multiple results from Observable\");\n                }\n                else {\n                    completed = true;\n                    resolve(data);\n                }\n            },\n            error: reject,\n        });\n    });\n}\nvar makePromise = toPromise;\nfunction fromPromise(promise) {\n    return new Observable(function (observer) {\n        promise\n            .then(function (value) {\n            observer.next(value);\n            observer.complete();\n        })\n            .catch(observer.error.bind(observer));\n    });\n}\nfunction fromError(errorValue) {\n    return new Observable(function (observer) {\n        observer.error(errorValue);\n    });\n}\nfunction transformOperation(operation) {\n    var transformedOperation = {\n        variables: operation.variables || {},\n        extensions: operation.extensions || {},\n        operationName: operation.operationName,\n        query: operation.query,\n    };\n    if (!transformedOperation.operationName) {\n        transformedOperation.operationName =\n            typeof transformedOperation.query !== 'string'\n                ? getOperationName(transformedOperation.query)\n                : '';\n    }\n    return transformedOperation;\n}\nfunction createOperation(starting, operation) {\n    var context = __assign({}, starting);\n    var setContext = function (next) {\n        if (typeof next === 'function') {\n            context = __assign({}, context, next(context));\n        }\n        else {\n            context = __assign({}, context, next);\n        }\n    };\n    var getContext = function () { return (__assign({}, context)); };\n    Object.defineProperty(operation, 'setContext', {\n        enumerable: false,\n        value: setContext,\n    });\n    Object.defineProperty(operation, 'getContext', {\n        enumerable: false,\n        value: getContext,\n    });\n    Object.defineProperty(operation, 'toKey', {\n        enumerable: false,\n        value: function () { return getKey(operation); },\n    });\n    return operation;\n}\nfunction getKey(operation) {\n    var query = operation.query, variables = operation.variables, operationName = operation.operationName;\n    return JSON.stringify([operationName, query, variables]);\n}\n\nfunction passthrough(op, forward) {\n    return forward ? forward(op) : Observable.of();\n}\nfunction toLink(handler) {\n    return typeof handler === 'function' ? new ApolloLink(handler) : handler;\n}\nfunction empty() {\n    return new ApolloLink(function () { return Observable.of(); });\n}\nfunction from(links) {\n    if (links.length === 0)\n        return empty();\n    return links.map(toLink).reduce(function (x, y) { return x.concat(y); });\n}\nfunction split(test, left, right) {\n    var leftLink = toLink(left);\n    var rightLink = toLink(right || new ApolloLink(passthrough));\n    if (isTerminating(leftLink) && isTerminating(rightLink)) {\n        return new ApolloLink(function (operation) {\n            return test(operation)\n                ? leftLink.request(operation) || Observable.of()\n                : rightLink.request(operation) || Observable.of();\n        });\n    }\n    else {\n        return new ApolloLink(function (operation, forward) {\n            return test(operation)\n                ? leftLink.request(operation, forward) || Observable.of()\n                : rightLink.request(operation, forward) || Observable.of();\n        });\n    }\n}\nvar concat = function (first, second) {\n    var firstLink = toLink(first);\n    if (isTerminating(firstLink)) {\n        process.env.NODE_ENV === \"production\" || invariant.warn(new LinkError(\"You are calling concat on a terminating link, which will have no effect\", firstLink));\n        return firstLink;\n    }\n    var nextLink = toLink(second);\n    if (isTerminating(nextLink)) {\n        return new ApolloLink(function (operation) {\n            return firstLink.request(operation, function (op) { return nextLink.request(op) || Observable.of(); }) || Observable.of();\n        });\n    }\n    else {\n        return new ApolloLink(function (operation, forward) {\n            return (firstLink.request(operation, function (op) {\n                return nextLink.request(op, forward) || Observable.of();\n            }) || Observable.of());\n        });\n    }\n};\nvar ApolloLink = (function () {\n    function ApolloLink(request) {\n        if (request)\n            this.request = request;\n    }\n    ApolloLink.prototype.split = function (test, left, right) {\n        return this.concat(split(test, left, right || new ApolloLink(passthrough)));\n    };\n    ApolloLink.prototype.concat = function (next) {\n        return concat(this, next);\n    };\n    ApolloLink.prototype.request = function (operation, forward) {\n        throw process.env.NODE_ENV === \"production\" ? new InvariantError(1) : new InvariantError('request is not implemented');\n    };\n    ApolloLink.empty = empty;\n    ApolloLink.from = from;\n    ApolloLink.split = split;\n    ApolloLink.execute = execute;\n    return ApolloLink;\n}());\nfunction execute(link, operation) {\n    return (link.request(createOperation(operation.context, transformOperation(validateOperation(operation)))) || Observable.of());\n}\n\nexport { ApolloLink, concat, createOperation, empty, execute, from, fromError, fromPromise, makePromise, split, toPromise };\n//# sourceMappingURL=bundle.esm.js.map\n","import { __extends, __assign, __awaiter, __generator } from 'tslib';\nimport { getOperationDefinition, isEqual, tryFunctionOrLogError, cloneDeep, mergeDeep, hasDirectives, removeClientSetsFromDocument, buildQueryFromSelectionSet, getMainDefinition, getFragmentDefinitions, createFragmentMap, mergeDeepArray, resultKeyNameFromField, argumentsObjectFromField, shouldInclude, isField, isInlineFragment, canUseWeakMap, graphQLResultHasError, removeConnectionDirectiveFromDocument, hasClientExports, getDefaultValues, getOperationName } from 'apollo-utilities';\nimport { Observable as Observable$1, execute, ApolloLink } from 'apollo-link';\nimport $$observable from 'symbol-observable';\nimport { InvariantError, invariant } from 'ts-invariant';\nimport { visit, BREAK } from 'graphql/language/visitor';\n\nvar NetworkStatus;\n(function (NetworkStatus) {\n    NetworkStatus[NetworkStatus[\"loading\"] = 1] = \"loading\";\n    NetworkStatus[NetworkStatus[\"setVariables\"] = 2] = \"setVariables\";\n    NetworkStatus[NetworkStatus[\"fetchMore\"] = 3] = \"fetchMore\";\n    NetworkStatus[NetworkStatus[\"refetch\"] = 4] = \"refetch\";\n    NetworkStatus[NetworkStatus[\"poll\"] = 6] = \"poll\";\n    NetworkStatus[NetworkStatus[\"ready\"] = 7] = \"ready\";\n    NetworkStatus[NetworkStatus[\"error\"] = 8] = \"error\";\n})(NetworkStatus || (NetworkStatus = {}));\nfunction isNetworkRequestInFlight(networkStatus) {\n    return networkStatus < 7;\n}\n\nvar Observable = (function (_super) {\n    __extends(Observable, _super);\n    function Observable() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Observable.prototype[$$observable] = function () {\n        return this;\n    };\n    Observable.prototype['@@observable'] = function () {\n        return this;\n    };\n    return Observable;\n}(Observable$1));\n\nfunction isNonEmptyArray(value) {\n    return Array.isArray(value) && value.length > 0;\n}\n\nfunction isApolloError(err) {\n    return err.hasOwnProperty('graphQLErrors');\n}\nvar generateErrorMessage = function (err) {\n    var message = '';\n    if (isNonEmptyArray(err.graphQLErrors)) {\n        err.graphQLErrors.forEach(function (graphQLError) {\n            var errorMessage = graphQLError\n                ? graphQLError.message\n                : 'Error message not found.';\n            message += \"GraphQL error: \" + errorMessage + \"\\n\";\n        });\n    }\n    if (err.networkError) {\n        message += 'Network error: ' + err.networkError.message + '\\n';\n    }\n    message = message.replace(/\\n$/, '');\n    return message;\n};\nvar ApolloError = (function (_super) {\n    __extends(ApolloError, _super);\n    function ApolloError(_a) {\n        var graphQLErrors = _a.graphQLErrors, networkError = _a.networkError, errorMessage = _a.errorMessage, extraInfo = _a.extraInfo;\n        var _this = _super.call(this, errorMessage) || this;\n        _this.graphQLErrors = graphQLErrors || [];\n        _this.networkError = networkError || null;\n        if (!errorMessage) {\n            _this.message = generateErrorMessage(_this);\n        }\n        else {\n            _this.message = errorMessage;\n        }\n        _this.extraInfo = extraInfo;\n        _this.__proto__ = ApolloError.prototype;\n        return _this;\n    }\n    return ApolloError;\n}(Error));\n\nvar FetchType;\n(function (FetchType) {\n    FetchType[FetchType[\"normal\"] = 1] = \"normal\";\n    FetchType[FetchType[\"refetch\"] = 2] = \"refetch\";\n    FetchType[FetchType[\"poll\"] = 3] = \"poll\";\n})(FetchType || (FetchType = {}));\n\nvar hasError = function (storeValue, policy) {\n    if (policy === void 0) { policy = 'none'; }\n    return storeValue && (storeValue.networkError ||\n        (policy === 'none' && isNonEmptyArray(storeValue.graphQLErrors)));\n};\nvar ObservableQuery = (function (_super) {\n    __extends(ObservableQuery, _super);\n    function ObservableQuery(_a) {\n        var queryManager = _a.queryManager, options = _a.options, _b = _a.shouldSubscribe, shouldSubscribe = _b === void 0 ? true : _b;\n        var _this = _super.call(this, function (observer) {\n            return _this.onSubscribe(observer);\n        }) || this;\n        _this.observers = new Set();\n        _this.subscriptions = new Set();\n        _this.isTornDown = false;\n        _this.options = options;\n        _this.variables = options.variables || {};\n        _this.queryId = queryManager.generateQueryId();\n        _this.shouldSubscribe = shouldSubscribe;\n        var opDef = getOperationDefinition(options.query);\n        _this.queryName = opDef && opDef.name && opDef.name.value;\n        _this.queryManager = queryManager;\n        return _this;\n    }\n    ObservableQuery.prototype.result = function () {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            var observer = {\n                next: function (result) {\n                    resolve(result);\n                    _this.observers.delete(observer);\n                    if (!_this.observers.size) {\n                        _this.queryManager.removeQuery(_this.queryId);\n                    }\n                    setTimeout(function () {\n                        subscription.unsubscribe();\n                    }, 0);\n                },\n                error: reject,\n            };\n            var subscription = _this.subscribe(observer);\n        });\n    };\n    ObservableQuery.prototype.currentResult = function () {\n        var result = this.getCurrentResult();\n        if (result.data === undefined) {\n            result.data = {};\n        }\n        return result;\n    };\n    ObservableQuery.prototype.getCurrentResult = function () {\n        if (this.isTornDown) {\n            var lastResult = this.lastResult;\n            return {\n                data: !this.lastError && lastResult && lastResult.data || void 0,\n                error: this.lastError,\n                loading: false,\n                networkStatus: NetworkStatus.error,\n            };\n        }\n        var _a = this.queryManager.getCurrentQueryResult(this), data = _a.data, partial = _a.partial;\n        var queryStoreValue = this.queryManager.queryStore.get(this.queryId);\n        var result;\n        var fetchPolicy = this.options.fetchPolicy;\n        var isNetworkFetchPolicy = fetchPolicy === 'network-only' ||\n            fetchPolicy === 'no-cache';\n        if (queryStoreValue) {\n            var networkStatus = queryStoreValue.networkStatus;\n            if (hasError(queryStoreValue, this.options.errorPolicy)) {\n                return {\n                    data: void 0,\n                    loading: false,\n                    networkStatus: networkStatus,\n                    error: new ApolloError({\n                        graphQLErrors: queryStoreValue.graphQLErrors,\n                        networkError: queryStoreValue.networkError,\n                    }),\n                };\n            }\n            if (queryStoreValue.variables) {\n                this.options.variables = __assign(__assign({}, this.options.variables), queryStoreValue.variables);\n                this.variables = this.options.variables;\n            }\n            result = {\n                data: data,\n                loading: isNetworkRequestInFlight(networkStatus),\n                networkStatus: networkStatus,\n            };\n            if (queryStoreValue.graphQLErrors && this.options.errorPolicy === 'all') {\n                result.errors = queryStoreValue.graphQLErrors;\n            }\n        }\n        else {\n            var loading = isNetworkFetchPolicy ||\n                (partial && fetchPolicy !== 'cache-only');\n            result = {\n                data: data,\n                loading: loading,\n                networkStatus: loading ? NetworkStatus.loading : NetworkStatus.ready,\n            };\n        }\n        if (!partial) {\n            this.updateLastResult(__assign(__assign({}, result), { stale: false }));\n        }\n        return __assign(__assign({}, result), { partial: partial });\n    };\n    ObservableQuery.prototype.isDifferentFromLastResult = function (newResult) {\n        var snapshot = this.lastResultSnapshot;\n        return !(snapshot &&\n            newResult &&\n            snapshot.networkStatus === newResult.networkStatus &&\n            snapshot.stale === newResult.stale &&\n            isEqual(snapshot.data, newResult.data));\n    };\n    ObservableQuery.prototype.getLastResult = function () {\n        return this.lastResult;\n    };\n    ObservableQuery.prototype.getLastError = function () {\n        return this.lastError;\n    };\n    ObservableQuery.prototype.resetLastResults = function () {\n        delete this.lastResult;\n        delete this.lastResultSnapshot;\n        delete this.lastError;\n        this.isTornDown = false;\n    };\n    ObservableQuery.prototype.resetQueryStoreErrors = function () {\n        var queryStore = this.queryManager.queryStore.get(this.queryId);\n        if (queryStore) {\n            queryStore.networkError = null;\n            queryStore.graphQLErrors = [];\n        }\n    };\n    ObservableQuery.prototype.refetch = function (variables) {\n        var fetchPolicy = this.options.fetchPolicy;\n        if (fetchPolicy === 'cache-only') {\n            return Promise.reject(process.env.NODE_ENV === \"production\" ? new InvariantError(1) : new InvariantError('cache-only fetchPolicy option should not be used together with query refetch.'));\n        }\n        if (fetchPolicy !== 'no-cache' &&\n            fetchPolicy !== 'cache-and-network') {\n            fetchPolicy = 'network-only';\n        }\n        if (!isEqual(this.variables, variables)) {\n            this.variables = __assign(__assign({}, this.variables), variables);\n        }\n        if (!isEqual(this.options.variables, this.variables)) {\n            this.options.variables = __assign(__assign({}, this.options.variables), this.variables);\n        }\n        return this.queryManager.fetchQuery(this.queryId, __assign(__assign({}, this.options), { fetchPolicy: fetchPolicy }), FetchType.refetch);\n    };\n    ObservableQuery.prototype.fetchMore = function (fetchMoreOptions) {\n        var _this = this;\n        process.env.NODE_ENV === \"production\" ? invariant(fetchMoreOptions.updateQuery, 2) : invariant(fetchMoreOptions.updateQuery, 'updateQuery option is required. This function defines how to update the query data with the new results.');\n        var combinedOptions = __assign(__assign({}, (fetchMoreOptions.query ? fetchMoreOptions : __assign(__assign(__assign({}, this.options), fetchMoreOptions), { variables: __assign(__assign({}, this.variables), fetchMoreOptions.variables) }))), { fetchPolicy: 'network-only' });\n        var qid = this.queryManager.generateQueryId();\n        return this.queryManager\n            .fetchQuery(qid, combinedOptions, FetchType.normal, this.queryId)\n            .then(function (fetchMoreResult) {\n            _this.updateQuery(function (previousResult) {\n                return fetchMoreOptions.updateQuery(previousResult, {\n                    fetchMoreResult: fetchMoreResult.data,\n                    variables: combinedOptions.variables,\n                });\n            });\n            _this.queryManager.stopQuery(qid);\n            return fetchMoreResult;\n        }, function (error) {\n            _this.queryManager.stopQuery(qid);\n            throw error;\n        });\n    };\n    ObservableQuery.prototype.subscribeToMore = function (options) {\n        var _this = this;\n        var subscription = this.queryManager\n            .startGraphQLSubscription({\n            query: options.document,\n            variables: options.variables,\n        })\n            .subscribe({\n            next: function (subscriptionData) {\n                var updateQuery = options.updateQuery;\n                if (updateQuery) {\n                    _this.updateQuery(function (previous, _a) {\n                        var variables = _a.variables;\n                        return updateQuery(previous, {\n                            subscriptionData: subscriptionData,\n                            variables: variables,\n                        });\n                    });\n                }\n            },\n            error: function (err) {\n                if (options.onError) {\n                    options.onError(err);\n                    return;\n                }\n                process.env.NODE_ENV === \"production\" || invariant.error('Unhandled GraphQL subscription error', err);\n            },\n        });\n        this.subscriptions.add(subscription);\n        return function () {\n            if (_this.subscriptions.delete(subscription)) {\n                subscription.unsubscribe();\n            }\n        };\n    };\n    ObservableQuery.prototype.setOptions = function (opts) {\n        var oldFetchPolicy = this.options.fetchPolicy;\n        this.options = __assign(__assign({}, this.options), opts);\n        if (opts.pollInterval) {\n            this.startPolling(opts.pollInterval);\n        }\n        else if (opts.pollInterval === 0) {\n            this.stopPolling();\n        }\n        var fetchPolicy = opts.fetchPolicy;\n        return this.setVariables(this.options.variables, oldFetchPolicy !== fetchPolicy && (oldFetchPolicy === 'cache-only' ||\n            oldFetchPolicy === 'standby' ||\n            fetchPolicy === 'network-only'), opts.fetchResults);\n    };\n    ObservableQuery.prototype.setVariables = function (variables, tryFetch, fetchResults) {\n        if (tryFetch === void 0) { tryFetch = false; }\n        if (fetchResults === void 0) { fetchResults = true; }\n        this.isTornDown = false;\n        variables = variables || this.variables;\n        if (!tryFetch && isEqual(variables, this.variables)) {\n            return this.observers.size && fetchResults\n                ? this.result()\n                : Promise.resolve();\n        }\n        this.variables = this.options.variables = variables;\n        if (!this.observers.size) {\n            return Promise.resolve();\n        }\n        return this.queryManager.fetchQuery(this.queryId, this.options);\n    };\n    ObservableQuery.prototype.updateQuery = function (mapFn) {\n        var queryManager = this.queryManager;\n        var _a = queryManager.getQueryWithPreviousResult(this.queryId), previousResult = _a.previousResult, variables = _a.variables, document = _a.document;\n        var newResult = tryFunctionOrLogError(function () {\n            return mapFn(previousResult, { variables: variables });\n        });\n        if (newResult) {\n            queryManager.dataStore.markUpdateQueryResult(document, variables, newResult);\n            queryManager.broadcastQueries();\n        }\n    };\n    ObservableQuery.prototype.stopPolling = function () {\n        this.queryManager.stopPollingQuery(this.queryId);\n        this.options.pollInterval = undefined;\n    };\n    ObservableQuery.prototype.startPolling = function (pollInterval) {\n        assertNotCacheFirstOrOnly(this);\n        this.options.pollInterval = pollInterval;\n        this.queryManager.startPollingQuery(this.options, this.queryId);\n    };\n    ObservableQuery.prototype.updateLastResult = function (newResult) {\n        var previousResult = this.lastResult;\n        this.lastResult = newResult;\n        this.lastResultSnapshot = this.queryManager.assumeImmutableResults\n            ? newResult\n            : cloneDeep(newResult);\n        return previousResult;\n    };\n    ObservableQuery.prototype.onSubscribe = function (observer) {\n        var _this = this;\n        try {\n            var subObserver = observer._subscription._observer;\n            if (subObserver && !subObserver.error) {\n                subObserver.error = defaultSubscriptionObserverErrorCallback;\n            }\n        }\n        catch (_a) { }\n        var first = !this.observers.size;\n        this.observers.add(observer);\n        if (observer.next && this.lastResult)\n            observer.next(this.lastResult);\n        if (observer.error && this.lastError)\n            observer.error(this.lastError);\n        if (first) {\n            this.setUpQuery();\n        }\n        return function () {\n            if (_this.observers.delete(observer) && !_this.observers.size) {\n                _this.tearDownQuery();\n            }\n        };\n    };\n    ObservableQuery.prototype.setUpQuery = function () {\n        var _this = this;\n        var _a = this, queryManager = _a.queryManager, queryId = _a.queryId;\n        if (this.shouldSubscribe) {\n            queryManager.addObservableQuery(queryId, this);\n        }\n        if (this.options.pollInterval) {\n            assertNotCacheFirstOrOnly(this);\n            queryManager.startPollingQuery(this.options, queryId);\n        }\n        var onError = function (error) {\n            _this.updateLastResult(__assign(__assign({}, _this.lastResult), { errors: error.graphQLErrors, networkStatus: NetworkStatus.error, loading: false }));\n            iterateObserversSafely(_this.observers, 'error', _this.lastError = error);\n        };\n        queryManager.observeQuery(queryId, this.options, {\n            next: function (result) {\n                if (_this.lastError || _this.isDifferentFromLastResult(result)) {\n                    var previousResult_1 = _this.updateLastResult(result);\n                    var _a = _this.options, query_1 = _a.query, variables = _a.variables, fetchPolicy_1 = _a.fetchPolicy;\n                    if (queryManager.transform(query_1).hasClientExports) {\n                        queryManager.getLocalState().addExportedVariables(query_1, variables).then(function (variables) {\n                            var previousVariables = _this.variables;\n                            _this.variables = _this.options.variables = variables;\n                            if (!result.loading &&\n                                previousResult_1 &&\n                                fetchPolicy_1 !== 'cache-only' &&\n                                queryManager.transform(query_1).serverQuery &&\n                                !isEqual(previousVariables, variables)) {\n                                _this.refetch();\n                            }\n                            else {\n                                iterateObserversSafely(_this.observers, 'next', result);\n                            }\n                        });\n                    }\n                    else {\n                        iterateObserversSafely(_this.observers, 'next', result);\n                    }\n                }\n            },\n            error: onError,\n        }).catch(onError);\n    };\n    ObservableQuery.prototype.tearDownQuery = function () {\n        var queryManager = this.queryManager;\n        this.isTornDown = true;\n        queryManager.stopPollingQuery(this.queryId);\n        this.subscriptions.forEach(function (sub) { return sub.unsubscribe(); });\n        this.subscriptions.clear();\n        queryManager.removeObservableQuery(this.queryId);\n        queryManager.stopQuery(this.queryId);\n        this.observers.clear();\n    };\n    return ObservableQuery;\n}(Observable));\nfunction defaultSubscriptionObserverErrorCallback(error) {\n    process.env.NODE_ENV === \"production\" || invariant.error('Unhandled error', error.message, error.stack);\n}\nfunction iterateObserversSafely(observers, method, argument) {\n    var observersWithMethod = [];\n    observers.forEach(function (obs) { return obs[method] && observersWithMethod.push(obs); });\n    observersWithMethod.forEach(function (obs) { return obs[method](argument); });\n}\nfunction assertNotCacheFirstOrOnly(obsQuery) {\n    var fetchPolicy = obsQuery.options.fetchPolicy;\n    process.env.NODE_ENV === \"production\" ? invariant(fetchPolicy !== 'cache-first' && fetchPolicy !== 'cache-only', 3) : invariant(fetchPolicy !== 'cache-first' && fetchPolicy !== 'cache-only', 'Queries that specify the cache-first and cache-only fetchPolicies cannot also be polling queries.');\n}\n\nvar MutationStore = (function () {\n    function MutationStore() {\n        this.store = {};\n    }\n    MutationStore.prototype.getStore = function () {\n        return this.store;\n    };\n    MutationStore.prototype.get = function (mutationId) {\n        return this.store[mutationId];\n    };\n    MutationStore.prototype.initMutation = function (mutationId, mutation, variables) {\n        this.store[mutationId] = {\n            mutation: mutation,\n            variables: variables || {},\n            loading: true,\n            error: null,\n        };\n    };\n    MutationStore.prototype.markMutationError = function (mutationId, error) {\n        var mutation = this.store[mutationId];\n        if (mutation) {\n            mutation.loading = false;\n            mutation.error = error;\n        }\n    };\n    MutationStore.prototype.markMutationResult = function (mutationId) {\n        var mutation = this.store[mutationId];\n        if (mutation) {\n            mutation.loading = false;\n            mutation.error = null;\n        }\n    };\n    MutationStore.prototype.reset = function () {\n        this.store = {};\n    };\n    return MutationStore;\n}());\n\nvar QueryStore = (function () {\n    function QueryStore() {\n        this.store = {};\n    }\n    QueryStore.prototype.getStore = function () {\n        return this.store;\n    };\n    QueryStore.prototype.get = function (queryId) {\n        return this.store[queryId];\n    };\n    QueryStore.prototype.initQuery = function (query) {\n        var previousQuery = this.store[query.queryId];\n        process.env.NODE_ENV === \"production\" ? invariant(!previousQuery ||\n            previousQuery.document === query.document ||\n            isEqual(previousQuery.document, query.document), 19) : invariant(!previousQuery ||\n            previousQuery.document === query.document ||\n            isEqual(previousQuery.document, query.document), 'Internal Error: may not update existing query string in store');\n        var isSetVariables = false;\n        var previousVariables = null;\n        if (query.storePreviousVariables &&\n            previousQuery &&\n            previousQuery.networkStatus !== NetworkStatus.loading) {\n            if (!isEqual(previousQuery.variables, query.variables)) {\n                isSetVariables = true;\n                previousVariables = previousQuery.variables;\n            }\n        }\n        var networkStatus;\n        if (isSetVariables) {\n            networkStatus = NetworkStatus.setVariables;\n        }\n        else if (query.isPoll) {\n            networkStatus = NetworkStatus.poll;\n        }\n        else if (query.isRefetch) {\n            networkStatus = NetworkStatus.refetch;\n        }\n        else {\n            networkStatus = NetworkStatus.loading;\n        }\n        var graphQLErrors = [];\n        if (previousQuery && previousQuery.graphQLErrors) {\n            graphQLErrors = previousQuery.graphQLErrors;\n        }\n        this.store[query.queryId] = {\n            document: query.document,\n            variables: query.variables,\n            previousVariables: previousVariables,\n            networkError: null,\n            graphQLErrors: graphQLErrors,\n            networkStatus: networkStatus,\n            metadata: query.metadata,\n        };\n        if (typeof query.fetchMoreForQueryId === 'string' &&\n            this.store[query.fetchMoreForQueryId]) {\n            this.store[query.fetchMoreForQueryId].networkStatus =\n                NetworkStatus.fetchMore;\n        }\n    };\n    QueryStore.prototype.markQueryResult = function (queryId, result, fetchMoreForQueryId) {\n        if (!this.store || !this.store[queryId])\n            return;\n        this.store[queryId].networkError = null;\n        this.store[queryId].graphQLErrors = isNonEmptyArray(result.errors) ? result.errors : [];\n        this.store[queryId].previousVariables = null;\n        this.store[queryId].networkStatus = NetworkStatus.ready;\n        if (typeof fetchMoreForQueryId === 'string' &&\n            this.store[fetchMoreForQueryId]) {\n            this.store[fetchMoreForQueryId].networkStatus = NetworkStatus.ready;\n        }\n    };\n    QueryStore.prototype.markQueryError = function (queryId, error, fetchMoreForQueryId) {\n        if (!this.store || !this.store[queryId])\n            return;\n        this.store[queryId].networkError = error;\n        this.store[queryId].networkStatus = NetworkStatus.error;\n        if (typeof fetchMoreForQueryId === 'string') {\n            this.markQueryResultClient(fetchMoreForQueryId, true);\n        }\n    };\n    QueryStore.prototype.markQueryResultClient = function (queryId, complete) {\n        var storeValue = this.store && this.store[queryId];\n        if (storeValue) {\n            storeValue.networkError = null;\n            storeValue.previousVariables = null;\n            if (complete) {\n                storeValue.networkStatus = NetworkStatus.ready;\n            }\n        }\n    };\n    QueryStore.prototype.stopQuery = function (queryId) {\n        delete this.store[queryId];\n    };\n    QueryStore.prototype.reset = function (observableQueryIds) {\n        var _this = this;\n        Object.keys(this.store).forEach(function (queryId) {\n            if (observableQueryIds.indexOf(queryId) < 0) {\n                _this.stopQuery(queryId);\n            }\n            else {\n                _this.store[queryId].networkStatus = NetworkStatus.loading;\n            }\n        });\n    };\n    return QueryStore;\n}());\n\nfunction capitalizeFirstLetter(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nvar LocalState = (function () {\n    function LocalState(_a) {\n        var cache = _a.cache, client = _a.client, resolvers = _a.resolvers, fragmentMatcher = _a.fragmentMatcher;\n        this.cache = cache;\n        if (client) {\n            this.client = client;\n        }\n        if (resolvers) {\n            this.addResolvers(resolvers);\n        }\n        if (fragmentMatcher) {\n            this.setFragmentMatcher(fragmentMatcher);\n        }\n    }\n    LocalState.prototype.addResolvers = function (resolvers) {\n        var _this = this;\n        this.resolvers = this.resolvers || {};\n        if (Array.isArray(resolvers)) {\n            resolvers.forEach(function (resolverGroup) {\n                _this.resolvers = mergeDeep(_this.resolvers, resolverGroup);\n            });\n        }\n        else {\n            this.resolvers = mergeDeep(this.resolvers, resolvers);\n        }\n    };\n    LocalState.prototype.setResolvers = function (resolvers) {\n        this.resolvers = {};\n        this.addResolvers(resolvers);\n    };\n    LocalState.prototype.getResolvers = function () {\n        return this.resolvers || {};\n    };\n    LocalState.prototype.runResolvers = function (_a) {\n        var document = _a.document, remoteResult = _a.remoteResult, context = _a.context, variables = _a.variables, _b = _a.onlyRunForcedResolvers, onlyRunForcedResolvers = _b === void 0 ? false : _b;\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_c) {\n                if (document) {\n                    return [2, this.resolveDocument(document, remoteResult.data, context, variables, this.fragmentMatcher, onlyRunForcedResolvers).then(function (localResult) { return (__assign(__assign({}, remoteResult), { data: localResult.result })); })];\n                }\n                return [2, remoteResult];\n            });\n        });\n    };\n    LocalState.prototype.setFragmentMatcher = function (fragmentMatcher) {\n        this.fragmentMatcher = fragmentMatcher;\n    };\n    LocalState.prototype.getFragmentMatcher = function () {\n        return this.fragmentMatcher;\n    };\n    LocalState.prototype.clientQuery = function (document) {\n        if (hasDirectives(['client'], document)) {\n            if (this.resolvers) {\n                return document;\n            }\n            process.env.NODE_ENV === \"production\" || invariant.warn('Found @client directives in a query but no ApolloClient resolvers ' +\n                'were specified. This means ApolloClient local resolver handling ' +\n                'has been disabled, and @client directives will be passed through ' +\n                'to your link chain.');\n        }\n        return null;\n    };\n    LocalState.prototype.serverQuery = function (document) {\n        return this.resolvers ? removeClientSetsFromDocument(document) : document;\n    };\n    LocalState.prototype.prepareContext = function (context) {\n        if (context === void 0) { context = {}; }\n        var cache = this.cache;\n        var newContext = __assign(__assign({}, context), { cache: cache, getCacheKey: function (obj) {\n                if (cache.config) {\n                    return cache.config.dataIdFromObject(obj);\n                }\n                else {\n                    process.env.NODE_ENV === \"production\" ? invariant(false, 6) : invariant(false, 'To use context.getCacheKey, you need to use a cache that has ' +\n                        'a configurable dataIdFromObject, like apollo-cache-inmemory.');\n                }\n            } });\n        return newContext;\n    };\n    LocalState.prototype.addExportedVariables = function (document, variables, context) {\n        if (variables === void 0) { variables = {}; }\n        if (context === void 0) { context = {}; }\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                if (document) {\n                    return [2, this.resolveDocument(document, this.buildRootValueFromCache(document, variables) || {}, this.prepareContext(context), variables).then(function (data) { return (__assign(__assign({}, variables), data.exportedVariables)); })];\n                }\n                return [2, __assign({}, variables)];\n            });\n        });\n    };\n    LocalState.prototype.shouldForceResolvers = function (document) {\n        var forceResolvers = false;\n        visit(document, {\n            Directive: {\n                enter: function (node) {\n                    if (node.name.value === 'client' && node.arguments) {\n                        forceResolvers = node.arguments.some(function (arg) {\n                            return arg.name.value === 'always' &&\n                                arg.value.kind === 'BooleanValue' &&\n                                arg.value.value === true;\n                        });\n                        if (forceResolvers) {\n                            return BREAK;\n                        }\n                    }\n                },\n            },\n        });\n        return forceResolvers;\n    };\n    LocalState.prototype.buildRootValueFromCache = function (document, variables) {\n        return this.cache.diff({\n            query: buildQueryFromSelectionSet(document),\n            variables: variables,\n            returnPartialData: true,\n            optimistic: false,\n        }).result;\n    };\n    LocalState.prototype.resolveDocument = function (document, rootValue, context, variables, fragmentMatcher, onlyRunForcedResolvers) {\n        if (context === void 0) { context = {}; }\n        if (variables === void 0) { variables = {}; }\n        if (fragmentMatcher === void 0) { fragmentMatcher = function () { return true; }; }\n        if (onlyRunForcedResolvers === void 0) { onlyRunForcedResolvers = false; }\n        return __awaiter(this, void 0, void 0, function () {\n            var mainDefinition, fragments, fragmentMap, definitionOperation, defaultOperationType, _a, cache, client, execContext;\n            return __generator(this, function (_b) {\n                mainDefinition = getMainDefinition(document);\n                fragments = getFragmentDefinitions(document);\n                fragmentMap = createFragmentMap(fragments);\n                definitionOperation = mainDefinition\n                    .operation;\n                defaultOperationType = definitionOperation\n                    ? capitalizeFirstLetter(definitionOperation)\n                    : 'Query';\n                _a = this, cache = _a.cache, client = _a.client;\n                execContext = {\n                    fragmentMap: fragmentMap,\n                    context: __assign(__assign({}, context), { cache: cache,\n                        client: client }),\n                    variables: variables,\n                    fragmentMatcher: fragmentMatcher,\n                    defaultOperationType: defaultOperationType,\n                    exportedVariables: {},\n                    onlyRunForcedResolvers: onlyRunForcedResolvers,\n                };\n                return [2, this.resolveSelectionSet(mainDefinition.selectionSet, rootValue, execContext).then(function (result) { return ({\n                        result: result,\n                        exportedVariables: execContext.exportedVariables,\n                    }); })];\n            });\n        });\n    };\n    LocalState.prototype.resolveSelectionSet = function (selectionSet, rootValue, execContext) {\n        return __awaiter(this, void 0, void 0, function () {\n            var fragmentMap, context, variables, resultsToMerge, execute;\n            var _this = this;\n            return __generator(this, function (_a) {\n                fragmentMap = execContext.fragmentMap, context = execContext.context, variables = execContext.variables;\n                resultsToMerge = [rootValue];\n                execute = function (selection) { return __awaiter(_this, void 0, void 0, function () {\n                    var fragment, typeCondition;\n                    return __generator(this, function (_a) {\n                        if (!shouldInclude(selection, variables)) {\n                            return [2];\n                        }\n                        if (isField(selection)) {\n                            return [2, this.resolveField(selection, rootValue, execContext).then(function (fieldResult) {\n                                    var _a;\n                                    if (typeof fieldResult !== 'undefined') {\n                                        resultsToMerge.push((_a = {},\n                                            _a[resultKeyNameFromField(selection)] = fieldResult,\n                                            _a));\n                                    }\n                                })];\n                        }\n                        if (isInlineFragment(selection)) {\n                            fragment = selection;\n                        }\n                        else {\n                            fragment = fragmentMap[selection.name.value];\n                            process.env.NODE_ENV === \"production\" ? invariant(fragment, 7) : invariant(fragment, \"No fragment named \" + selection.name.value);\n                        }\n                        if (fragment && fragment.typeCondition) {\n                            typeCondition = fragment.typeCondition.name.value;\n                            if (execContext.fragmentMatcher(rootValue, typeCondition, context)) {\n                                return [2, this.resolveSelectionSet(fragment.selectionSet, rootValue, execContext).then(function (fragmentResult) {\n                                        resultsToMerge.push(fragmentResult);\n                                    })];\n                            }\n                        }\n                        return [2];\n                    });\n                }); };\n                return [2, Promise.all(selectionSet.selections.map(execute)).then(function () {\n                        return mergeDeepArray(resultsToMerge);\n                    })];\n            });\n        });\n    };\n    LocalState.prototype.resolveField = function (field, rootValue, execContext) {\n        return __awaiter(this, void 0, void 0, function () {\n            var variables, fieldName, aliasedFieldName, aliasUsed, defaultResult, resultPromise, resolverType, resolverMap, resolve;\n            var _this = this;\n            return __generator(this, function (_a) {\n                variables = execContext.variables;\n                fieldName = field.name.value;\n                aliasedFieldName = resultKeyNameFromField(field);\n                aliasUsed = fieldName !== aliasedFieldName;\n                defaultResult = rootValue[aliasedFieldName] || rootValue[fieldName];\n                resultPromise = Promise.resolve(defaultResult);\n                if (!execContext.onlyRunForcedResolvers ||\n                    this.shouldForceResolvers(field)) {\n                    resolverType = rootValue.__typename || execContext.defaultOperationType;\n                    resolverMap = this.resolvers && this.resolvers[resolverType];\n                    if (resolverMap) {\n                        resolve = resolverMap[aliasUsed ? fieldName : aliasedFieldName];\n                        if (resolve) {\n                            resultPromise = Promise.resolve(resolve(rootValue, argumentsObjectFromField(field, variables), execContext.context, { field: field, fragmentMap: execContext.fragmentMap }));\n                        }\n                    }\n                }\n                return [2, resultPromise.then(function (result) {\n                        if (result === void 0) { result = defaultResult; }\n                        if (field.directives) {\n                            field.directives.forEach(function (directive) {\n                                if (directive.name.value === 'export' && directive.arguments) {\n                                    directive.arguments.forEach(function (arg) {\n                                        if (arg.name.value === 'as' && arg.value.kind === 'StringValue') {\n                                            execContext.exportedVariables[arg.value.value] = result;\n                                        }\n                                    });\n                                }\n                            });\n                        }\n                        if (!field.selectionSet) {\n                            return result;\n                        }\n                        if (result == null) {\n                            return result;\n                        }\n                        if (Array.isArray(result)) {\n                            return _this.resolveSubSelectedArray(field, result, execContext);\n                        }\n                        if (field.selectionSet) {\n                            return _this.resolveSelectionSet(field.selectionSet, result, execContext);\n                        }\n                    })];\n            });\n        });\n    };\n    LocalState.prototype.resolveSubSelectedArray = function (field, result, execContext) {\n        var _this = this;\n        return Promise.all(result.map(function (item) {\n            if (item === null) {\n                return null;\n            }\n            if (Array.isArray(item)) {\n                return _this.resolveSubSelectedArray(field, item, execContext);\n            }\n            if (field.selectionSet) {\n                return _this.resolveSelectionSet(field.selectionSet, item, execContext);\n            }\n        }));\n    };\n    return LocalState;\n}());\n\nfunction multiplex(inner) {\n    var observers = new Set();\n    var sub = null;\n    return new Observable(function (observer) {\n        observers.add(observer);\n        sub = sub || inner.subscribe({\n            next: function (value) {\n                observers.forEach(function (obs) { return obs.next && obs.next(value); });\n            },\n            error: function (error) {\n                observers.forEach(function (obs) { return obs.error && obs.error(error); });\n            },\n            complete: function () {\n                observers.forEach(function (obs) { return obs.complete && obs.complete(); });\n            },\n        });\n        return function () {\n            if (observers.delete(observer) && !observers.size && sub) {\n                sub.unsubscribe();\n                sub = null;\n            }\n        };\n    });\n}\nfunction asyncMap(observable, mapFn) {\n    return new Observable(function (observer) {\n        var next = observer.next, error = observer.error, complete = observer.complete;\n        var activeNextCount = 0;\n        var completed = false;\n        var handler = {\n            next: function (value) {\n                ++activeNextCount;\n                new Promise(function (resolve) {\n                    resolve(mapFn(value));\n                }).then(function (result) {\n                    --activeNextCount;\n                    next && next.call(observer, result);\n                    completed && handler.complete();\n                }, function (e) {\n                    --activeNextCount;\n                    error && error.call(observer, e);\n                });\n            },\n            error: function (e) {\n                error && error.call(observer, e);\n            },\n            complete: function () {\n                completed = true;\n                if (!activeNextCount) {\n                    complete && complete.call(observer);\n                }\n            },\n        };\n        var sub = observable.subscribe(handler);\n        return function () { return sub.unsubscribe(); };\n    });\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar QueryManager = (function () {\n    function QueryManager(_a) {\n        var link = _a.link, _b = _a.queryDeduplication, queryDeduplication = _b === void 0 ? false : _b, store = _a.store, _c = _a.onBroadcast, onBroadcast = _c === void 0 ? function () { return undefined; } : _c, _d = _a.ssrMode, ssrMode = _d === void 0 ? false : _d, _e = _a.clientAwareness, clientAwareness = _e === void 0 ? {} : _e, localState = _a.localState, assumeImmutableResults = _a.assumeImmutableResults;\n        this.mutationStore = new MutationStore();\n        this.queryStore = new QueryStore();\n        this.clientAwareness = {};\n        this.idCounter = 1;\n        this.queries = new Map();\n        this.fetchQueryRejectFns = new Map();\n        this.transformCache = new (canUseWeakMap ? WeakMap : Map)();\n        this.inFlightLinkObservables = new Map();\n        this.pollingInfoByQueryId = new Map();\n        this.link = link;\n        this.queryDeduplication = queryDeduplication;\n        this.dataStore = store;\n        this.onBroadcast = onBroadcast;\n        this.clientAwareness = clientAwareness;\n        this.localState = localState || new LocalState({ cache: store.getCache() });\n        this.ssrMode = ssrMode;\n        this.assumeImmutableResults = !!assumeImmutableResults;\n    }\n    QueryManager.prototype.stop = function () {\n        var _this = this;\n        this.queries.forEach(function (_info, queryId) {\n            _this.stopQueryNoBroadcast(queryId);\n        });\n        this.fetchQueryRejectFns.forEach(function (reject) {\n            reject(process.env.NODE_ENV === \"production\" ? new InvariantError(8) : new InvariantError('QueryManager stopped while query was in flight'));\n        });\n    };\n    QueryManager.prototype.mutate = function (_a) {\n        var mutation = _a.mutation, variables = _a.variables, optimisticResponse = _a.optimisticResponse, updateQueriesByName = _a.updateQueries, _b = _a.refetchQueries, refetchQueries = _b === void 0 ? [] : _b, _c = _a.awaitRefetchQueries, awaitRefetchQueries = _c === void 0 ? false : _c, updateWithProxyFn = _a.update, _d = _a.errorPolicy, errorPolicy = _d === void 0 ? 'none' : _d, fetchPolicy = _a.fetchPolicy, _e = _a.context, context = _e === void 0 ? {} : _e;\n        return __awaiter(this, void 0, void 0, function () {\n            var mutationId, generateUpdateQueriesInfo, self;\n            var _this = this;\n            return __generator(this, function (_f) {\n                switch (_f.label) {\n                    case 0:\n                        process.env.NODE_ENV === \"production\" ? invariant(mutation, 9) : invariant(mutation, 'mutation option is required. You must specify your GraphQL document in the mutation option.');\n                        process.env.NODE_ENV === \"production\" ? invariant(!fetchPolicy || fetchPolicy === 'no-cache', 10) : invariant(!fetchPolicy || fetchPolicy === 'no-cache', \"Mutations only support a 'no-cache' fetchPolicy. If you don't want to disable the cache, remove your fetchPolicy setting to proceed with the default mutation behavior.\");\n                        mutationId = this.generateQueryId();\n                        mutation = this.transform(mutation).document;\n                        this.setQuery(mutationId, function () { return ({ document: mutation }); });\n                        variables = this.getVariables(mutation, variables);\n                        if (!this.transform(mutation).hasClientExports) return [3, 2];\n                        return [4, this.localState.addExportedVariables(mutation, variables, context)];\n                    case 1:\n                        variables = _f.sent();\n                        _f.label = 2;\n                    case 2:\n                        generateUpdateQueriesInfo = function () {\n                            var ret = {};\n                            if (updateQueriesByName) {\n                                _this.queries.forEach(function (_a, queryId) {\n                                    var observableQuery = _a.observableQuery;\n                                    if (observableQuery) {\n                                        var queryName = observableQuery.queryName;\n                                        if (queryName &&\n                                            hasOwnProperty.call(updateQueriesByName, queryName)) {\n                                            ret[queryId] = {\n                                                updater: updateQueriesByName[queryName],\n                                                query: _this.queryStore.get(queryId),\n                                            };\n                                        }\n                                    }\n                                });\n                            }\n                            return ret;\n                        };\n                        this.mutationStore.initMutation(mutationId, mutation, variables);\n                        this.dataStore.markMutationInit({\n                            mutationId: mutationId,\n                            document: mutation,\n                            variables: variables,\n                            updateQueries: generateUpdateQueriesInfo(),\n                            update: updateWithProxyFn,\n                            optimisticResponse: optimisticResponse,\n                        });\n                        this.broadcastQueries();\n                        self = this;\n                        return [2, new Promise(function (resolve, reject) {\n                                var storeResult;\n                                var error;\n                                self.getObservableFromLink(mutation, __assign(__assign({}, context), { optimisticResponse: optimisticResponse }), variables, false).subscribe({\n                                    next: function (result) {\n                                        if (graphQLResultHasError(result) && errorPolicy === 'none') {\n                                            error = new ApolloError({\n                                                graphQLErrors: result.errors,\n                                            });\n                                            return;\n                                        }\n                                        self.mutationStore.markMutationResult(mutationId);\n                                        if (fetchPolicy !== 'no-cache') {\n                                            self.dataStore.markMutationResult({\n                                                mutationId: mutationId,\n                                                result: result,\n                                                document: mutation,\n                                                variables: variables,\n                                                updateQueries: generateUpdateQueriesInfo(),\n                                                update: updateWithProxyFn,\n                                            });\n                                        }\n                                        storeResult = result;\n                                    },\n                                    error: function (err) {\n                                        self.mutationStore.markMutationError(mutationId, err);\n                                        self.dataStore.markMutationComplete({\n                                            mutationId: mutationId,\n                                            optimisticResponse: optimisticResponse,\n                                        });\n                                        self.broadcastQueries();\n                                        self.setQuery(mutationId, function () { return ({ document: null }); });\n                                        reject(new ApolloError({\n                                            networkError: err,\n                                        }));\n                                    },\n                                    complete: function () {\n                                        if (error) {\n                                            self.mutationStore.markMutationError(mutationId, error);\n                                        }\n                                        self.dataStore.markMutationComplete({\n                                            mutationId: mutationId,\n                                            optimisticResponse: optimisticResponse,\n                                        });\n                                        self.broadcastQueries();\n                                        if (error) {\n                                            reject(error);\n                                            return;\n                                        }\n                                        if (typeof refetchQueries === 'function') {\n                                            refetchQueries = refetchQueries(storeResult);\n                                        }\n                                        var refetchQueryPromises = [];\n                                        if (isNonEmptyArray(refetchQueries)) {\n                                            refetchQueries.forEach(function (refetchQuery) {\n                                                if (typeof refetchQuery === 'string') {\n                                                    self.queries.forEach(function (_a) {\n                                                        var observableQuery = _a.observableQuery;\n                                                        if (observableQuery &&\n                                                            observableQuery.queryName === refetchQuery) {\n                                                            refetchQueryPromises.push(observableQuery.refetch());\n                                                        }\n                                                    });\n                                                }\n                                                else {\n                                                    var queryOptions = {\n                                                        query: refetchQuery.query,\n                                                        variables: refetchQuery.variables,\n                                                        fetchPolicy: 'network-only',\n                                                    };\n                                                    if (refetchQuery.context) {\n                                                        queryOptions.context = refetchQuery.context;\n                                                    }\n                                                    refetchQueryPromises.push(self.query(queryOptions));\n                                                }\n                                            });\n                                        }\n                                        Promise.all(awaitRefetchQueries ? refetchQueryPromises : []).then(function () {\n                                            self.setQuery(mutationId, function () { return ({ document: null }); });\n                                            if (errorPolicy === 'ignore' &&\n                                                storeResult &&\n                                                graphQLResultHasError(storeResult)) {\n                                                delete storeResult.errors;\n                                            }\n                                            resolve(storeResult);\n                                        });\n                                    },\n                                });\n                            })];\n                }\n            });\n        });\n    };\n    QueryManager.prototype.fetchQuery = function (queryId, options, fetchType, fetchMoreForQueryId) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, metadata, _b, fetchPolicy, _c, context, query, variables, storeResult, isNetworkOnly, needToFetch, _d, complete, result, shouldFetch, requestId, cancel, networkResult;\n            var _this = this;\n            return __generator(this, function (_e) {\n                switch (_e.label) {\n                    case 0:\n                        _a = options.metadata, metadata = _a === void 0 ? null : _a, _b = options.fetchPolicy, fetchPolicy = _b === void 0 ? 'cache-first' : _b, _c = options.context, context = _c === void 0 ? {} : _c;\n                        query = this.transform(options.query).document;\n                        variables = this.getVariables(query, options.variables);\n                        if (!this.transform(query).hasClientExports) return [3, 2];\n                        return [4, this.localState.addExportedVariables(query, variables, context)];\n                    case 1:\n                        variables = _e.sent();\n                        _e.label = 2;\n                    case 2:\n                        options = __assign(__assign({}, options), { variables: variables });\n                        isNetworkOnly = fetchPolicy === 'network-only' || fetchPolicy === 'no-cache';\n                        needToFetch = isNetworkOnly;\n                        if (!isNetworkOnly) {\n                            _d = this.dataStore.getCache().diff({\n                                query: query,\n                                variables: variables,\n                                returnPartialData: true,\n                                optimistic: false,\n                            }), complete = _d.complete, result = _d.result;\n                            needToFetch = !complete || fetchPolicy === 'cache-and-network';\n                            storeResult = result;\n                        }\n                        shouldFetch = needToFetch && fetchPolicy !== 'cache-only' && fetchPolicy !== 'standby';\n                        if (hasDirectives(['live'], query))\n                            shouldFetch = true;\n                        requestId = this.idCounter++;\n                        cancel = fetchPolicy !== 'no-cache'\n                            ? this.updateQueryWatch(queryId, query, options)\n                            : undefined;\n                        this.setQuery(queryId, function () { return ({\n                            document: query,\n                            lastRequestId: requestId,\n                            invalidated: true,\n                            cancel: cancel,\n                        }); });\n                        this.invalidate(fetchMoreForQueryId);\n                        this.queryStore.initQuery({\n                            queryId: queryId,\n                            document: query,\n                            storePreviousVariables: shouldFetch,\n                            variables: variables,\n                            isPoll: fetchType === FetchType.poll,\n                            isRefetch: fetchType === FetchType.refetch,\n                            metadata: metadata,\n                            fetchMoreForQueryId: fetchMoreForQueryId,\n                        });\n                        this.broadcastQueries();\n                        if (shouldFetch) {\n                            networkResult = this.fetchRequest({\n                                requestId: requestId,\n                                queryId: queryId,\n                                document: query,\n                                options: options,\n                                fetchMoreForQueryId: fetchMoreForQueryId,\n                            }).catch(function (error) {\n                                if (isApolloError(error)) {\n                                    throw error;\n                                }\n                                else {\n                                    if (requestId >= _this.getQuery(queryId).lastRequestId) {\n                                        _this.queryStore.markQueryError(queryId, error, fetchMoreForQueryId);\n                                        _this.invalidate(queryId);\n                                        _this.invalidate(fetchMoreForQueryId);\n                                        _this.broadcastQueries();\n                                    }\n                                    throw new ApolloError({ networkError: error });\n                                }\n                            });\n                            if (fetchPolicy !== 'cache-and-network') {\n                                return [2, networkResult];\n                            }\n                            networkResult.catch(function () { });\n                        }\n                        this.queryStore.markQueryResultClient(queryId, !shouldFetch);\n                        this.invalidate(queryId);\n                        this.invalidate(fetchMoreForQueryId);\n                        if (this.transform(query).hasForcedResolvers) {\n                            return [2, this.localState.runResolvers({\n                                    document: query,\n                                    remoteResult: { data: storeResult },\n                                    context: context,\n                                    variables: variables,\n                                    onlyRunForcedResolvers: true,\n                                }).then(function (result) {\n                                    _this.markQueryResult(queryId, result, options, fetchMoreForQueryId);\n                                    _this.broadcastQueries();\n                                    return result;\n                                })];\n                        }\n                        this.broadcastQueries();\n                        return [2, { data: storeResult }];\n                }\n            });\n        });\n    };\n    QueryManager.prototype.markQueryResult = function (queryId, result, _a, fetchMoreForQueryId) {\n        var fetchPolicy = _a.fetchPolicy, variables = _a.variables, errorPolicy = _a.errorPolicy;\n        if (fetchPolicy === 'no-cache') {\n            this.setQuery(queryId, function () { return ({\n                newData: { result: result.data, complete: true },\n            }); });\n        }\n        else {\n            this.dataStore.markQueryResult(result, this.getQuery(queryId).document, variables, fetchMoreForQueryId, errorPolicy === 'ignore' || errorPolicy === 'all');\n        }\n    };\n    QueryManager.prototype.queryListenerForObserver = function (queryId, options, observer) {\n        var _this = this;\n        function invoke(method, argument) {\n            if (observer[method]) {\n                try {\n                    observer[method](argument);\n                }\n                catch (e) {\n                    process.env.NODE_ENV === \"production\" || invariant.error(e);\n                }\n            }\n            else if (method === 'error') {\n                process.env.NODE_ENV === \"production\" || invariant.error(argument);\n            }\n        }\n        return function (queryStoreValue, newData) {\n            _this.invalidate(queryId, false);\n            if (!queryStoreValue)\n                return;\n            var _a = _this.getQuery(queryId), observableQuery = _a.observableQuery, document = _a.document;\n            var fetchPolicy = observableQuery\n                ? observableQuery.options.fetchPolicy\n                : options.fetchPolicy;\n            if (fetchPolicy === 'standby')\n                return;\n            var loading = isNetworkRequestInFlight(queryStoreValue.networkStatus);\n            var lastResult = observableQuery && observableQuery.getLastResult();\n            var networkStatusChanged = !!(lastResult &&\n                lastResult.networkStatus !== queryStoreValue.networkStatus);\n            var shouldNotifyIfLoading = options.returnPartialData ||\n                (!newData && queryStoreValue.previousVariables) ||\n                (networkStatusChanged && options.notifyOnNetworkStatusChange) ||\n                fetchPolicy === 'cache-only' ||\n                fetchPolicy === 'cache-and-network';\n            if (loading && !shouldNotifyIfLoading) {\n                return;\n            }\n            var hasGraphQLErrors = isNonEmptyArray(queryStoreValue.graphQLErrors);\n            var errorPolicy = observableQuery\n                && observableQuery.options.errorPolicy\n                || options.errorPolicy\n                || 'none';\n            if (errorPolicy === 'none' && hasGraphQLErrors || queryStoreValue.networkError) {\n                return invoke('error', new ApolloError({\n                    graphQLErrors: queryStoreValue.graphQLErrors,\n                    networkError: queryStoreValue.networkError,\n                }));\n            }\n            try {\n                var data = void 0;\n                var isMissing = void 0;\n                if (newData) {\n                    if (fetchPolicy !== 'no-cache' && fetchPolicy !== 'network-only') {\n                        _this.setQuery(queryId, function () { return ({ newData: null }); });\n                    }\n                    data = newData.result;\n                    isMissing = !newData.complete;\n                }\n                else {\n                    var lastError = observableQuery && observableQuery.getLastError();\n                    var errorStatusChanged = errorPolicy !== 'none' &&\n                        (lastError && lastError.graphQLErrors) !==\n                            queryStoreValue.graphQLErrors;\n                    if (lastResult && lastResult.data && !errorStatusChanged) {\n                        data = lastResult.data;\n                        isMissing = false;\n                    }\n                    else {\n                        var diffResult = _this.dataStore.getCache().diff({\n                            query: document,\n                            variables: queryStoreValue.previousVariables ||\n                                queryStoreValue.variables,\n                            returnPartialData: true,\n                            optimistic: true,\n                        });\n                        data = diffResult.result;\n                        isMissing = !diffResult.complete;\n                    }\n                }\n                var stale = isMissing && !(options.returnPartialData ||\n                    fetchPolicy === 'cache-only');\n                var resultFromStore = {\n                    data: stale ? lastResult && lastResult.data : data,\n                    loading: loading,\n                    networkStatus: queryStoreValue.networkStatus,\n                    stale: stale,\n                };\n                if (errorPolicy === 'all' && hasGraphQLErrors) {\n                    resultFromStore.errors = queryStoreValue.graphQLErrors;\n                }\n                invoke('next', resultFromStore);\n            }\n            catch (networkError) {\n                invoke('error', new ApolloError({ networkError: networkError }));\n            }\n        };\n    };\n    QueryManager.prototype.transform = function (document) {\n        var transformCache = this.transformCache;\n        if (!transformCache.has(document)) {\n            var cache = this.dataStore.getCache();\n            var transformed = cache.transformDocument(document);\n            var forLink = removeConnectionDirectiveFromDocument(cache.transformForLink(transformed));\n            var clientQuery = this.localState.clientQuery(transformed);\n            var serverQuery = this.localState.serverQuery(forLink);\n            var cacheEntry_1 = {\n                document: transformed,\n                hasClientExports: hasClientExports(transformed),\n                hasForcedResolvers: this.localState.shouldForceResolvers(transformed),\n                clientQuery: clientQuery,\n                serverQuery: serverQuery,\n                defaultVars: getDefaultValues(getOperationDefinition(transformed)),\n            };\n            var add = function (doc) {\n                if (doc && !transformCache.has(doc)) {\n                    transformCache.set(doc, cacheEntry_1);\n                }\n            };\n            add(document);\n            add(transformed);\n            add(clientQuery);\n            add(serverQuery);\n        }\n        return transformCache.get(document);\n    };\n    QueryManager.prototype.getVariables = function (document, variables) {\n        return __assign(__assign({}, this.transform(document).defaultVars), variables);\n    };\n    QueryManager.prototype.watchQuery = function (options, shouldSubscribe) {\n        if (shouldSubscribe === void 0) { shouldSubscribe = true; }\n        process.env.NODE_ENV === \"production\" ? invariant(options.fetchPolicy !== 'standby', 11) : invariant(options.fetchPolicy !== 'standby', 'client.watchQuery cannot be called with fetchPolicy set to \"standby\"');\n        options.variables = this.getVariables(options.query, options.variables);\n        if (typeof options.notifyOnNetworkStatusChange === 'undefined') {\n            options.notifyOnNetworkStatusChange = false;\n        }\n        var transformedOptions = __assign({}, options);\n        return new ObservableQuery({\n            queryManager: this,\n            options: transformedOptions,\n            shouldSubscribe: shouldSubscribe,\n        });\n    };\n    QueryManager.prototype.query = function (options) {\n        var _this = this;\n        process.env.NODE_ENV === \"production\" ? invariant(options.query, 12) : invariant(options.query, 'query option is required. You must specify your GraphQL document ' +\n            'in the query option.');\n        process.env.NODE_ENV === \"production\" ? invariant(options.query.kind === 'Document', 13) : invariant(options.query.kind === 'Document', 'You must wrap the query string in a \"gql\" tag.');\n        process.env.NODE_ENV === \"production\" ? invariant(!options.returnPartialData, 14) : invariant(!options.returnPartialData, 'returnPartialData option only supported on watchQuery.');\n        process.env.NODE_ENV === \"production\" ? invariant(!options.pollInterval, 15) : invariant(!options.pollInterval, 'pollInterval option only supported on watchQuery.');\n        return new Promise(function (resolve, reject) {\n            var watchedQuery = _this.watchQuery(options, false);\n            _this.fetchQueryRejectFns.set(\"query:\" + watchedQuery.queryId, reject);\n            watchedQuery\n                .result()\n                .then(resolve, reject)\n                .then(function () {\n                return _this.fetchQueryRejectFns.delete(\"query:\" + watchedQuery.queryId);\n            });\n        });\n    };\n    QueryManager.prototype.generateQueryId = function () {\n        return String(this.idCounter++);\n    };\n    QueryManager.prototype.stopQueryInStore = function (queryId) {\n        this.stopQueryInStoreNoBroadcast(queryId);\n        this.broadcastQueries();\n    };\n    QueryManager.prototype.stopQueryInStoreNoBroadcast = function (queryId) {\n        this.stopPollingQuery(queryId);\n        this.queryStore.stopQuery(queryId);\n        this.invalidate(queryId);\n    };\n    QueryManager.prototype.addQueryListener = function (queryId, listener) {\n        this.setQuery(queryId, function (_a) {\n            var listeners = _a.listeners;\n            listeners.add(listener);\n            return { invalidated: false };\n        });\n    };\n    QueryManager.prototype.updateQueryWatch = function (queryId, document, options) {\n        var _this = this;\n        var cancel = this.getQuery(queryId).cancel;\n        if (cancel)\n            cancel();\n        var previousResult = function () {\n            var previousResult = null;\n            var observableQuery = _this.getQuery(queryId).observableQuery;\n            if (observableQuery) {\n                var lastResult = observableQuery.getLastResult();\n                if (lastResult) {\n                    previousResult = lastResult.data;\n                }\n            }\n            return previousResult;\n        };\n        return this.dataStore.getCache().watch({\n            query: document,\n            variables: options.variables,\n            optimistic: true,\n            previousResult: previousResult,\n            callback: function (newData) {\n                _this.setQuery(queryId, function () { return ({ invalidated: true, newData: newData }); });\n            },\n        });\n    };\n    QueryManager.prototype.addObservableQuery = function (queryId, observableQuery) {\n        this.setQuery(queryId, function () { return ({ observableQuery: observableQuery }); });\n    };\n    QueryManager.prototype.removeObservableQuery = function (queryId) {\n        var cancel = this.getQuery(queryId).cancel;\n        this.setQuery(queryId, function () { return ({ observableQuery: null }); });\n        if (cancel)\n            cancel();\n    };\n    QueryManager.prototype.clearStore = function () {\n        this.fetchQueryRejectFns.forEach(function (reject) {\n            reject(process.env.NODE_ENV === \"production\" ? new InvariantError(16) : new InvariantError('Store reset while query was in flight (not completed in link chain)'));\n        });\n        var resetIds = [];\n        this.queries.forEach(function (_a, queryId) {\n            var observableQuery = _a.observableQuery;\n            if (observableQuery)\n                resetIds.push(queryId);\n        });\n        this.queryStore.reset(resetIds);\n        this.mutationStore.reset();\n        return this.dataStore.reset();\n    };\n    QueryManager.prototype.resetStore = function () {\n        var _this = this;\n        return this.clearStore().then(function () {\n            return _this.reFetchObservableQueries();\n        });\n    };\n    QueryManager.prototype.reFetchObservableQueries = function (includeStandby) {\n        var _this = this;\n        if (includeStandby === void 0) { includeStandby = false; }\n        var observableQueryPromises = [];\n        this.queries.forEach(function (_a, queryId) {\n            var observableQuery = _a.observableQuery;\n            if (observableQuery) {\n                var fetchPolicy = observableQuery.options.fetchPolicy;\n                observableQuery.resetLastResults();\n                if (fetchPolicy !== 'cache-only' &&\n                    (includeStandby || fetchPolicy !== 'standby')) {\n                    observableQueryPromises.push(observableQuery.refetch());\n                }\n                _this.setQuery(queryId, function () { return ({ newData: null }); });\n                _this.invalidate(queryId);\n            }\n        });\n        this.broadcastQueries();\n        return Promise.all(observableQueryPromises);\n    };\n    QueryManager.prototype.observeQuery = function (queryId, options, observer) {\n        this.addQueryListener(queryId, this.queryListenerForObserver(queryId, options, observer));\n        return this.fetchQuery(queryId, options);\n    };\n    QueryManager.prototype.startQuery = function (queryId, options, listener) {\n        process.env.NODE_ENV === \"production\" || invariant.warn(\"The QueryManager.startQuery method has been deprecated\");\n        this.addQueryListener(queryId, listener);\n        this.fetchQuery(queryId, options)\n            .catch(function () { return undefined; });\n        return queryId;\n    };\n    QueryManager.prototype.startGraphQLSubscription = function (_a) {\n        var _this = this;\n        var query = _a.query, fetchPolicy = _a.fetchPolicy, variables = _a.variables;\n        query = this.transform(query).document;\n        variables = this.getVariables(query, variables);\n        var makeObservable = function (variables) {\n            return _this.getObservableFromLink(query, {}, variables, false).map(function (result) {\n                if (!fetchPolicy || fetchPolicy !== 'no-cache') {\n                    _this.dataStore.markSubscriptionResult(result, query, variables);\n                    _this.broadcastQueries();\n                }\n                if (graphQLResultHasError(result)) {\n                    throw new ApolloError({\n                        graphQLErrors: result.errors,\n                    });\n                }\n                return result;\n            });\n        };\n        if (this.transform(query).hasClientExports) {\n            var observablePromise_1 = this.localState.addExportedVariables(query, variables).then(makeObservable);\n            return new Observable(function (observer) {\n                var sub = null;\n                observablePromise_1.then(function (observable) { return sub = observable.subscribe(observer); }, observer.error);\n                return function () { return sub && sub.unsubscribe(); };\n            });\n        }\n        return makeObservable(variables);\n    };\n    QueryManager.prototype.stopQuery = function (queryId) {\n        this.stopQueryNoBroadcast(queryId);\n        this.broadcastQueries();\n    };\n    QueryManager.prototype.stopQueryNoBroadcast = function (queryId) {\n        this.stopQueryInStoreNoBroadcast(queryId);\n        this.removeQuery(queryId);\n    };\n    QueryManager.prototype.removeQuery = function (queryId) {\n        this.fetchQueryRejectFns.delete(\"query:\" + queryId);\n        this.fetchQueryRejectFns.delete(\"fetchRequest:\" + queryId);\n        this.getQuery(queryId).subscriptions.forEach(function (x) { return x.unsubscribe(); });\n        this.queries.delete(queryId);\n    };\n    QueryManager.prototype.getCurrentQueryResult = function (observableQuery, optimistic) {\n        if (optimistic === void 0) { optimistic = true; }\n        var _a = observableQuery.options, variables = _a.variables, query = _a.query, fetchPolicy = _a.fetchPolicy, returnPartialData = _a.returnPartialData;\n        var lastResult = observableQuery.getLastResult();\n        var newData = this.getQuery(observableQuery.queryId).newData;\n        if (newData && newData.complete) {\n            return { data: newData.result, partial: false };\n        }\n        if (fetchPolicy === 'no-cache' || fetchPolicy === 'network-only') {\n            return { data: undefined, partial: false };\n        }\n        var _b = this.dataStore.getCache().diff({\n            query: query,\n            variables: variables,\n            previousResult: lastResult ? lastResult.data : undefined,\n            returnPartialData: true,\n            optimistic: optimistic,\n        }), result = _b.result, complete = _b.complete;\n        return {\n            data: (complete || returnPartialData) ? result : void 0,\n            partial: !complete,\n        };\n    };\n    QueryManager.prototype.getQueryWithPreviousResult = function (queryIdOrObservable) {\n        var observableQuery;\n        if (typeof queryIdOrObservable === 'string') {\n            var foundObserveableQuery = this.getQuery(queryIdOrObservable).observableQuery;\n            process.env.NODE_ENV === \"production\" ? invariant(foundObserveableQuery, 17) : invariant(foundObserveableQuery, \"ObservableQuery with this id doesn't exist: \" + queryIdOrObservable);\n            observableQuery = foundObserveableQuery;\n        }\n        else {\n            observableQuery = queryIdOrObservable;\n        }\n        var _a = observableQuery.options, variables = _a.variables, query = _a.query;\n        return {\n            previousResult: this.getCurrentQueryResult(observableQuery, false).data,\n            variables: variables,\n            document: query,\n        };\n    };\n    QueryManager.prototype.broadcastQueries = function () {\n        var _this = this;\n        this.onBroadcast();\n        this.queries.forEach(function (info, id) {\n            if (info.invalidated) {\n                info.listeners.forEach(function (listener) {\n                    if (listener) {\n                        listener(_this.queryStore.get(id), info.newData);\n                    }\n                });\n            }\n        });\n    };\n    QueryManager.prototype.getLocalState = function () {\n        return this.localState;\n    };\n    QueryManager.prototype.getObservableFromLink = function (query, context, variables, deduplication) {\n        var _this = this;\n        if (deduplication === void 0) { deduplication = this.queryDeduplication; }\n        var observable;\n        var serverQuery = this.transform(query).serverQuery;\n        if (serverQuery) {\n            var _a = this, inFlightLinkObservables_1 = _a.inFlightLinkObservables, link = _a.link;\n            var operation = {\n                query: serverQuery,\n                variables: variables,\n                operationName: getOperationName(serverQuery) || void 0,\n                context: this.prepareContext(__assign(__assign({}, context), { forceFetch: !deduplication })),\n            };\n            context = operation.context;\n            if (deduplication) {\n                var byVariables_1 = inFlightLinkObservables_1.get(serverQuery) || new Map();\n                inFlightLinkObservables_1.set(serverQuery, byVariables_1);\n                var varJson_1 = JSON.stringify(variables);\n                observable = byVariables_1.get(varJson_1);\n                if (!observable) {\n                    byVariables_1.set(varJson_1, observable = multiplex(execute(link, operation)));\n                    var cleanup = function () {\n                        byVariables_1.delete(varJson_1);\n                        if (!byVariables_1.size)\n                            inFlightLinkObservables_1.delete(serverQuery);\n                        cleanupSub_1.unsubscribe();\n                    };\n                    var cleanupSub_1 = observable.subscribe({\n                        next: cleanup,\n                        error: cleanup,\n                        complete: cleanup,\n                    });\n                }\n            }\n            else {\n                observable = multiplex(execute(link, operation));\n            }\n        }\n        else {\n            observable = Observable.of({ data: {} });\n            context = this.prepareContext(context);\n        }\n        var clientQuery = this.transform(query).clientQuery;\n        if (clientQuery) {\n            observable = asyncMap(observable, function (result) {\n                return _this.localState.runResolvers({\n                    document: clientQuery,\n                    remoteResult: result,\n                    context: context,\n                    variables: variables,\n                });\n            });\n        }\n        return observable;\n    };\n    QueryManager.prototype.fetchRequest = function (_a) {\n        var _this = this;\n        var requestId = _a.requestId, queryId = _a.queryId, document = _a.document, options = _a.options, fetchMoreForQueryId = _a.fetchMoreForQueryId;\n        var variables = options.variables, _b = options.errorPolicy, errorPolicy = _b === void 0 ? 'none' : _b, fetchPolicy = options.fetchPolicy;\n        var resultFromStore;\n        var errorsFromStore;\n        return new Promise(function (resolve, reject) {\n            var observable = _this.getObservableFromLink(document, options.context, variables);\n            var fqrfId = \"fetchRequest:\" + queryId;\n            _this.fetchQueryRejectFns.set(fqrfId, reject);\n            var cleanup = function () {\n                _this.fetchQueryRejectFns.delete(fqrfId);\n                _this.setQuery(queryId, function (_a) {\n                    var subscriptions = _a.subscriptions;\n                    subscriptions.delete(subscription);\n                });\n            };\n            var subscription = observable.map(function (result) {\n                if (requestId >= _this.getQuery(queryId).lastRequestId) {\n                    _this.markQueryResult(queryId, result, options, fetchMoreForQueryId);\n                    _this.queryStore.markQueryResult(queryId, result, fetchMoreForQueryId);\n                    _this.invalidate(queryId);\n                    _this.invalidate(fetchMoreForQueryId);\n                    _this.broadcastQueries();\n                }\n                if (errorPolicy === 'none' && isNonEmptyArray(result.errors)) {\n                    return reject(new ApolloError({\n                        graphQLErrors: result.errors,\n                    }));\n                }\n                if (errorPolicy === 'all') {\n                    errorsFromStore = result.errors;\n                }\n                if (fetchMoreForQueryId || fetchPolicy === 'no-cache') {\n                    resultFromStore = result.data;\n                }\n                else {\n                    var _a = _this.dataStore.getCache().diff({\n                        variables: variables,\n                        query: document,\n                        optimistic: false,\n                        returnPartialData: true,\n                    }), result_1 = _a.result, complete = _a.complete;\n                    if (complete || options.returnPartialData) {\n                        resultFromStore = result_1;\n                    }\n                }\n            }).subscribe({\n                error: function (error) {\n                    cleanup();\n                    reject(error);\n                },\n                complete: function () {\n                    cleanup();\n                    resolve({\n                        data: resultFromStore,\n                        errors: errorsFromStore,\n                        loading: false,\n                        networkStatus: NetworkStatus.ready,\n                        stale: false,\n                    });\n                },\n            });\n            _this.setQuery(queryId, function (_a) {\n                var subscriptions = _a.subscriptions;\n                subscriptions.add(subscription);\n            });\n        });\n    };\n    QueryManager.prototype.getQuery = function (queryId) {\n        return (this.queries.get(queryId) || {\n            listeners: new Set(),\n            invalidated: false,\n            document: null,\n            newData: null,\n            lastRequestId: 1,\n            observableQuery: null,\n            subscriptions: new Set(),\n        });\n    };\n    QueryManager.prototype.setQuery = function (queryId, updater) {\n        var prev = this.getQuery(queryId);\n        var newInfo = __assign(__assign({}, prev), updater(prev));\n        this.queries.set(queryId, newInfo);\n    };\n    QueryManager.prototype.invalidate = function (queryId, invalidated) {\n        if (invalidated === void 0) { invalidated = true; }\n        if (queryId) {\n            this.setQuery(queryId, function () { return ({ invalidated: invalidated }); });\n        }\n    };\n    QueryManager.prototype.prepareContext = function (context) {\n        if (context === void 0) { context = {}; }\n        var newContext = this.localState.prepareContext(context);\n        return __assign(__assign({}, newContext), { clientAwareness: this.clientAwareness });\n    };\n    QueryManager.prototype.checkInFlight = function (queryId) {\n        var query = this.queryStore.get(queryId);\n        return (query &&\n            query.networkStatus !== NetworkStatus.ready &&\n            query.networkStatus !== NetworkStatus.error);\n    };\n    QueryManager.prototype.startPollingQuery = function (options, queryId, listener) {\n        var _this = this;\n        var pollInterval = options.pollInterval;\n        process.env.NODE_ENV === \"production\" ? invariant(pollInterval, 18) : invariant(pollInterval, 'Attempted to start a polling query without a polling interval.');\n        if (!this.ssrMode) {\n            var info = this.pollingInfoByQueryId.get(queryId);\n            if (!info) {\n                this.pollingInfoByQueryId.set(queryId, (info = {}));\n            }\n            info.interval = pollInterval;\n            info.options = __assign(__assign({}, options), { fetchPolicy: 'network-only' });\n            var maybeFetch_1 = function () {\n                var info = _this.pollingInfoByQueryId.get(queryId);\n                if (info) {\n                    if (_this.checkInFlight(queryId)) {\n                        poll_1();\n                    }\n                    else {\n                        _this.fetchQuery(queryId, info.options, FetchType.poll).then(poll_1, poll_1);\n                    }\n                }\n            };\n            var poll_1 = function () {\n                var info = _this.pollingInfoByQueryId.get(queryId);\n                if (info) {\n                    clearTimeout(info.timeout);\n                    info.timeout = setTimeout(maybeFetch_1, info.interval);\n                }\n            };\n            if (listener) {\n                this.addQueryListener(queryId, listener);\n            }\n            poll_1();\n        }\n        return queryId;\n    };\n    QueryManager.prototype.stopPollingQuery = function (queryId) {\n        this.pollingInfoByQueryId.delete(queryId);\n    };\n    return QueryManager;\n}());\n\nvar DataStore = (function () {\n    function DataStore(initialCache) {\n        this.cache = initialCache;\n    }\n    DataStore.prototype.getCache = function () {\n        return this.cache;\n    };\n    DataStore.prototype.markQueryResult = function (result, document, variables, fetchMoreForQueryId, ignoreErrors) {\n        if (ignoreErrors === void 0) { ignoreErrors = false; }\n        var writeWithErrors = !graphQLResultHasError(result);\n        if (ignoreErrors && graphQLResultHasError(result) && result.data) {\n            writeWithErrors = true;\n        }\n        if (!fetchMoreForQueryId && writeWithErrors) {\n            this.cache.write({\n                result: result.data,\n                dataId: 'ROOT_QUERY',\n                query: document,\n                variables: variables,\n            });\n        }\n    };\n    DataStore.prototype.markSubscriptionResult = function (result, document, variables) {\n        if (!graphQLResultHasError(result)) {\n            this.cache.write({\n                result: result.data,\n                dataId: 'ROOT_SUBSCRIPTION',\n                query: document,\n                variables: variables,\n            });\n        }\n    };\n    DataStore.prototype.markMutationInit = function (mutation) {\n        var _this = this;\n        if (mutation.optimisticResponse) {\n            var optimistic_1;\n            if (typeof mutation.optimisticResponse === 'function') {\n                optimistic_1 = mutation.optimisticResponse(mutation.variables);\n            }\n            else {\n                optimistic_1 = mutation.optimisticResponse;\n            }\n            this.cache.recordOptimisticTransaction(function (c) {\n                var orig = _this.cache;\n                _this.cache = c;\n                try {\n                    _this.markMutationResult({\n                        mutationId: mutation.mutationId,\n                        result: { data: optimistic_1 },\n                        document: mutation.document,\n                        variables: mutation.variables,\n                        updateQueries: mutation.updateQueries,\n                        update: mutation.update,\n                    });\n                }\n                finally {\n                    _this.cache = orig;\n                }\n            }, mutation.mutationId);\n        }\n    };\n    DataStore.prototype.markMutationResult = function (mutation) {\n        var _this = this;\n        if (!graphQLResultHasError(mutation.result)) {\n            var cacheWrites_1 = [{\n                    result: mutation.result.data,\n                    dataId: 'ROOT_MUTATION',\n                    query: mutation.document,\n                    variables: mutation.variables,\n                }];\n            var updateQueries_1 = mutation.updateQueries;\n            if (updateQueries_1) {\n                Object.keys(updateQueries_1).forEach(function (id) {\n                    var _a = updateQueries_1[id], query = _a.query, updater = _a.updater;\n                    var _b = _this.cache.diff({\n                        query: query.document,\n                        variables: query.variables,\n                        returnPartialData: true,\n                        optimistic: false,\n                    }), currentQueryResult = _b.result, complete = _b.complete;\n                    if (complete) {\n                        var nextQueryResult = tryFunctionOrLogError(function () {\n                            return updater(currentQueryResult, {\n                                mutationResult: mutation.result,\n                                queryName: getOperationName(query.document) || undefined,\n                                queryVariables: query.variables,\n                            });\n                        });\n                        if (nextQueryResult) {\n                            cacheWrites_1.push({\n                                result: nextQueryResult,\n                                dataId: 'ROOT_QUERY',\n                                query: query.document,\n                                variables: query.variables,\n                            });\n                        }\n                    }\n                });\n            }\n            this.cache.performTransaction(function (c) {\n                cacheWrites_1.forEach(function (write) { return c.write(write); });\n                var update = mutation.update;\n                if (update) {\n                    tryFunctionOrLogError(function () { return update(c, mutation.result); });\n                }\n            });\n        }\n    };\n    DataStore.prototype.markMutationComplete = function (_a) {\n        var mutationId = _a.mutationId, optimisticResponse = _a.optimisticResponse;\n        if (optimisticResponse) {\n            this.cache.removeOptimistic(mutationId);\n        }\n    };\n    DataStore.prototype.markUpdateQueryResult = function (document, variables, newResult) {\n        this.cache.write({\n            result: newResult,\n            dataId: 'ROOT_QUERY',\n            variables: variables,\n            query: document,\n        });\n    };\n    DataStore.prototype.reset = function () {\n        return this.cache.reset();\n    };\n    return DataStore;\n}());\n\nvar version = \"2.6.10\";\n\nvar hasSuggestedDevtools = false;\nvar ApolloClient = (function () {\n    function ApolloClient(options) {\n        var _this = this;\n        this.defaultOptions = {};\n        this.resetStoreCallbacks = [];\n        this.clearStoreCallbacks = [];\n        var cache = options.cache, _a = options.ssrMode, ssrMode = _a === void 0 ? false : _a, _b = options.ssrForceFetchDelay, ssrForceFetchDelay = _b === void 0 ? 0 : _b, connectToDevTools = options.connectToDevTools, _c = options.queryDeduplication, queryDeduplication = _c === void 0 ? true : _c, defaultOptions = options.defaultOptions, _d = options.assumeImmutableResults, assumeImmutableResults = _d === void 0 ? false : _d, resolvers = options.resolvers, typeDefs = options.typeDefs, fragmentMatcher = options.fragmentMatcher, clientAwarenessName = options.name, clientAwarenessVersion = options.version;\n        var link = options.link;\n        if (!link && resolvers) {\n            link = ApolloLink.empty();\n        }\n        if (!link || !cache) {\n            throw process.env.NODE_ENV === \"production\" ? new InvariantError(4) : new InvariantError(\"In order to initialize Apollo Client, you must specify 'link' and 'cache' properties in the options object.\\n\" +\n                \"These options are part of the upgrade requirements when migrating from Apollo Client 1.x to Apollo Client 2.x.\\n\" +\n                \"For more information, please visit: https://www.apollographql.com/docs/tutorial/client.html#apollo-client-setup\");\n        }\n        this.link = link;\n        this.cache = cache;\n        this.store = new DataStore(cache);\n        this.disableNetworkFetches = ssrMode || ssrForceFetchDelay > 0;\n        this.queryDeduplication = queryDeduplication;\n        this.defaultOptions = defaultOptions || {};\n        this.typeDefs = typeDefs;\n        if (ssrForceFetchDelay) {\n            setTimeout(function () { return (_this.disableNetworkFetches = false); }, ssrForceFetchDelay);\n        }\n        this.watchQuery = this.watchQuery.bind(this);\n        this.query = this.query.bind(this);\n        this.mutate = this.mutate.bind(this);\n        this.resetStore = this.resetStore.bind(this);\n        this.reFetchObservableQueries = this.reFetchObservableQueries.bind(this);\n        var defaultConnectToDevTools = process.env.NODE_ENV !== 'production' &&\n            typeof window !== 'undefined' &&\n            !window.__APOLLO_CLIENT__;\n        if (typeof connectToDevTools === 'undefined'\n            ? defaultConnectToDevTools\n            : connectToDevTools && typeof window !== 'undefined') {\n            window.__APOLLO_CLIENT__ = this;\n        }\n        if (!hasSuggestedDevtools && process.env.NODE_ENV !== 'production') {\n            hasSuggestedDevtools = true;\n            if (typeof window !== 'undefined' &&\n                window.document &&\n                window.top === window.self) {\n                if (typeof window.__APOLLO_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {\n                    if (window.navigator &&\n                        window.navigator.userAgent &&\n                        window.navigator.userAgent.indexOf('Chrome') > -1) {\n                        console.debug('Download the Apollo DevTools ' +\n                            'for a better development experience: ' +\n                            'https://chrome.google.com/webstore/detail/apollo-client-developer-t/jdkknkkbebbapilgoeccciglkfbmbnfm');\n                    }\n                }\n            }\n        }\n        this.version = version;\n        this.localState = new LocalState({\n            cache: cache,\n            client: this,\n            resolvers: resolvers,\n            fragmentMatcher: fragmentMatcher,\n        });\n        this.queryManager = new QueryManager({\n            link: this.link,\n            store: this.store,\n            queryDeduplication: queryDeduplication,\n            ssrMode: ssrMode,\n            clientAwareness: {\n                name: clientAwarenessName,\n                version: clientAwarenessVersion,\n            },\n            localState: this.localState,\n            assumeImmutableResults: assumeImmutableResults,\n            onBroadcast: function () {\n                if (_this.devToolsHookCb) {\n                    _this.devToolsHookCb({\n                        action: {},\n                        state: {\n                            queries: _this.queryManager.queryStore.getStore(),\n                            mutations: _this.queryManager.mutationStore.getStore(),\n                        },\n                        dataWithOptimisticResults: _this.cache.extract(true),\n                    });\n                }\n            },\n        });\n    }\n    ApolloClient.prototype.stop = function () {\n        this.queryManager.stop();\n    };\n    ApolloClient.prototype.watchQuery = function (options) {\n        if (this.defaultOptions.watchQuery) {\n            options = __assign(__assign({}, this.defaultOptions.watchQuery), options);\n        }\n        if (this.disableNetworkFetches &&\n            (options.fetchPolicy === 'network-only' ||\n                options.fetchPolicy === 'cache-and-network')) {\n            options = __assign(__assign({}, options), { fetchPolicy: 'cache-first' });\n        }\n        return this.queryManager.watchQuery(options);\n    };\n    ApolloClient.prototype.query = function (options) {\n        if (this.defaultOptions.query) {\n            options = __assign(__assign({}, this.defaultOptions.query), options);\n        }\n        process.env.NODE_ENV === \"production\" ? invariant(options.fetchPolicy !== 'cache-and-network', 5) : invariant(options.fetchPolicy !== 'cache-and-network', 'The cache-and-network fetchPolicy does not work with client.query, because ' +\n            'client.query can only return a single result. Please use client.watchQuery ' +\n            'to receive multiple results from the cache and the network, or consider ' +\n            'using a different fetchPolicy, such as cache-first or network-only.');\n        if (this.disableNetworkFetches && options.fetchPolicy === 'network-only') {\n            options = __assign(__assign({}, options), { fetchPolicy: 'cache-first' });\n        }\n        return this.queryManager.query(options);\n    };\n    ApolloClient.prototype.mutate = function (options) {\n        if (this.defaultOptions.mutate) {\n            options = __assign(__assign({}, this.defaultOptions.mutate), options);\n        }\n        return this.queryManager.mutate(options);\n    };\n    ApolloClient.prototype.subscribe = function (options) {\n        return this.queryManager.startGraphQLSubscription(options);\n    };\n    ApolloClient.prototype.readQuery = function (options, optimistic) {\n        if (optimistic === void 0) { optimistic = false; }\n        return this.cache.readQuery(options, optimistic);\n    };\n    ApolloClient.prototype.readFragment = function (options, optimistic) {\n        if (optimistic === void 0) { optimistic = false; }\n        return this.cache.readFragment(options, optimistic);\n    };\n    ApolloClient.prototype.writeQuery = function (options) {\n        var result = this.cache.writeQuery(options);\n        this.queryManager.broadcastQueries();\n        return result;\n    };\n    ApolloClient.prototype.writeFragment = function (options) {\n        var result = this.cache.writeFragment(options);\n        this.queryManager.broadcastQueries();\n        return result;\n    };\n    ApolloClient.prototype.writeData = function (options) {\n        var result = this.cache.writeData(options);\n        this.queryManager.broadcastQueries();\n        return result;\n    };\n    ApolloClient.prototype.__actionHookForDevTools = function (cb) {\n        this.devToolsHookCb = cb;\n    };\n    ApolloClient.prototype.__requestRaw = function (payload) {\n        return execute(this.link, payload);\n    };\n    ApolloClient.prototype.initQueryManager = function () {\n        process.env.NODE_ENV === \"production\" || invariant.warn('Calling the initQueryManager method is no longer necessary, ' +\n            'and it will be removed from ApolloClient in version 3.0.');\n        return this.queryManager;\n    };\n    ApolloClient.prototype.resetStore = function () {\n        var _this = this;\n        return Promise.resolve()\n            .then(function () { return _this.queryManager.clearStore(); })\n            .then(function () { return Promise.all(_this.resetStoreCallbacks.map(function (fn) { return fn(); })); })\n            .then(function () { return _this.reFetchObservableQueries(); });\n    };\n    ApolloClient.prototype.clearStore = function () {\n        var _this = this;\n        return Promise.resolve()\n            .then(function () { return _this.queryManager.clearStore(); })\n            .then(function () { return Promise.all(_this.clearStoreCallbacks.map(function (fn) { return fn(); })); });\n    };\n    ApolloClient.prototype.onResetStore = function (cb) {\n        var _this = this;\n        this.resetStoreCallbacks.push(cb);\n        return function () {\n            _this.resetStoreCallbacks = _this.resetStoreCallbacks.filter(function (c) { return c !== cb; });\n        };\n    };\n    ApolloClient.prototype.onClearStore = function (cb) {\n        var _this = this;\n        this.clearStoreCallbacks.push(cb);\n        return function () {\n            _this.clearStoreCallbacks = _this.clearStoreCallbacks.filter(function (c) { return c !== cb; });\n        };\n    };\n    ApolloClient.prototype.reFetchObservableQueries = function (includeStandby) {\n        return this.queryManager.reFetchObservableQueries(includeStandby);\n    };\n    ApolloClient.prototype.extract = function (optimistic) {\n        return this.cache.extract(optimistic);\n    };\n    ApolloClient.prototype.restore = function (serializedState) {\n        return this.cache.restore(serializedState);\n    };\n    ApolloClient.prototype.addResolvers = function (resolvers) {\n        this.localState.addResolvers(resolvers);\n    };\n    ApolloClient.prototype.setResolvers = function (resolvers) {\n        this.localState.setResolvers(resolvers);\n    };\n    ApolloClient.prototype.getResolvers = function () {\n        return this.localState.getResolvers();\n    };\n    ApolloClient.prototype.setLocalStateFragmentMatcher = function (fragmentMatcher) {\n        this.localState.setFragmentMatcher(fragmentMatcher);\n    };\n    return ApolloClient;\n}());\n\nexport default ApolloClient;\nexport { ApolloClient, ApolloError, FetchType, NetworkStatus, ObservableQuery, isApolloError };\n//# sourceMappingURL=bundle.esm.js.map\n","import { getFragmentQueryDocument } from 'apollo-utilities';\n\nfunction queryFromPojo(obj) {\n    var op = {\n        kind: 'OperationDefinition',\n        operation: 'query',\n        name: {\n            kind: 'Name',\n            value: 'GeneratedClientQuery',\n        },\n        selectionSet: selectionSetFromObj(obj),\n    };\n    var out = {\n        kind: 'Document',\n        definitions: [op],\n    };\n    return out;\n}\nfunction fragmentFromPojo(obj, typename) {\n    var frag = {\n        kind: 'FragmentDefinition',\n        typeCondition: {\n            kind: 'NamedType',\n            name: {\n                kind: 'Name',\n                value: typename || '__FakeType',\n            },\n        },\n        name: {\n            kind: 'Name',\n            value: 'GeneratedClientQuery',\n        },\n        selectionSet: selectionSetFromObj(obj),\n    };\n    var out = {\n        kind: 'Document',\n        definitions: [frag],\n    };\n    return out;\n}\nfunction selectionSetFromObj(obj) {\n    if (typeof obj === 'number' ||\n        typeof obj === 'boolean' ||\n        typeof obj === 'string' ||\n        typeof obj === 'undefined' ||\n        obj === null) {\n        return null;\n    }\n    if (Array.isArray(obj)) {\n        return selectionSetFromObj(obj[0]);\n    }\n    var selections = [];\n    Object.keys(obj).forEach(function (key) {\n        var nestedSelSet = selectionSetFromObj(obj[key]);\n        var field = {\n            kind: 'Field',\n            name: {\n                kind: 'Name',\n                value: key,\n            },\n            selectionSet: nestedSelSet || undefined,\n        };\n        selections.push(field);\n    });\n    var selectionSet = {\n        kind: 'SelectionSet',\n        selections: selections,\n    };\n    return selectionSet;\n}\nvar justTypenameQuery = {\n    kind: 'Document',\n    definitions: [\n        {\n            kind: 'OperationDefinition',\n            operation: 'query',\n            name: null,\n            variableDefinitions: null,\n            directives: [],\n            selectionSet: {\n                kind: 'SelectionSet',\n                selections: [\n                    {\n                        kind: 'Field',\n                        alias: null,\n                        name: {\n                            kind: 'Name',\n                            value: '__typename',\n                        },\n                        arguments: [],\n                        directives: [],\n                        selectionSet: null,\n                    },\n                ],\n            },\n        },\n    ],\n};\n\nvar ApolloCache = (function () {\n    function ApolloCache() {\n    }\n    ApolloCache.prototype.transformDocument = function (document) {\n        return document;\n    };\n    ApolloCache.prototype.transformForLink = function (document) {\n        return document;\n    };\n    ApolloCache.prototype.readQuery = function (options, optimistic) {\n        if (optimistic === void 0) { optimistic = false; }\n        return this.read({\n            query: options.query,\n            variables: options.variables,\n            optimistic: optimistic,\n        });\n    };\n    ApolloCache.prototype.readFragment = function (options, optimistic) {\n        if (optimistic === void 0) { optimistic = false; }\n        return this.read({\n            query: getFragmentQueryDocument(options.fragment, options.fragmentName),\n            variables: options.variables,\n            rootId: options.id,\n            optimistic: optimistic,\n        });\n    };\n    ApolloCache.prototype.writeQuery = function (options) {\n        this.write({\n            dataId: 'ROOT_QUERY',\n            result: options.data,\n            query: options.query,\n            variables: options.variables,\n        });\n    };\n    ApolloCache.prototype.writeFragment = function (options) {\n        this.write({\n            dataId: options.id,\n            result: options.data,\n            variables: options.variables,\n            query: getFragmentQueryDocument(options.fragment, options.fragmentName),\n        });\n    };\n    ApolloCache.prototype.writeData = function (_a) {\n        var id = _a.id, data = _a.data;\n        if (typeof id !== 'undefined') {\n            var typenameResult = null;\n            try {\n                typenameResult = this.read({\n                    rootId: id,\n                    optimistic: false,\n                    query: justTypenameQuery,\n                });\n            }\n            catch (e) {\n            }\n            var __typename = (typenameResult && typenameResult.__typename) || '__ClientData';\n            var dataToWrite = Object.assign({ __typename: __typename }, data);\n            this.writeFragment({\n                id: id,\n                fragment: fragmentFromPojo(dataToWrite, __typename),\n                data: dataToWrite,\n            });\n        }\n        else {\n            this.writeQuery({ query: queryFromPojo(data), data: data });\n        }\n    };\n    return ApolloCache;\n}());\n\nvar Cache;\n(function (Cache) {\n})(Cache || (Cache = {}));\n\nexport { ApolloCache, Cache };\n//# sourceMappingURL=bundle.esm.js.map\n","import { __assign, __extends } from 'tslib';\nimport { ApolloCache } from 'apollo-cache';\nimport { isTest, getQueryDefinition, assign, getDefaultValues, isEqual, getMainDefinition, getFragmentDefinitions, createFragmentMap, shouldInclude, isField, resultKeyNameFromField, isInlineFragment, mergeDeepArray, argumentsObjectFromField, getDirectiveInfoFromField, maybeDeepFreeze, isIdValue, getStoreKeyName, toIdValue, isJsonValue, canUseWeakMap, getOperationDefinition, isProduction, storeKeyNameFromField, addTypenameToDocument } from 'apollo-utilities';\nimport { wrap, KeyTrie } from 'optimism';\nimport { invariant, InvariantError } from 'ts-invariant';\n\nvar haveWarned = false;\nfunction shouldWarn() {\n    var answer = !haveWarned;\n    if (!isTest()) {\n        haveWarned = true;\n    }\n    return answer;\n}\nvar HeuristicFragmentMatcher = (function () {\n    function HeuristicFragmentMatcher() {\n    }\n    HeuristicFragmentMatcher.prototype.ensureReady = function () {\n        return Promise.resolve();\n    };\n    HeuristicFragmentMatcher.prototype.canBypassInit = function () {\n        return true;\n    };\n    HeuristicFragmentMatcher.prototype.match = function (idValue, typeCondition, context) {\n        var obj = context.store.get(idValue.id);\n        var isRootQuery = idValue.id === 'ROOT_QUERY';\n        if (!obj) {\n            return isRootQuery;\n        }\n        var _a = obj.__typename, __typename = _a === void 0 ? isRootQuery && 'Query' : _a;\n        if (!__typename) {\n            if (shouldWarn()) {\n                process.env.NODE_ENV === \"production\" || invariant.warn(\"You're using fragments in your queries, but either don't have the addTypename:\\n  true option set in Apollo Client, or you are trying to write a fragment to the store without the __typename.\\n   Please turn on the addTypename option and include __typename when writing fragments so that Apollo Client\\n   can accurately match fragments.\");\n                process.env.NODE_ENV === \"production\" || invariant.warn('Could not find __typename on Fragment ', typeCondition, obj);\n                process.env.NODE_ENV === \"production\" || invariant.warn(\"DEPRECATION WARNING: using fragments without __typename is unsupported behavior \" +\n                    \"and will be removed in future versions of Apollo client. You should fix this and set addTypename to true now.\");\n            }\n            return 'heuristic';\n        }\n        if (__typename === typeCondition) {\n            return true;\n        }\n        if (shouldWarn()) {\n            process.env.NODE_ENV === \"production\" || invariant.error('You are using the simple (heuristic) fragment matcher, but your ' +\n                'queries contain union or interface types. Apollo Client will not be ' +\n                'able to accurately map fragments. To make this error go away, use ' +\n                'the `IntrospectionFragmentMatcher` as described in the docs: ' +\n                'https://www.apollographql.com/docs/react/advanced/fragments.html#fragment-matcher');\n        }\n        return 'heuristic';\n    };\n    return HeuristicFragmentMatcher;\n}());\nvar IntrospectionFragmentMatcher = (function () {\n    function IntrospectionFragmentMatcher(options) {\n        if (options && options.introspectionQueryResultData) {\n            this.possibleTypesMap = this.parseIntrospectionResult(options.introspectionQueryResultData);\n            this.isReady = true;\n        }\n        else {\n            this.isReady = false;\n        }\n        this.match = this.match.bind(this);\n    }\n    IntrospectionFragmentMatcher.prototype.match = function (idValue, typeCondition, context) {\n        process.env.NODE_ENV === \"production\" ? invariant(this.isReady, 1) : invariant(this.isReady, 'FragmentMatcher.match() was called before FragmentMatcher.init()');\n        var obj = context.store.get(idValue.id);\n        var isRootQuery = idValue.id === 'ROOT_QUERY';\n        if (!obj) {\n            return isRootQuery;\n        }\n        var _a = obj.__typename, __typename = _a === void 0 ? isRootQuery && 'Query' : _a;\n        process.env.NODE_ENV === \"production\" ? invariant(__typename, 2) : invariant(__typename, \"Cannot match fragment because __typename property is missing: \" + JSON.stringify(obj));\n        if (__typename === typeCondition) {\n            return true;\n        }\n        var implementingTypes = this.possibleTypesMap[typeCondition];\n        if (__typename &&\n            implementingTypes &&\n            implementingTypes.indexOf(__typename) > -1) {\n            return true;\n        }\n        return false;\n    };\n    IntrospectionFragmentMatcher.prototype.parseIntrospectionResult = function (introspectionResultData) {\n        var typeMap = {};\n        introspectionResultData.__schema.types.forEach(function (type) {\n            if (type.kind === 'UNION' || type.kind === 'INTERFACE') {\n                typeMap[type.name] = type.possibleTypes.map(function (implementingType) { return implementingType.name; });\n            }\n        });\n        return typeMap;\n    };\n    return IntrospectionFragmentMatcher;\n}());\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar DepTrackingCache = (function () {\n    function DepTrackingCache(data) {\n        var _this = this;\n        if (data === void 0) { data = Object.create(null); }\n        this.data = data;\n        this.depend = wrap(function (dataId) { return _this.data[dataId]; }, {\n            disposable: true,\n            makeCacheKey: function (dataId) {\n                return dataId;\n            },\n        });\n    }\n    DepTrackingCache.prototype.toObject = function () {\n        return this.data;\n    };\n    DepTrackingCache.prototype.get = function (dataId) {\n        this.depend(dataId);\n        return this.data[dataId];\n    };\n    DepTrackingCache.prototype.set = function (dataId, value) {\n        var oldValue = this.data[dataId];\n        if (value !== oldValue) {\n            this.data[dataId] = value;\n            this.depend.dirty(dataId);\n        }\n    };\n    DepTrackingCache.prototype.delete = function (dataId) {\n        if (hasOwn.call(this.data, dataId)) {\n            delete this.data[dataId];\n            this.depend.dirty(dataId);\n        }\n    };\n    DepTrackingCache.prototype.clear = function () {\n        this.replace(null);\n    };\n    DepTrackingCache.prototype.replace = function (newData) {\n        var _this = this;\n        if (newData) {\n            Object.keys(newData).forEach(function (dataId) {\n                _this.set(dataId, newData[dataId]);\n            });\n            Object.keys(this.data).forEach(function (dataId) {\n                if (!hasOwn.call(newData, dataId)) {\n                    _this.delete(dataId);\n                }\n            });\n        }\n        else {\n            Object.keys(this.data).forEach(function (dataId) {\n                _this.delete(dataId);\n            });\n        }\n    };\n    return DepTrackingCache;\n}());\nfunction defaultNormalizedCacheFactory(seed) {\n    return new DepTrackingCache(seed);\n}\n\nvar StoreReader = (function () {\n    function StoreReader(_a) {\n        var _this = this;\n        var _b = _a === void 0 ? {} : _a, _c = _b.cacheKeyRoot, cacheKeyRoot = _c === void 0 ? new KeyTrie(canUseWeakMap) : _c, _d = _b.freezeResults, freezeResults = _d === void 0 ? false : _d;\n        var _e = this, executeStoreQuery = _e.executeStoreQuery, executeSelectionSet = _e.executeSelectionSet, executeSubSelectedArray = _e.executeSubSelectedArray;\n        this.freezeResults = freezeResults;\n        this.executeStoreQuery = wrap(function (options) {\n            return executeStoreQuery.call(_this, options);\n        }, {\n            makeCacheKey: function (_a) {\n                var query = _a.query, rootValue = _a.rootValue, contextValue = _a.contextValue, variableValues = _a.variableValues, fragmentMatcher = _a.fragmentMatcher;\n                if (contextValue.store instanceof DepTrackingCache) {\n                    return cacheKeyRoot.lookup(contextValue.store, query, fragmentMatcher, JSON.stringify(variableValues), rootValue.id);\n                }\n            }\n        });\n        this.executeSelectionSet = wrap(function (options) {\n            return executeSelectionSet.call(_this, options);\n        }, {\n            makeCacheKey: function (_a) {\n                var selectionSet = _a.selectionSet, rootValue = _a.rootValue, execContext = _a.execContext;\n                if (execContext.contextValue.store instanceof DepTrackingCache) {\n                    return cacheKeyRoot.lookup(execContext.contextValue.store, selectionSet, execContext.fragmentMatcher, JSON.stringify(execContext.variableValues), rootValue.id);\n                }\n            }\n        });\n        this.executeSubSelectedArray = wrap(function (options) {\n            return executeSubSelectedArray.call(_this, options);\n        }, {\n            makeCacheKey: function (_a) {\n                var field = _a.field, array = _a.array, execContext = _a.execContext;\n                if (execContext.contextValue.store instanceof DepTrackingCache) {\n                    return cacheKeyRoot.lookup(execContext.contextValue.store, field, array, JSON.stringify(execContext.variableValues));\n                }\n            }\n        });\n    }\n    StoreReader.prototype.readQueryFromStore = function (options) {\n        return this.diffQueryAgainstStore(__assign(__assign({}, options), { returnPartialData: false })).result;\n    };\n    StoreReader.prototype.diffQueryAgainstStore = function (_a) {\n        var store = _a.store, query = _a.query, variables = _a.variables, previousResult = _a.previousResult, _b = _a.returnPartialData, returnPartialData = _b === void 0 ? true : _b, _c = _a.rootId, rootId = _c === void 0 ? 'ROOT_QUERY' : _c, fragmentMatcherFunction = _a.fragmentMatcherFunction, config = _a.config;\n        var queryDefinition = getQueryDefinition(query);\n        variables = assign({}, getDefaultValues(queryDefinition), variables);\n        var context = {\n            store: store,\n            dataIdFromObject: config && config.dataIdFromObject,\n            cacheRedirects: (config && config.cacheRedirects) || {},\n        };\n        var execResult = this.executeStoreQuery({\n            query: query,\n            rootValue: {\n                type: 'id',\n                id: rootId,\n                generated: true,\n                typename: 'Query',\n            },\n            contextValue: context,\n            variableValues: variables,\n            fragmentMatcher: fragmentMatcherFunction,\n        });\n        var hasMissingFields = execResult.missing && execResult.missing.length > 0;\n        if (hasMissingFields && !returnPartialData) {\n            execResult.missing.forEach(function (info) {\n                if (info.tolerable)\n                    return;\n                throw process.env.NODE_ENV === \"production\" ? new InvariantError(8) : new InvariantError(\"Can't find field \" + info.fieldName + \" on object \" + JSON.stringify(info.object, null, 2) + \".\");\n            });\n        }\n        if (previousResult) {\n            if (isEqual(previousResult, execResult.result)) {\n                execResult.result = previousResult;\n            }\n        }\n        return {\n            result: execResult.result,\n            complete: !hasMissingFields,\n        };\n    };\n    StoreReader.prototype.executeStoreQuery = function (_a) {\n        var query = _a.query, rootValue = _a.rootValue, contextValue = _a.contextValue, variableValues = _a.variableValues, _b = _a.fragmentMatcher, fragmentMatcher = _b === void 0 ? defaultFragmentMatcher : _b;\n        var mainDefinition = getMainDefinition(query);\n        var fragments = getFragmentDefinitions(query);\n        var fragmentMap = createFragmentMap(fragments);\n        var execContext = {\n            query: query,\n            fragmentMap: fragmentMap,\n            contextValue: contextValue,\n            variableValues: variableValues,\n            fragmentMatcher: fragmentMatcher,\n        };\n        return this.executeSelectionSet({\n            selectionSet: mainDefinition.selectionSet,\n            rootValue: rootValue,\n            execContext: execContext,\n        });\n    };\n    StoreReader.prototype.executeSelectionSet = function (_a) {\n        var _this = this;\n        var selectionSet = _a.selectionSet, rootValue = _a.rootValue, execContext = _a.execContext;\n        var fragmentMap = execContext.fragmentMap, contextValue = execContext.contextValue, variables = execContext.variableValues;\n        var finalResult = { result: null };\n        var objectsToMerge = [];\n        var object = contextValue.store.get(rootValue.id);\n        var typename = (object && object.__typename) ||\n            (rootValue.id === 'ROOT_QUERY' && 'Query') ||\n            void 0;\n        function handleMissing(result) {\n            var _a;\n            if (result.missing) {\n                finalResult.missing = finalResult.missing || [];\n                (_a = finalResult.missing).push.apply(_a, result.missing);\n            }\n            return result.result;\n        }\n        selectionSet.selections.forEach(function (selection) {\n            var _a;\n            if (!shouldInclude(selection, variables)) {\n                return;\n            }\n            if (isField(selection)) {\n                var fieldResult = handleMissing(_this.executeField(object, typename, selection, execContext));\n                if (typeof fieldResult !== 'undefined') {\n                    objectsToMerge.push((_a = {},\n                        _a[resultKeyNameFromField(selection)] = fieldResult,\n                        _a));\n                }\n            }\n            else {\n                var fragment = void 0;\n                if (isInlineFragment(selection)) {\n                    fragment = selection;\n                }\n                else {\n                    fragment = fragmentMap[selection.name.value];\n                    if (!fragment) {\n                        throw process.env.NODE_ENV === \"production\" ? new InvariantError(9) : new InvariantError(\"No fragment named \" + selection.name.value);\n                    }\n                }\n                var typeCondition = fragment.typeCondition && fragment.typeCondition.name.value;\n                var match = !typeCondition ||\n                    execContext.fragmentMatcher(rootValue, typeCondition, contextValue);\n                if (match) {\n                    var fragmentExecResult = _this.executeSelectionSet({\n                        selectionSet: fragment.selectionSet,\n                        rootValue: rootValue,\n                        execContext: execContext,\n                    });\n                    if (match === 'heuristic' && fragmentExecResult.missing) {\n                        fragmentExecResult = __assign(__assign({}, fragmentExecResult), { missing: fragmentExecResult.missing.map(function (info) {\n                                return __assign(__assign({}, info), { tolerable: true });\n                            }) });\n                    }\n                    objectsToMerge.push(handleMissing(fragmentExecResult));\n                }\n            }\n        });\n        finalResult.result = mergeDeepArray(objectsToMerge);\n        if (this.freezeResults && process.env.NODE_ENV !== 'production') {\n            Object.freeze(finalResult.result);\n        }\n        return finalResult;\n    };\n    StoreReader.prototype.executeField = function (object, typename, field, execContext) {\n        var variables = execContext.variableValues, contextValue = execContext.contextValue;\n        var fieldName = field.name.value;\n        var args = argumentsObjectFromField(field, variables);\n        var info = {\n            resultKey: resultKeyNameFromField(field),\n            directives: getDirectiveInfoFromField(field, variables),\n        };\n        var readStoreResult = readStoreResolver(object, typename, fieldName, args, contextValue, info);\n        if (Array.isArray(readStoreResult.result)) {\n            return this.combineExecResults(readStoreResult, this.executeSubSelectedArray({\n                field: field,\n                array: readStoreResult.result,\n                execContext: execContext,\n            }));\n        }\n        if (!field.selectionSet) {\n            assertSelectionSetForIdValue(field, readStoreResult.result);\n            if (this.freezeResults && process.env.NODE_ENV !== 'production') {\n                maybeDeepFreeze(readStoreResult);\n            }\n            return readStoreResult;\n        }\n        if (readStoreResult.result == null) {\n            return readStoreResult;\n        }\n        return this.combineExecResults(readStoreResult, this.executeSelectionSet({\n            selectionSet: field.selectionSet,\n            rootValue: readStoreResult.result,\n            execContext: execContext,\n        }));\n    };\n    StoreReader.prototype.combineExecResults = function () {\n        var execResults = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            execResults[_i] = arguments[_i];\n        }\n        var missing;\n        execResults.forEach(function (execResult) {\n            if (execResult.missing) {\n                missing = missing || [];\n                missing.push.apply(missing, execResult.missing);\n            }\n        });\n        return {\n            result: execResults.pop().result,\n            missing: missing,\n        };\n    };\n    StoreReader.prototype.executeSubSelectedArray = function (_a) {\n        var _this = this;\n        var field = _a.field, array = _a.array, execContext = _a.execContext;\n        var missing;\n        function handleMissing(childResult) {\n            if (childResult.missing) {\n                missing = missing || [];\n                missing.push.apply(missing, childResult.missing);\n            }\n            return childResult.result;\n        }\n        array = array.map(function (item) {\n            if (item === null) {\n                return null;\n            }\n            if (Array.isArray(item)) {\n                return handleMissing(_this.executeSubSelectedArray({\n                    field: field,\n                    array: item,\n                    execContext: execContext,\n                }));\n            }\n            if (field.selectionSet) {\n                return handleMissing(_this.executeSelectionSet({\n                    selectionSet: field.selectionSet,\n                    rootValue: item,\n                    execContext: execContext,\n                }));\n            }\n            assertSelectionSetForIdValue(field, item);\n            return item;\n        });\n        if (this.freezeResults && process.env.NODE_ENV !== 'production') {\n            Object.freeze(array);\n        }\n        return { result: array, missing: missing };\n    };\n    return StoreReader;\n}());\nfunction assertSelectionSetForIdValue(field, value) {\n    if (!field.selectionSet && isIdValue(value)) {\n        throw process.env.NODE_ENV === \"production\" ? new InvariantError(10) : new InvariantError(\"Missing selection set for object of type \" + value.typename + \" returned for query field \" + field.name.value);\n    }\n}\nfunction defaultFragmentMatcher() {\n    return true;\n}\nfunction assertIdValue(idValue) {\n    process.env.NODE_ENV === \"production\" ? invariant(isIdValue(idValue), 11) : invariant(isIdValue(idValue), \"Encountered a sub-selection on the query, but the store doesn't have an object reference. This should never happen during normal use unless you have custom code that is directly manipulating the store; please file an issue.\");\n}\nfunction readStoreResolver(object, typename, fieldName, args, context, _a) {\n    var resultKey = _a.resultKey, directives = _a.directives;\n    var storeKeyName = fieldName;\n    if (args || directives) {\n        storeKeyName = getStoreKeyName(storeKeyName, args, directives);\n    }\n    var fieldValue = void 0;\n    if (object) {\n        fieldValue = object[storeKeyName];\n        if (typeof fieldValue === 'undefined' &&\n            context.cacheRedirects &&\n            typeof typename === 'string') {\n            var type = context.cacheRedirects[typename];\n            if (type) {\n                var resolver = type[fieldName];\n                if (resolver) {\n                    fieldValue = resolver(object, args, {\n                        getCacheKey: function (storeObj) {\n                            var id = context.dataIdFromObject(storeObj);\n                            return id && toIdValue({\n                                id: id,\n                                typename: storeObj.__typename,\n                            });\n                        },\n                    });\n                }\n            }\n        }\n    }\n    if (typeof fieldValue === 'undefined') {\n        return {\n            result: fieldValue,\n            missing: [{\n                    object: object,\n                    fieldName: storeKeyName,\n                    tolerable: false,\n                }],\n        };\n    }\n    if (isJsonValue(fieldValue)) {\n        fieldValue = fieldValue.json;\n    }\n    return {\n        result: fieldValue,\n    };\n}\n\nvar ObjectCache = (function () {\n    function ObjectCache(data) {\n        if (data === void 0) { data = Object.create(null); }\n        this.data = data;\n    }\n    ObjectCache.prototype.toObject = function () {\n        return this.data;\n    };\n    ObjectCache.prototype.get = function (dataId) {\n        return this.data[dataId];\n    };\n    ObjectCache.prototype.set = function (dataId, value) {\n        this.data[dataId] = value;\n    };\n    ObjectCache.prototype.delete = function (dataId) {\n        this.data[dataId] = void 0;\n    };\n    ObjectCache.prototype.clear = function () {\n        this.data = Object.create(null);\n    };\n    ObjectCache.prototype.replace = function (newData) {\n        this.data = newData || Object.create(null);\n    };\n    return ObjectCache;\n}());\nfunction defaultNormalizedCacheFactory$1(seed) {\n    return new ObjectCache(seed);\n}\n\nvar WriteError = (function (_super) {\n    __extends(WriteError, _super);\n    function WriteError() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'WriteError';\n        return _this;\n    }\n    return WriteError;\n}(Error));\nfunction enhanceErrorWithDocument(error, document) {\n    var enhancedError = new WriteError(\"Error writing result to store for query:\\n \" + JSON.stringify(document));\n    enhancedError.message += '\\n' + error.message;\n    enhancedError.stack = error.stack;\n    return enhancedError;\n}\nvar StoreWriter = (function () {\n    function StoreWriter() {\n    }\n    StoreWriter.prototype.writeQueryToStore = function (_a) {\n        var query = _a.query, result = _a.result, _b = _a.store, store = _b === void 0 ? defaultNormalizedCacheFactory() : _b, variables = _a.variables, dataIdFromObject = _a.dataIdFromObject, fragmentMatcherFunction = _a.fragmentMatcherFunction;\n        return this.writeResultToStore({\n            dataId: 'ROOT_QUERY',\n            result: result,\n            document: query,\n            store: store,\n            variables: variables,\n            dataIdFromObject: dataIdFromObject,\n            fragmentMatcherFunction: fragmentMatcherFunction,\n        });\n    };\n    StoreWriter.prototype.writeResultToStore = function (_a) {\n        var dataId = _a.dataId, result = _a.result, document = _a.document, _b = _a.store, store = _b === void 0 ? defaultNormalizedCacheFactory() : _b, variables = _a.variables, dataIdFromObject = _a.dataIdFromObject, fragmentMatcherFunction = _a.fragmentMatcherFunction;\n        var operationDefinition = getOperationDefinition(document);\n        try {\n            return this.writeSelectionSetToStore({\n                result: result,\n                dataId: dataId,\n                selectionSet: operationDefinition.selectionSet,\n                context: {\n                    store: store,\n                    processedData: {},\n                    variables: assign({}, getDefaultValues(operationDefinition), variables),\n                    dataIdFromObject: dataIdFromObject,\n                    fragmentMap: createFragmentMap(getFragmentDefinitions(document)),\n                    fragmentMatcherFunction: fragmentMatcherFunction,\n                },\n            });\n        }\n        catch (e) {\n            throw enhanceErrorWithDocument(e, document);\n        }\n    };\n    StoreWriter.prototype.writeSelectionSetToStore = function (_a) {\n        var _this = this;\n        var result = _a.result, dataId = _a.dataId, selectionSet = _a.selectionSet, context = _a.context;\n        var variables = context.variables, store = context.store, fragmentMap = context.fragmentMap;\n        selectionSet.selections.forEach(function (selection) {\n            var _a;\n            if (!shouldInclude(selection, variables)) {\n                return;\n            }\n            if (isField(selection)) {\n                var resultFieldKey = resultKeyNameFromField(selection);\n                var value = result[resultFieldKey];\n                if (typeof value !== 'undefined') {\n                    _this.writeFieldToStore({\n                        dataId: dataId,\n                        value: value,\n                        field: selection,\n                        context: context,\n                    });\n                }\n                else {\n                    var isDefered = false;\n                    var isClient = false;\n                    if (selection.directives && selection.directives.length) {\n                        isDefered = selection.directives.some(function (directive) { return directive.name && directive.name.value === 'defer'; });\n                        isClient = selection.directives.some(function (directive) { return directive.name && directive.name.value === 'client'; });\n                    }\n                    if (!isDefered && !isClient && context.fragmentMatcherFunction) {\n                        process.env.NODE_ENV === \"production\" || invariant.warn(\"Missing field \" + resultFieldKey + \" in \" + JSON.stringify(result, null, 2).substring(0, 100));\n                    }\n                }\n            }\n            else {\n                var fragment = void 0;\n                if (isInlineFragment(selection)) {\n                    fragment = selection;\n                }\n                else {\n                    fragment = (fragmentMap || {})[selection.name.value];\n                    process.env.NODE_ENV === \"production\" ? invariant(fragment, 3) : invariant(fragment, \"No fragment named \" + selection.name.value + \".\");\n                }\n                var matches = true;\n                if (context.fragmentMatcherFunction && fragment.typeCondition) {\n                    var id = dataId || 'self';\n                    var idValue = toIdValue({ id: id, typename: undefined });\n                    var fakeContext = {\n                        store: new ObjectCache((_a = {}, _a[id] = result, _a)),\n                        cacheRedirects: {},\n                    };\n                    var match = context.fragmentMatcherFunction(idValue, fragment.typeCondition.name.value, fakeContext);\n                    if (!isProduction() && match === 'heuristic') {\n                        process.env.NODE_ENV === \"production\" || invariant.error('WARNING: heuristic fragment matching going on!');\n                    }\n                    matches = !!match;\n                }\n                if (matches) {\n                    _this.writeSelectionSetToStore({\n                        result: result,\n                        selectionSet: fragment.selectionSet,\n                        dataId: dataId,\n                        context: context,\n                    });\n                }\n            }\n        });\n        return store;\n    };\n    StoreWriter.prototype.writeFieldToStore = function (_a) {\n        var _b;\n        var field = _a.field, value = _a.value, dataId = _a.dataId, context = _a.context;\n        var variables = context.variables, dataIdFromObject = context.dataIdFromObject, store = context.store;\n        var storeValue;\n        var storeObject;\n        var storeFieldName = storeKeyNameFromField(field, variables);\n        if (!field.selectionSet || value === null) {\n            storeValue =\n                value != null && typeof value === 'object'\n                    ?\n                        { type: 'json', json: value }\n                    :\n                        value;\n        }\n        else if (Array.isArray(value)) {\n            var generatedId = dataId + \".\" + storeFieldName;\n            storeValue = this.processArrayValue(value, generatedId, field.selectionSet, context);\n        }\n        else {\n            var valueDataId = dataId + \".\" + storeFieldName;\n            var generated = true;\n            if (!isGeneratedId(valueDataId)) {\n                valueDataId = '$' + valueDataId;\n            }\n            if (dataIdFromObject) {\n                var semanticId = dataIdFromObject(value);\n                process.env.NODE_ENV === \"production\" ? invariant(!semanticId || !isGeneratedId(semanticId), 4) : invariant(!semanticId || !isGeneratedId(semanticId), 'IDs returned by dataIdFromObject cannot begin with the \"$\" character.');\n                if (semanticId ||\n                    (typeof semanticId === 'number' && semanticId === 0)) {\n                    valueDataId = semanticId;\n                    generated = false;\n                }\n            }\n            if (!isDataProcessed(valueDataId, field, context.processedData)) {\n                this.writeSelectionSetToStore({\n                    dataId: valueDataId,\n                    result: value,\n                    selectionSet: field.selectionSet,\n                    context: context,\n                });\n            }\n            var typename = value.__typename;\n            storeValue = toIdValue({ id: valueDataId, typename: typename }, generated);\n            storeObject = store.get(dataId);\n            var escapedId = storeObject && storeObject[storeFieldName];\n            if (escapedId !== storeValue && isIdValue(escapedId)) {\n                var hadTypename = escapedId.typename !== undefined;\n                var hasTypename = typename !== undefined;\n                var typenameChanged = hadTypename && hasTypename && escapedId.typename !== typename;\n                process.env.NODE_ENV === \"production\" ? invariant(!generated || escapedId.generated || typenameChanged, 5) : invariant(!generated || escapedId.generated || typenameChanged, \"Store error: the application attempted to write an object with no provided id but the store already contains an id of \" + escapedId.id + \" for this object. The selectionSet that was trying to be written is:\\n\" + JSON.stringify(field));\n                process.env.NODE_ENV === \"production\" ? invariant(!hadTypename || hasTypename, 6) : invariant(!hadTypename || hasTypename, \"Store error: the application attempted to write an object with no provided typename but the store already contains an object with typename of \" + escapedId.typename + \" for the object of id \" + escapedId.id + \". The selectionSet that was trying to be written is:\\n\" + JSON.stringify(field));\n                if (escapedId.generated) {\n                    if (typenameChanged) {\n                        if (!generated) {\n                            store.delete(escapedId.id);\n                        }\n                    }\n                    else {\n                        mergeWithGenerated(escapedId.id, storeValue.id, store);\n                    }\n                }\n            }\n        }\n        storeObject = store.get(dataId);\n        if (!storeObject || !isEqual(storeValue, storeObject[storeFieldName])) {\n            store.set(dataId, __assign(__assign({}, storeObject), (_b = {}, _b[storeFieldName] = storeValue, _b)));\n        }\n    };\n    StoreWriter.prototype.processArrayValue = function (value, generatedId, selectionSet, context) {\n        var _this = this;\n        return value.map(function (item, index) {\n            if (item === null) {\n                return null;\n            }\n            var itemDataId = generatedId + \".\" + index;\n            if (Array.isArray(item)) {\n                return _this.processArrayValue(item, itemDataId, selectionSet, context);\n            }\n            var generated = true;\n            if (context.dataIdFromObject) {\n                var semanticId = context.dataIdFromObject(item);\n                if (semanticId) {\n                    itemDataId = semanticId;\n                    generated = false;\n                }\n            }\n            if (!isDataProcessed(itemDataId, selectionSet, context.processedData)) {\n                _this.writeSelectionSetToStore({\n                    dataId: itemDataId,\n                    result: item,\n                    selectionSet: selectionSet,\n                    context: context,\n                });\n            }\n            return toIdValue({ id: itemDataId, typename: item.__typename }, generated);\n        });\n    };\n    return StoreWriter;\n}());\nfunction isGeneratedId(id) {\n    return id[0] === '$';\n}\nfunction mergeWithGenerated(generatedKey, realKey, cache) {\n    if (generatedKey === realKey) {\n        return false;\n    }\n    var generated = cache.get(generatedKey);\n    var real = cache.get(realKey);\n    var madeChanges = false;\n    Object.keys(generated).forEach(function (key) {\n        var value = generated[key];\n        var realValue = real[key];\n        if (isIdValue(value) &&\n            isGeneratedId(value.id) &&\n            isIdValue(realValue) &&\n            !isEqual(value, realValue) &&\n            mergeWithGenerated(value.id, realValue.id, cache)) {\n            madeChanges = true;\n        }\n    });\n    cache.delete(generatedKey);\n    var newRealValue = __assign(__assign({}, generated), real);\n    if (isEqual(newRealValue, real)) {\n        return madeChanges;\n    }\n    cache.set(realKey, newRealValue);\n    return true;\n}\nfunction isDataProcessed(dataId, field, processedData) {\n    if (!processedData) {\n        return false;\n    }\n    if (processedData[dataId]) {\n        if (processedData[dataId].indexOf(field) >= 0) {\n            return true;\n        }\n        else {\n            processedData[dataId].push(field);\n        }\n    }\n    else {\n        processedData[dataId] = [field];\n    }\n    return false;\n}\n\nvar defaultConfig = {\n    fragmentMatcher: new HeuristicFragmentMatcher(),\n    dataIdFromObject: defaultDataIdFromObject,\n    addTypename: true,\n    resultCaching: true,\n    freezeResults: false,\n};\nfunction defaultDataIdFromObject(result) {\n    if (result.__typename) {\n        if (result.id !== undefined) {\n            return result.__typename + \":\" + result.id;\n        }\n        if (result._id !== undefined) {\n            return result.__typename + \":\" + result._id;\n        }\n    }\n    return null;\n}\nvar hasOwn$1 = Object.prototype.hasOwnProperty;\nvar OptimisticCacheLayer = (function (_super) {\n    __extends(OptimisticCacheLayer, _super);\n    function OptimisticCacheLayer(optimisticId, parent, transaction) {\n        var _this = _super.call(this, Object.create(null)) || this;\n        _this.optimisticId = optimisticId;\n        _this.parent = parent;\n        _this.transaction = transaction;\n        return _this;\n    }\n    OptimisticCacheLayer.prototype.toObject = function () {\n        return __assign(__assign({}, this.parent.toObject()), this.data);\n    };\n    OptimisticCacheLayer.prototype.get = function (dataId) {\n        return hasOwn$1.call(this.data, dataId)\n            ? this.data[dataId]\n            : this.parent.get(dataId);\n    };\n    return OptimisticCacheLayer;\n}(ObjectCache));\nvar InMemoryCache = (function (_super) {\n    __extends(InMemoryCache, _super);\n    function InMemoryCache(config) {\n        if (config === void 0) { config = {}; }\n        var _this = _super.call(this) || this;\n        _this.watches = new Set();\n        _this.typenameDocumentCache = new Map();\n        _this.cacheKeyRoot = new KeyTrie(canUseWeakMap);\n        _this.silenceBroadcast = false;\n        _this.config = __assign(__assign({}, defaultConfig), config);\n        if (_this.config.customResolvers) {\n            process.env.NODE_ENV === \"production\" || invariant.warn('customResolvers have been renamed to cacheRedirects. Please update your config as we will be deprecating customResolvers in the next major version.');\n            _this.config.cacheRedirects = _this.config.customResolvers;\n        }\n        if (_this.config.cacheResolvers) {\n            process.env.NODE_ENV === \"production\" || invariant.warn('cacheResolvers have been renamed to cacheRedirects. Please update your config as we will be deprecating cacheResolvers in the next major version.');\n            _this.config.cacheRedirects = _this.config.cacheResolvers;\n        }\n        _this.addTypename = !!_this.config.addTypename;\n        _this.data = _this.config.resultCaching\n            ? new DepTrackingCache()\n            : new ObjectCache();\n        _this.optimisticData = _this.data;\n        _this.storeWriter = new StoreWriter();\n        _this.storeReader = new StoreReader({\n            cacheKeyRoot: _this.cacheKeyRoot,\n            freezeResults: config.freezeResults,\n        });\n        var cache = _this;\n        var maybeBroadcastWatch = cache.maybeBroadcastWatch;\n        _this.maybeBroadcastWatch = wrap(function (c) {\n            return maybeBroadcastWatch.call(_this, c);\n        }, {\n            makeCacheKey: function (c) {\n                if (c.optimistic) {\n                    return;\n                }\n                if (c.previousResult) {\n                    return;\n                }\n                if (cache.data instanceof DepTrackingCache) {\n                    return cache.cacheKeyRoot.lookup(c.query, JSON.stringify(c.variables));\n                }\n            }\n        });\n        return _this;\n    }\n    InMemoryCache.prototype.restore = function (data) {\n        if (data)\n            this.data.replace(data);\n        return this;\n    };\n    InMemoryCache.prototype.extract = function (optimistic) {\n        if (optimistic === void 0) { optimistic = false; }\n        return (optimistic ? this.optimisticData : this.data).toObject();\n    };\n    InMemoryCache.prototype.read = function (options) {\n        if (typeof options.rootId === 'string' &&\n            typeof this.data.get(options.rootId) === 'undefined') {\n            return null;\n        }\n        var fragmentMatcher = this.config.fragmentMatcher;\n        var fragmentMatcherFunction = fragmentMatcher && fragmentMatcher.match;\n        return this.storeReader.readQueryFromStore({\n            store: options.optimistic ? this.optimisticData : this.data,\n            query: this.transformDocument(options.query),\n            variables: options.variables,\n            rootId: options.rootId,\n            fragmentMatcherFunction: fragmentMatcherFunction,\n            previousResult: options.previousResult,\n            config: this.config,\n        }) || null;\n    };\n    InMemoryCache.prototype.write = function (write) {\n        var fragmentMatcher = this.config.fragmentMatcher;\n        var fragmentMatcherFunction = fragmentMatcher && fragmentMatcher.match;\n        this.storeWriter.writeResultToStore({\n            dataId: write.dataId,\n            result: write.result,\n            variables: write.variables,\n            document: this.transformDocument(write.query),\n            store: this.data,\n            dataIdFromObject: this.config.dataIdFromObject,\n            fragmentMatcherFunction: fragmentMatcherFunction,\n        });\n        this.broadcastWatches();\n    };\n    InMemoryCache.prototype.diff = function (query) {\n        var fragmentMatcher = this.config.fragmentMatcher;\n        var fragmentMatcherFunction = fragmentMatcher && fragmentMatcher.match;\n        return this.storeReader.diffQueryAgainstStore({\n            store: query.optimistic ? this.optimisticData : this.data,\n            query: this.transformDocument(query.query),\n            variables: query.variables,\n            returnPartialData: query.returnPartialData,\n            previousResult: query.previousResult,\n            fragmentMatcherFunction: fragmentMatcherFunction,\n            config: this.config,\n        });\n    };\n    InMemoryCache.prototype.watch = function (watch) {\n        var _this = this;\n        this.watches.add(watch);\n        return function () {\n            _this.watches.delete(watch);\n        };\n    };\n    InMemoryCache.prototype.evict = function (query) {\n        throw process.env.NODE_ENV === \"production\" ? new InvariantError(7) : new InvariantError(\"eviction is not implemented on InMemory Cache\");\n    };\n    InMemoryCache.prototype.reset = function () {\n        this.data.clear();\n        this.broadcastWatches();\n        return Promise.resolve();\n    };\n    InMemoryCache.prototype.removeOptimistic = function (idToRemove) {\n        var toReapply = [];\n        var removedCount = 0;\n        var layer = this.optimisticData;\n        while (layer instanceof OptimisticCacheLayer) {\n            if (layer.optimisticId === idToRemove) {\n                ++removedCount;\n            }\n            else {\n                toReapply.push(layer);\n            }\n            layer = layer.parent;\n        }\n        if (removedCount > 0) {\n            this.optimisticData = layer;\n            while (toReapply.length > 0) {\n                var layer_1 = toReapply.pop();\n                this.performTransaction(layer_1.transaction, layer_1.optimisticId);\n            }\n            this.broadcastWatches();\n        }\n    };\n    InMemoryCache.prototype.performTransaction = function (transaction, optimisticId) {\n        var _a = this, data = _a.data, silenceBroadcast = _a.silenceBroadcast;\n        this.silenceBroadcast = true;\n        if (typeof optimisticId === 'string') {\n            this.data = this.optimisticData = new OptimisticCacheLayer(optimisticId, this.optimisticData, transaction);\n        }\n        try {\n            transaction(this);\n        }\n        finally {\n            this.silenceBroadcast = silenceBroadcast;\n            this.data = data;\n        }\n        this.broadcastWatches();\n    };\n    InMemoryCache.prototype.recordOptimisticTransaction = function (transaction, id) {\n        return this.performTransaction(transaction, id);\n    };\n    InMemoryCache.prototype.transformDocument = function (document) {\n        if (this.addTypename) {\n            var result = this.typenameDocumentCache.get(document);\n            if (!result) {\n                result = addTypenameToDocument(document);\n                this.typenameDocumentCache.set(document, result);\n                this.typenameDocumentCache.set(result, result);\n            }\n            return result;\n        }\n        return document;\n    };\n    InMemoryCache.prototype.broadcastWatches = function () {\n        var _this = this;\n        if (!this.silenceBroadcast) {\n            this.watches.forEach(function (c) { return _this.maybeBroadcastWatch(c); });\n        }\n    };\n    InMemoryCache.prototype.maybeBroadcastWatch = function (c) {\n        c.callback(this.diff({\n            query: c.query,\n            variables: c.variables,\n            previousResult: c.previousResult && c.previousResult(),\n            optimistic: c.optimistic,\n        }));\n    };\n    return InMemoryCache;\n}(ApolloCache));\n\nexport { HeuristicFragmentMatcher, InMemoryCache, IntrospectionFragmentMatcher, ObjectCache, StoreReader, StoreWriter, WriteError, assertIdValue, defaultDataIdFromObject, defaultNormalizedCacheFactory$1 as defaultNormalizedCacheFactory, enhanceErrorWithDocument };\n//# sourceMappingURL=bundle.esm.js.map\n","import { __assign } from 'tslib';\nimport { print } from 'graphql/language/printer';\nimport { InvariantError } from 'ts-invariant';\n\nvar defaultHttpOptions = {\n    includeQuery: true,\n    includeExtensions: false,\n};\nvar defaultHeaders = {\n    accept: '*/*',\n    'content-type': 'application/json',\n};\nvar defaultOptions = {\n    method: 'POST',\n};\nvar fallbackHttpConfig = {\n    http: defaultHttpOptions,\n    headers: defaultHeaders,\n    options: defaultOptions,\n};\nvar throwServerError = function (response, result, message) {\n    var error = new Error(message);\n    error.name = 'ServerError';\n    error.response = response;\n    error.statusCode = response.status;\n    error.result = result;\n    throw error;\n};\nvar parseAndCheckHttpResponse = function (operations) { return function (response) {\n    return (response\n        .text()\n        .then(function (bodyText) {\n        try {\n            return JSON.parse(bodyText);\n        }\n        catch (err) {\n            var parseError = err;\n            parseError.name = 'ServerParseError';\n            parseError.response = response;\n            parseError.statusCode = response.status;\n            parseError.bodyText = bodyText;\n            return Promise.reject(parseError);\n        }\n    })\n        .then(function (result) {\n        if (response.status >= 300) {\n            throwServerError(response, result, \"Response not successful: Received status code \" + response.status);\n        }\n        if (!Array.isArray(result) &&\n            !result.hasOwnProperty('data') &&\n            !result.hasOwnProperty('errors')) {\n            throwServerError(response, result, \"Server response was missing for query '\" + (Array.isArray(operations)\n                ? operations.map(function (op) { return op.operationName; })\n                : operations.operationName) + \"'.\");\n        }\n        return result;\n    }));\n}; };\nvar checkFetcher = function (fetcher) {\n    if (!fetcher && typeof fetch === 'undefined') {\n        var library = 'unfetch';\n        if (typeof window === 'undefined')\n            library = 'node-fetch';\n        throw process.env.NODE_ENV === \"production\" ? new InvariantError(1) : new InvariantError(\"\\nfetch is not found globally and no fetcher passed, to fix pass a fetch for\\nyour environment like https://www.npmjs.com/package/\" + library + \".\\n\\nFor example:\\nimport fetch from '\" + library + \"';\\nimport { createHttpLink } from 'apollo-link-http';\\n\\nconst link = createHttpLink({ uri: '/graphql', fetch: fetch });\");\n    }\n};\nvar createSignalIfSupported = function () {\n    if (typeof AbortController === 'undefined')\n        return { controller: false, signal: false };\n    var controller = new AbortController();\n    var signal = controller.signal;\n    return { controller: controller, signal: signal };\n};\nvar selectHttpOptionsAndBody = function (operation, fallbackConfig) {\n    var configs = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        configs[_i - 2] = arguments[_i];\n    }\n    var options = __assign({}, fallbackConfig.options, { headers: fallbackConfig.headers, credentials: fallbackConfig.credentials });\n    var http = fallbackConfig.http;\n    configs.forEach(function (config) {\n        options = __assign({}, options, config.options, { headers: __assign({}, options.headers, config.headers) });\n        if (config.credentials)\n            options.credentials = config.credentials;\n        http = __assign({}, http, config.http);\n    });\n    var operationName = operation.operationName, extensions = operation.extensions, variables = operation.variables, query = operation.query;\n    var body = { operationName: operationName, variables: variables };\n    if (http.includeExtensions)\n        body.extensions = extensions;\n    if (http.includeQuery)\n        body.query = print(query);\n    return {\n        options: options,\n        body: body,\n    };\n};\nvar serializeFetchParameter = function (p, label) {\n    var serialized;\n    try {\n        serialized = JSON.stringify(p);\n    }\n    catch (e) {\n        var parseError = process.env.NODE_ENV === \"production\" ? new InvariantError(2) : new InvariantError(\"Network request failed. \" + label + \" is not serializable: \" + e.message);\n        parseError.parseError = e;\n        throw parseError;\n    }\n    return serialized;\n};\nvar selectURI = function (operation, fallbackURI) {\n    var context = operation.getContext();\n    var contextURI = context.uri;\n    if (contextURI) {\n        return contextURI;\n    }\n    else if (typeof fallbackURI === 'function') {\n        return fallbackURI(operation);\n    }\n    else {\n        return fallbackURI || '/graphql';\n    }\n};\n\nexport { checkFetcher, createSignalIfSupported, fallbackHttpConfig, parseAndCheckHttpResponse, selectHttpOptionsAndBody, selectURI, serializeFetchParameter, throwServerError };\n//# sourceMappingURL=bundle.esm.js.map\n","import { __rest, __assign, __extends } from 'tslib';\nimport { ApolloLink, fromError, Observable } from 'apollo-link';\nimport { checkFetcher, selectURI, selectHttpOptionsAndBody, fallbackHttpConfig, createSignalIfSupported, serializeFetchParameter, parseAndCheckHttpResponse } from 'apollo-link-http-common';\n\nvar createHttpLink = function (linkOptions) {\n    if (linkOptions === void 0) { linkOptions = {}; }\n    var _a = linkOptions.uri, uri = _a === void 0 ? '/graphql' : _a, fetcher = linkOptions.fetch, includeExtensions = linkOptions.includeExtensions, useGETForQueries = linkOptions.useGETForQueries, requestOptions = __rest(linkOptions, [\"uri\", \"fetch\", \"includeExtensions\", \"useGETForQueries\"]);\n    checkFetcher(fetcher);\n    if (!fetcher) {\n        fetcher = fetch;\n    }\n    var linkConfig = {\n        http: { includeExtensions: includeExtensions },\n        options: requestOptions.fetchOptions,\n        credentials: requestOptions.credentials,\n        headers: requestOptions.headers,\n    };\n    return new ApolloLink(function (operation) {\n        var chosenURI = selectURI(operation, uri);\n        var context = operation.getContext();\n        var clientAwarenessHeaders = {};\n        if (context.clientAwareness) {\n            var _a = context.clientAwareness, name_1 = _a.name, version = _a.version;\n            if (name_1) {\n                clientAwarenessHeaders['apollographql-client-name'] = name_1;\n            }\n            if (version) {\n                clientAwarenessHeaders['apollographql-client-version'] = version;\n            }\n        }\n        var contextHeaders = __assign({}, clientAwarenessHeaders, context.headers);\n        var contextConfig = {\n            http: context.http,\n            options: context.fetchOptions,\n            credentials: context.credentials,\n            headers: contextHeaders,\n        };\n        var _b = selectHttpOptionsAndBody(operation, fallbackHttpConfig, linkConfig, contextConfig), options = _b.options, body = _b.body;\n        var controller;\n        if (!options.signal) {\n            var _c = createSignalIfSupported(), _controller = _c.controller, signal = _c.signal;\n            controller = _controller;\n            if (controller)\n                options.signal = signal;\n        }\n        var definitionIsMutation = function (d) {\n            return d.kind === 'OperationDefinition' && d.operation === 'mutation';\n        };\n        if (useGETForQueries &&\n            !operation.query.definitions.some(definitionIsMutation)) {\n            options.method = 'GET';\n        }\n        if (options.method === 'GET') {\n            var _d = rewriteURIForGET(chosenURI, body), newURI = _d.newURI, parseError = _d.parseError;\n            if (parseError) {\n                return fromError(parseError);\n            }\n            chosenURI = newURI;\n        }\n        else {\n            try {\n                options.body = serializeFetchParameter(body, 'Payload');\n            }\n            catch (parseError) {\n                return fromError(parseError);\n            }\n        }\n        return new Observable(function (observer) {\n            fetcher(chosenURI, options)\n                .then(function (response) {\n                operation.setContext({ response: response });\n                return response;\n            })\n                .then(parseAndCheckHttpResponse(operation))\n                .then(function (result) {\n                observer.next(result);\n                observer.complete();\n                return result;\n            })\n                .catch(function (err) {\n                if (err.name === 'AbortError')\n                    return;\n                if (err.result && err.result.errors && err.result.data) {\n                    observer.next(err.result);\n                }\n                observer.error(err);\n            });\n            return function () {\n                if (controller)\n                    controller.abort();\n            };\n        });\n    });\n};\nfunction rewriteURIForGET(chosenURI, body) {\n    var queryParams = [];\n    var addQueryParam = function (key, value) {\n        queryParams.push(key + \"=\" + encodeURIComponent(value));\n    };\n    if ('query' in body) {\n        addQueryParam('query', body.query);\n    }\n    if (body.operationName) {\n        addQueryParam('operationName', body.operationName);\n    }\n    if (body.variables) {\n        var serializedVariables = void 0;\n        try {\n            serializedVariables = serializeFetchParameter(body.variables, 'Variables map');\n        }\n        catch (parseError) {\n            return { parseError: parseError };\n        }\n        addQueryParam('variables', serializedVariables);\n    }\n    if (body.extensions) {\n        var serializedExtensions = void 0;\n        try {\n            serializedExtensions = serializeFetchParameter(body.extensions, 'Extensions map');\n        }\n        catch (parseError) {\n            return { parseError: parseError };\n        }\n        addQueryParam('extensions', serializedExtensions);\n    }\n    var fragment = '', preFragment = chosenURI;\n    var fragmentStart = chosenURI.indexOf('#');\n    if (fragmentStart !== -1) {\n        fragment = chosenURI.substr(fragmentStart);\n        preFragment = chosenURI.substr(0, fragmentStart);\n    }\n    var queryParamsPrefix = preFragment.indexOf('?') === -1 ? '?' : '&';\n    var newURI = preFragment + queryParamsPrefix + queryParams.join('&') + fragment;\n    return { newURI: newURI };\n}\nvar HttpLink = (function (_super) {\n    __extends(HttpLink, _super);\n    function HttpLink(opts) {\n        return _super.call(this, createHttpLink(opts).request) || this;\n    }\n    return HttpLink;\n}(ApolloLink));\n\nexport { HttpLink, createHttpLink };\n//# sourceMappingURL=bundle.esm.js.map\n","import { __extends } from 'tslib';\nimport { ApolloLink, Observable } from 'apollo-link';\n\nfunction onError(errorHandler) {\n    return new ApolloLink(function (operation, forward) {\n        return new Observable(function (observer) {\n            var sub;\n            var retriedSub;\n            var retriedResult;\n            try {\n                sub = forward(operation).subscribe({\n                    next: function (result) {\n                        if (result.errors) {\n                            retriedResult = errorHandler({\n                                graphQLErrors: result.errors,\n                                response: result,\n                                operation: operation,\n                                forward: forward,\n                            });\n                            if (retriedResult) {\n                                retriedSub = retriedResult.subscribe({\n                                    next: observer.next.bind(observer),\n                                    error: observer.error.bind(observer),\n                                    complete: observer.complete.bind(observer),\n                                });\n                                return;\n                            }\n                        }\n                        observer.next(result);\n                    },\n                    error: function (networkError) {\n                        retriedResult = errorHandler({\n                            operation: operation,\n                            networkError: networkError,\n                            graphQLErrors: networkError &&\n                                networkError.result &&\n                                networkError.result.errors,\n                            forward: forward,\n                        });\n                        if (retriedResult) {\n                            retriedSub = retriedResult.subscribe({\n                                next: observer.next.bind(observer),\n                                error: observer.error.bind(observer),\n                                complete: observer.complete.bind(observer),\n                            });\n                            return;\n                        }\n                        observer.error(networkError);\n                    },\n                    complete: function () {\n                        if (!retriedResult) {\n                            observer.complete.bind(observer)();\n                        }\n                    },\n                });\n            }\n            catch (e) {\n                errorHandler({ networkError: e, operation: operation, forward: forward });\n                observer.error(e);\n            }\n            return function () {\n                if (sub)\n                    sub.unsubscribe();\n                if (retriedSub)\n                    sub.unsubscribe();\n            };\n        });\n    });\n}\nvar ErrorLink = (function (_super) {\n    __extends(ErrorLink, _super);\n    function ErrorLink(errorHandler) {\n        var _this = _super.call(this) || this;\n        _this.link = onError(errorHandler);\n        return _this;\n    }\n    ErrorLink.prototype.request = function (operation, forward) {\n        return this.link.request(operation, forward);\n    };\n    return ErrorLink;\n}(ApolloLink));\n\nexport { ErrorLink, onError };\n//# sourceMappingURL=bundle.esm.js.map\n","import { __extends } from 'tslib';\nimport ApolloClient__default from 'apollo-client';\nexport * from 'apollo-client';\nimport { ApolloLink, Observable } from 'apollo-link';\nexport * from 'apollo-link';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nexport * from 'apollo-cache-inmemory';\nimport { HttpLink } from 'apollo-link-http';\nexport { HttpLink } from 'apollo-link-http';\nimport { onError } from 'apollo-link-error';\nexport { default as gql } from 'graphql-tag';\nimport { invariant } from 'ts-invariant';\n\nvar PRESET_CONFIG_KEYS = [\n    'request',\n    'uri',\n    'credentials',\n    'headers',\n    'fetch',\n    'fetchOptions',\n    'clientState',\n    'onError',\n    'cacheRedirects',\n    'cache',\n    'name',\n    'version',\n    'resolvers',\n    'typeDefs',\n    'fragmentMatcher',\n];\nvar DefaultClient = (function (_super) {\n    __extends(DefaultClient, _super);\n    function DefaultClient(config) {\n        if (config === void 0) { config = {}; }\n        var _this = this;\n        if (config) {\n            var diff = Object.keys(config).filter(function (key) { return PRESET_CONFIG_KEYS.indexOf(key) === -1; });\n            if (diff.length > 0) {\n                process.env.NODE_ENV === \"production\" || invariant.warn('ApolloBoost was initialized with unsupported options: ' +\n                    (\"\" + diff.join(' ')));\n            }\n        }\n        var request = config.request, uri = config.uri, credentials = config.credentials, headers = config.headers, fetch = config.fetch, fetchOptions = config.fetchOptions, clientState = config.clientState, cacheRedirects = config.cacheRedirects, errorCallback = config.onError, name = config.name, version = config.version, resolvers = config.resolvers, typeDefs = config.typeDefs, fragmentMatcher = config.fragmentMatcher;\n        var cache = config.cache;\n        process.env.NODE_ENV === \"production\" ? invariant(!cache || !cacheRedirects, 1) : invariant(!cache || !cacheRedirects, 'Incompatible cache configuration. When not providing `cache`, ' +\n            'configure the provided instance with `cacheRedirects` instead.');\n        if (!cache) {\n            cache = cacheRedirects\n                ? new InMemoryCache({ cacheRedirects: cacheRedirects })\n                : new InMemoryCache();\n        }\n        var errorLink = errorCallback\n            ? onError(errorCallback)\n            : onError(function (_a) {\n                var graphQLErrors = _a.graphQLErrors, networkError = _a.networkError;\n                if (graphQLErrors) {\n                    graphQLErrors.forEach(function (_a) {\n                        var message = _a.message, locations = _a.locations, path = _a.path;\n                        return process.env.NODE_ENV === \"production\" || invariant.warn(\"[GraphQL error]: Message: \" + message + \", Location: \" +\n                            (locations + \", Path: \" + path));\n                    });\n                }\n                if (networkError) {\n                    process.env.NODE_ENV === \"production\" || invariant.warn(\"[Network error]: \" + networkError);\n                }\n            });\n        var requestHandler = request\n            ? new ApolloLink(function (operation, forward) {\n                return new Observable(function (observer) {\n                    var handle;\n                    Promise.resolve(operation)\n                        .then(function (oper) { return request(oper); })\n                        .then(function () {\n                        handle = forward(operation).subscribe({\n                            next: observer.next.bind(observer),\n                            error: observer.error.bind(observer),\n                            complete: observer.complete.bind(observer),\n                        });\n                    })\n                        .catch(observer.error.bind(observer));\n                    return function () {\n                        if (handle) {\n                            handle.unsubscribe();\n                        }\n                    };\n                });\n            })\n            : false;\n        var httpLink = new HttpLink({\n            uri: uri || '/graphql',\n            fetch: fetch,\n            fetchOptions: fetchOptions || {},\n            credentials: credentials || 'same-origin',\n            headers: headers || {},\n        });\n        var link = ApolloLink.from([errorLink, requestHandler, httpLink].filter(function (x) { return !!x; }));\n        var activeResolvers = resolvers;\n        var activeTypeDefs = typeDefs;\n        var activeFragmentMatcher = fragmentMatcher;\n        if (clientState) {\n            if (clientState.defaults) {\n                cache.writeData({\n                    data: clientState.defaults,\n                });\n            }\n            activeResolvers = clientState.resolvers;\n            activeTypeDefs = clientState.typeDefs;\n            activeFragmentMatcher = clientState.fragmentMatcher;\n        }\n        _this = _super.call(this, {\n            cache: cache,\n            link: link,\n            name: name,\n            version: version,\n            resolvers: activeResolvers,\n            typeDefs: activeTypeDefs,\n            fragmentMatcher: activeFragmentMatcher,\n        }) || this;\n        return _this;\n    }\n    return DefaultClient;\n}(ApolloClient__default));\n\nexport default DefaultClient;\n//# sourceMappingURL=bundle.esm.js.map\n","import { visit } from 'graphql/language/visitor';\nimport { InvariantError, invariant } from 'ts-invariant';\nimport { __assign, __spreadArrays } from 'tslib';\nimport stringify from 'fast-json-stable-stringify';\nexport { equal as isEqual } from '@wry/equality';\n\nfunction isScalarValue(value) {\n    return ['StringValue', 'BooleanValue', 'EnumValue'].indexOf(value.kind) > -1;\n}\nfunction isNumberValue(value) {\n    return ['IntValue', 'FloatValue'].indexOf(value.kind) > -1;\n}\nfunction isStringValue(value) {\n    return value.kind === 'StringValue';\n}\nfunction isBooleanValue(value) {\n    return value.kind === 'BooleanValue';\n}\nfunction isIntValue(value) {\n    return value.kind === 'IntValue';\n}\nfunction isFloatValue(value) {\n    return value.kind === 'FloatValue';\n}\nfunction isVariable(value) {\n    return value.kind === 'Variable';\n}\nfunction isObjectValue(value) {\n    return value.kind === 'ObjectValue';\n}\nfunction isListValue(value) {\n    return value.kind === 'ListValue';\n}\nfunction isEnumValue(value) {\n    return value.kind === 'EnumValue';\n}\nfunction isNullValue(value) {\n    return value.kind === 'NullValue';\n}\nfunction valueToObjectRepresentation(argObj, name, value, variables) {\n    if (isIntValue(value) || isFloatValue(value)) {\n        argObj[name.value] = Number(value.value);\n    }\n    else if (isBooleanValue(value) || isStringValue(value)) {\n        argObj[name.value] = value.value;\n    }\n    else if (isObjectValue(value)) {\n        var nestedArgObj_1 = {};\n        value.fields.map(function (obj) {\n            return valueToObjectRepresentation(nestedArgObj_1, obj.name, obj.value, variables);\n        });\n        argObj[name.value] = nestedArgObj_1;\n    }\n    else if (isVariable(value)) {\n        var variableValue = (variables || {})[value.name.value];\n        argObj[name.value] = variableValue;\n    }\n    else if (isListValue(value)) {\n        argObj[name.value] = value.values.map(function (listValue) {\n            var nestedArgArrayObj = {};\n            valueToObjectRepresentation(nestedArgArrayObj, name, listValue, variables);\n            return nestedArgArrayObj[name.value];\n        });\n    }\n    else if (isEnumValue(value)) {\n        argObj[name.value] = value.value;\n    }\n    else if (isNullValue(value)) {\n        argObj[name.value] = null;\n    }\n    else {\n        throw process.env.NODE_ENV === \"production\" ? new InvariantError(17) : new InvariantError(\"The inline argument \\\"\" + name.value + \"\\\" of kind \\\"\" + value.kind + \"\\\"\" +\n            'is not supported. Use variables instead of inline arguments to ' +\n            'overcome this limitation.');\n    }\n}\nfunction storeKeyNameFromField(field, variables) {\n    var directivesObj = null;\n    if (field.directives) {\n        directivesObj = {};\n        field.directives.forEach(function (directive) {\n            directivesObj[directive.name.value] = {};\n            if (directive.arguments) {\n                directive.arguments.forEach(function (_a) {\n                    var name = _a.name, value = _a.value;\n                    return valueToObjectRepresentation(directivesObj[directive.name.value], name, value, variables);\n                });\n            }\n        });\n    }\n    var argObj = null;\n    if (field.arguments && field.arguments.length) {\n        argObj = {};\n        field.arguments.forEach(function (_a) {\n            var name = _a.name, value = _a.value;\n            return valueToObjectRepresentation(argObj, name, value, variables);\n        });\n    }\n    return getStoreKeyName(field.name.value, argObj, directivesObj);\n}\nvar KNOWN_DIRECTIVES = [\n    'connection',\n    'include',\n    'skip',\n    'client',\n    'rest',\n    'export',\n];\nfunction getStoreKeyName(fieldName, args, directives) {\n    if (directives &&\n        directives['connection'] &&\n        directives['connection']['key']) {\n        if (directives['connection']['filter'] &&\n            directives['connection']['filter'].length > 0) {\n            var filterKeys = directives['connection']['filter']\n                ? directives['connection']['filter']\n                : [];\n            filterKeys.sort();\n            var queryArgs_1 = args;\n            var filteredArgs_1 = {};\n            filterKeys.forEach(function (key) {\n                filteredArgs_1[key] = queryArgs_1[key];\n            });\n            return directives['connection']['key'] + \"(\" + JSON.stringify(filteredArgs_1) + \")\";\n        }\n        else {\n            return directives['connection']['key'];\n        }\n    }\n    var completeFieldName = fieldName;\n    if (args) {\n        var stringifiedArgs = stringify(args);\n        completeFieldName += \"(\" + stringifiedArgs + \")\";\n    }\n    if (directives) {\n        Object.keys(directives).forEach(function (key) {\n            if (KNOWN_DIRECTIVES.indexOf(key) !== -1)\n                return;\n            if (directives[key] && Object.keys(directives[key]).length) {\n                completeFieldName += \"@\" + key + \"(\" + JSON.stringify(directives[key]) + \")\";\n            }\n            else {\n                completeFieldName += \"@\" + key;\n            }\n        });\n    }\n    return completeFieldName;\n}\nfunction argumentsObjectFromField(field, variables) {\n    if (field.arguments && field.arguments.length) {\n        var argObj_1 = {};\n        field.arguments.forEach(function (_a) {\n            var name = _a.name, value = _a.value;\n            return valueToObjectRepresentation(argObj_1, name, value, variables);\n        });\n        return argObj_1;\n    }\n    return null;\n}\nfunction resultKeyNameFromField(field) {\n    return field.alias ? field.alias.value : field.name.value;\n}\nfunction isField(selection) {\n    return selection.kind === 'Field';\n}\nfunction isInlineFragment(selection) {\n    return selection.kind === 'InlineFragment';\n}\nfunction isIdValue(idObject) {\n    return idObject &&\n        idObject.type === 'id' &&\n        typeof idObject.generated === 'boolean';\n}\nfunction toIdValue(idConfig, generated) {\n    if (generated === void 0) { generated = false; }\n    return __assign({ type: 'id', generated: generated }, (typeof idConfig === 'string'\n        ? { id: idConfig, typename: undefined }\n        : idConfig));\n}\nfunction isJsonValue(jsonObject) {\n    return (jsonObject != null &&\n        typeof jsonObject === 'object' &&\n        jsonObject.type === 'json');\n}\nfunction defaultValueFromVariable(node) {\n    throw process.env.NODE_ENV === \"production\" ? new InvariantError(18) : new InvariantError(\"Variable nodes are not supported by valueFromNode\");\n}\nfunction valueFromNode(node, onVariable) {\n    if (onVariable === void 0) { onVariable = defaultValueFromVariable; }\n    switch (node.kind) {\n        case 'Variable':\n            return onVariable(node);\n        case 'NullValue':\n            return null;\n        case 'IntValue':\n            return parseInt(node.value, 10);\n        case 'FloatValue':\n            return parseFloat(node.value);\n        case 'ListValue':\n            return node.values.map(function (v) { return valueFromNode(v, onVariable); });\n        case 'ObjectValue': {\n            var value = {};\n            for (var _i = 0, _a = node.fields; _i < _a.length; _i++) {\n                var field = _a[_i];\n                value[field.name.value] = valueFromNode(field.value, onVariable);\n            }\n            return value;\n        }\n        default:\n            return node.value;\n    }\n}\n\nfunction getDirectiveInfoFromField(field, variables) {\n    if (field.directives && field.directives.length) {\n        var directiveObj_1 = {};\n        field.directives.forEach(function (directive) {\n            directiveObj_1[directive.name.value] = argumentsObjectFromField(directive, variables);\n        });\n        return directiveObj_1;\n    }\n    return null;\n}\nfunction shouldInclude(selection, variables) {\n    if (variables === void 0) { variables = {}; }\n    return getInclusionDirectives(selection.directives).every(function (_a) {\n        var directive = _a.directive, ifArgument = _a.ifArgument;\n        var evaledValue = false;\n        if (ifArgument.value.kind === 'Variable') {\n            evaledValue = variables[ifArgument.value.name.value];\n            process.env.NODE_ENV === \"production\" ? invariant(evaledValue !== void 0, 13) : invariant(evaledValue !== void 0, \"Invalid variable referenced in @\" + directive.name.value + \" directive.\");\n        }\n        else {\n            evaledValue = ifArgument.value.value;\n        }\n        return directive.name.value === 'skip' ? !evaledValue : evaledValue;\n    });\n}\nfunction getDirectiveNames(doc) {\n    var names = [];\n    visit(doc, {\n        Directive: function (node) {\n            names.push(node.name.value);\n        },\n    });\n    return names;\n}\nfunction hasDirectives(names, doc) {\n    return getDirectiveNames(doc).some(function (name) { return names.indexOf(name) > -1; });\n}\nfunction hasClientExports(document) {\n    return (document &&\n        hasDirectives(['client'], document) &&\n        hasDirectives(['export'], document));\n}\nfunction isInclusionDirective(_a) {\n    var value = _a.name.value;\n    return value === 'skip' || value === 'include';\n}\nfunction getInclusionDirectives(directives) {\n    return directives ? directives.filter(isInclusionDirective).map(function (directive) {\n        var directiveArguments = directive.arguments;\n        var directiveName = directive.name.value;\n        process.env.NODE_ENV === \"production\" ? invariant(directiveArguments && directiveArguments.length === 1, 14) : invariant(directiveArguments && directiveArguments.length === 1, \"Incorrect number of arguments for the @\" + directiveName + \" directive.\");\n        var ifArgument = directiveArguments[0];\n        process.env.NODE_ENV === \"production\" ? invariant(ifArgument.name && ifArgument.name.value === 'if', 15) : invariant(ifArgument.name && ifArgument.name.value === 'if', \"Invalid argument for the @\" + directiveName + \" directive.\");\n        var ifValue = ifArgument.value;\n        process.env.NODE_ENV === \"production\" ? invariant(ifValue &&\n            (ifValue.kind === 'Variable' || ifValue.kind === 'BooleanValue'), 16) : invariant(ifValue &&\n            (ifValue.kind === 'Variable' || ifValue.kind === 'BooleanValue'), \"Argument for the @\" + directiveName + \" directive must be a variable or a boolean value.\");\n        return { directive: directive, ifArgument: ifArgument };\n    }) : [];\n}\n\nfunction getFragmentQueryDocument(document, fragmentName) {\n    var actualFragmentName = fragmentName;\n    var fragments = [];\n    document.definitions.forEach(function (definition) {\n        if (definition.kind === 'OperationDefinition') {\n            throw process.env.NODE_ENV === \"production\" ? new InvariantError(11) : new InvariantError(\"Found a \" + definition.operation + \" operation\" + (definition.name ? \" named '\" + definition.name.value + \"'\" : '') + \". \" +\n                'No operations are allowed when using a fragment as a query. Only fragments are allowed.');\n        }\n        if (definition.kind === 'FragmentDefinition') {\n            fragments.push(definition);\n        }\n    });\n    if (typeof actualFragmentName === 'undefined') {\n        process.env.NODE_ENV === \"production\" ? invariant(fragments.length === 1, 12) : invariant(fragments.length === 1, \"Found \" + fragments.length + \" fragments. `fragmentName` must be provided when there is not exactly 1 fragment.\");\n        actualFragmentName = fragments[0].name.value;\n    }\n    var query = __assign(__assign({}, document), { definitions: __spreadArrays([\n            {\n                kind: 'OperationDefinition',\n                operation: 'query',\n                selectionSet: {\n                    kind: 'SelectionSet',\n                    selections: [\n                        {\n                            kind: 'FragmentSpread',\n                            name: {\n                                kind: 'Name',\n                                value: actualFragmentName,\n                            },\n                        },\n                    ],\n                },\n            }\n        ], document.definitions) });\n    return query;\n}\n\nfunction assign(target) {\n    var sources = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        sources[_i - 1] = arguments[_i];\n    }\n    sources.forEach(function (source) {\n        if (typeof source === 'undefined' || source === null) {\n            return;\n        }\n        Object.keys(source).forEach(function (key) {\n            target[key] = source[key];\n        });\n    });\n    return target;\n}\n\nfunction getMutationDefinition(doc) {\n    checkDocument(doc);\n    var mutationDef = doc.definitions.filter(function (definition) {\n        return definition.kind === 'OperationDefinition' &&\n            definition.operation === 'mutation';\n    })[0];\n    process.env.NODE_ENV === \"production\" ? invariant(mutationDef, 1) : invariant(mutationDef, 'Must contain a mutation definition.');\n    return mutationDef;\n}\nfunction checkDocument(doc) {\n    process.env.NODE_ENV === \"production\" ? invariant(doc && doc.kind === 'Document', 2) : invariant(doc && doc.kind === 'Document', \"Expecting a parsed GraphQL document. Perhaps you need to wrap the query string in a \\\"gql\\\" tag? http://docs.apollostack.com/apollo-client/core.html#gql\");\n    var operations = doc.definitions\n        .filter(function (d) { return d.kind !== 'FragmentDefinition'; })\n        .map(function (definition) {\n        if (definition.kind !== 'OperationDefinition') {\n            throw process.env.NODE_ENV === \"production\" ? new InvariantError(3) : new InvariantError(\"Schema type definitions not allowed in queries. Found: \\\"\" + definition.kind + \"\\\"\");\n        }\n        return definition;\n    });\n    process.env.NODE_ENV === \"production\" ? invariant(operations.length <= 1, 4) : invariant(operations.length <= 1, \"Ambiguous GraphQL document: contains \" + operations.length + \" operations\");\n    return doc;\n}\nfunction getOperationDefinition(doc) {\n    checkDocument(doc);\n    return doc.definitions.filter(function (definition) { return definition.kind === 'OperationDefinition'; })[0];\n}\nfunction getOperationDefinitionOrDie(document) {\n    var def = getOperationDefinition(document);\n    process.env.NODE_ENV === \"production\" ? invariant(def, 5) : invariant(def, \"GraphQL document is missing an operation\");\n    return def;\n}\nfunction getOperationName(doc) {\n    return (doc.definitions\n        .filter(function (definition) {\n        return definition.kind === 'OperationDefinition' && definition.name;\n    })\n        .map(function (x) { return x.name.value; })[0] || null);\n}\nfunction getFragmentDefinitions(doc) {\n    return doc.definitions.filter(function (definition) { return definition.kind === 'FragmentDefinition'; });\n}\nfunction getQueryDefinition(doc) {\n    var queryDef = getOperationDefinition(doc);\n    process.env.NODE_ENV === \"production\" ? invariant(queryDef && queryDef.operation === 'query', 6) : invariant(queryDef && queryDef.operation === 'query', 'Must contain a query definition.');\n    return queryDef;\n}\nfunction getFragmentDefinition(doc) {\n    process.env.NODE_ENV === \"production\" ? invariant(doc.kind === 'Document', 7) : invariant(doc.kind === 'Document', \"Expecting a parsed GraphQL document. Perhaps you need to wrap the query string in a \\\"gql\\\" tag? http://docs.apollostack.com/apollo-client/core.html#gql\");\n    process.env.NODE_ENV === \"production\" ? invariant(doc.definitions.length <= 1, 8) : invariant(doc.definitions.length <= 1, 'Fragment must have exactly one definition.');\n    var fragmentDef = doc.definitions[0];\n    process.env.NODE_ENV === \"production\" ? invariant(fragmentDef.kind === 'FragmentDefinition', 9) : invariant(fragmentDef.kind === 'FragmentDefinition', 'Must be a fragment definition.');\n    return fragmentDef;\n}\nfunction getMainDefinition(queryDoc) {\n    checkDocument(queryDoc);\n    var fragmentDefinition;\n    for (var _i = 0, _a = queryDoc.definitions; _i < _a.length; _i++) {\n        var definition = _a[_i];\n        if (definition.kind === 'OperationDefinition') {\n            var operation = definition.operation;\n            if (operation === 'query' ||\n                operation === 'mutation' ||\n                operation === 'subscription') {\n                return definition;\n            }\n        }\n        if (definition.kind === 'FragmentDefinition' && !fragmentDefinition) {\n            fragmentDefinition = definition;\n        }\n    }\n    if (fragmentDefinition) {\n        return fragmentDefinition;\n    }\n    throw process.env.NODE_ENV === \"production\" ? new InvariantError(10) : new InvariantError('Expected a parsed GraphQL query with a query, mutation, subscription, or a fragment.');\n}\nfunction createFragmentMap(fragments) {\n    if (fragments === void 0) { fragments = []; }\n    var symTable = {};\n    fragments.forEach(function (fragment) {\n        symTable[fragment.name.value] = fragment;\n    });\n    return symTable;\n}\nfunction getDefaultValues(definition) {\n    if (definition &&\n        definition.variableDefinitions &&\n        definition.variableDefinitions.length) {\n        var defaultValues = definition.variableDefinitions\n            .filter(function (_a) {\n            var defaultValue = _a.defaultValue;\n            return defaultValue;\n        })\n            .map(function (_a) {\n            var variable = _a.variable, defaultValue = _a.defaultValue;\n            var defaultValueObj = {};\n            valueToObjectRepresentation(defaultValueObj, variable.name, defaultValue);\n            return defaultValueObj;\n        });\n        return assign.apply(void 0, __spreadArrays([{}], defaultValues));\n    }\n    return {};\n}\nfunction variablesInOperation(operation) {\n    var names = new Set();\n    if (operation.variableDefinitions) {\n        for (var _i = 0, _a = operation.variableDefinitions; _i < _a.length; _i++) {\n            var definition = _a[_i];\n            names.add(definition.variable.name.value);\n        }\n    }\n    return names;\n}\n\nfunction filterInPlace(array, test, context) {\n    var target = 0;\n    array.forEach(function (elem, i) {\n        if (test.call(this, elem, i, array)) {\n            array[target++] = elem;\n        }\n    }, context);\n    array.length = target;\n    return array;\n}\n\nvar TYPENAME_FIELD = {\n    kind: 'Field',\n    name: {\n        kind: 'Name',\n        value: '__typename',\n    },\n};\nfunction isEmpty(op, fragments) {\n    return op.selectionSet.selections.every(function (selection) {\n        return selection.kind === 'FragmentSpread' &&\n            isEmpty(fragments[selection.name.value], fragments);\n    });\n}\nfunction nullIfDocIsEmpty(doc) {\n    return isEmpty(getOperationDefinition(doc) || getFragmentDefinition(doc), createFragmentMap(getFragmentDefinitions(doc)))\n        ? null\n        : doc;\n}\nfunction getDirectiveMatcher(directives) {\n    return function directiveMatcher(directive) {\n        return directives.some(function (dir) {\n            return (dir.name && dir.name === directive.name.value) ||\n                (dir.test && dir.test(directive));\n        });\n    };\n}\nfunction removeDirectivesFromDocument(directives, doc) {\n    var variablesInUse = Object.create(null);\n    var variablesToRemove = [];\n    var fragmentSpreadsInUse = Object.create(null);\n    var fragmentSpreadsToRemove = [];\n    var modifiedDoc = nullIfDocIsEmpty(visit(doc, {\n        Variable: {\n            enter: function (node, _key, parent) {\n                if (parent.kind !== 'VariableDefinition') {\n                    variablesInUse[node.name.value] = true;\n                }\n            },\n        },\n        Field: {\n            enter: function (node) {\n                if (directives && node.directives) {\n                    var shouldRemoveField = directives.some(function (directive) { return directive.remove; });\n                    if (shouldRemoveField &&\n                        node.directives &&\n                        node.directives.some(getDirectiveMatcher(directives))) {\n                        if (node.arguments) {\n                            node.arguments.forEach(function (arg) {\n                                if (arg.value.kind === 'Variable') {\n                                    variablesToRemove.push({\n                                        name: arg.value.name.value,\n                                    });\n                                }\n                            });\n                        }\n                        if (node.selectionSet) {\n                            getAllFragmentSpreadsFromSelectionSet(node.selectionSet).forEach(function (frag) {\n                                fragmentSpreadsToRemove.push({\n                                    name: frag.name.value,\n                                });\n                            });\n                        }\n                        return null;\n                    }\n                }\n            },\n        },\n        FragmentSpread: {\n            enter: function (node) {\n                fragmentSpreadsInUse[node.name.value] = true;\n            },\n        },\n        Directive: {\n            enter: function (node) {\n                if (getDirectiveMatcher(directives)(node)) {\n                    return null;\n                }\n            },\n        },\n    }));\n    if (modifiedDoc &&\n        filterInPlace(variablesToRemove, function (v) { return !variablesInUse[v.name]; }).length) {\n        modifiedDoc = removeArgumentsFromDocument(variablesToRemove, modifiedDoc);\n    }\n    if (modifiedDoc &&\n        filterInPlace(fragmentSpreadsToRemove, function (fs) { return !fragmentSpreadsInUse[fs.name]; })\n            .length) {\n        modifiedDoc = removeFragmentSpreadFromDocument(fragmentSpreadsToRemove, modifiedDoc);\n    }\n    return modifiedDoc;\n}\nfunction addTypenameToDocument(doc) {\n    return visit(checkDocument(doc), {\n        SelectionSet: {\n            enter: function (node, _key, parent) {\n                if (parent &&\n                    parent.kind === 'OperationDefinition') {\n                    return;\n                }\n                var selections = node.selections;\n                if (!selections) {\n                    return;\n                }\n                var skip = selections.some(function (selection) {\n                    return (isField(selection) &&\n                        (selection.name.value === '__typename' ||\n                            selection.name.value.lastIndexOf('__', 0) === 0));\n                });\n                if (skip) {\n                    return;\n                }\n                var field = parent;\n                if (isField(field) &&\n                    field.directives &&\n                    field.directives.some(function (d) { return d.name.value === 'export'; })) {\n                    return;\n                }\n                return __assign(__assign({}, node), { selections: __spreadArrays(selections, [TYPENAME_FIELD]) });\n            },\n        },\n    });\n}\nvar connectionRemoveConfig = {\n    test: function (directive) {\n        var willRemove = directive.name.value === 'connection';\n        if (willRemove) {\n            if (!directive.arguments ||\n                !directive.arguments.some(function (arg) { return arg.name.value === 'key'; })) {\n                process.env.NODE_ENV === \"production\" || invariant.warn('Removing an @connection directive even though it does not have a key. ' +\n                    'You may want to use the key parameter to specify a store key.');\n            }\n        }\n        return willRemove;\n    },\n};\nfunction removeConnectionDirectiveFromDocument(doc) {\n    return removeDirectivesFromDocument([connectionRemoveConfig], checkDocument(doc));\n}\nfunction hasDirectivesInSelectionSet(directives, selectionSet, nestedCheck) {\n    if (nestedCheck === void 0) { nestedCheck = true; }\n    return (selectionSet &&\n        selectionSet.selections &&\n        selectionSet.selections.some(function (selection) {\n            return hasDirectivesInSelection(directives, selection, nestedCheck);\n        }));\n}\nfunction hasDirectivesInSelection(directives, selection, nestedCheck) {\n    if (nestedCheck === void 0) { nestedCheck = true; }\n    if (!isField(selection)) {\n        return true;\n    }\n    if (!selection.directives) {\n        return false;\n    }\n    return (selection.directives.some(getDirectiveMatcher(directives)) ||\n        (nestedCheck &&\n            hasDirectivesInSelectionSet(directives, selection.selectionSet, nestedCheck)));\n}\nfunction getDirectivesFromDocument(directives, doc) {\n    checkDocument(doc);\n    var parentPath;\n    return nullIfDocIsEmpty(visit(doc, {\n        SelectionSet: {\n            enter: function (node, _key, _parent, path) {\n                var currentPath = path.join('-');\n                if (!parentPath ||\n                    currentPath === parentPath ||\n                    !currentPath.startsWith(parentPath)) {\n                    if (node.selections) {\n                        var selectionsWithDirectives = node.selections.filter(function (selection) { return hasDirectivesInSelection(directives, selection); });\n                        if (hasDirectivesInSelectionSet(directives, node, false)) {\n                            parentPath = currentPath;\n                        }\n                        return __assign(__assign({}, node), { selections: selectionsWithDirectives });\n                    }\n                    else {\n                        return null;\n                    }\n                }\n            },\n        },\n    }));\n}\nfunction getArgumentMatcher(config) {\n    return function argumentMatcher(argument) {\n        return config.some(function (aConfig) {\n            return argument.value &&\n                argument.value.kind === 'Variable' &&\n                argument.value.name &&\n                (aConfig.name === argument.value.name.value ||\n                    (aConfig.test && aConfig.test(argument)));\n        });\n    };\n}\nfunction removeArgumentsFromDocument(config, doc) {\n    var argMatcher = getArgumentMatcher(config);\n    return nullIfDocIsEmpty(visit(doc, {\n        OperationDefinition: {\n            enter: function (node) {\n                return __assign(__assign({}, node), { variableDefinitions: node.variableDefinitions.filter(function (varDef) {\n                        return !config.some(function (arg) { return arg.name === varDef.variable.name.value; });\n                    }) });\n            },\n        },\n        Field: {\n            enter: function (node) {\n                var shouldRemoveField = config.some(function (argConfig) { return argConfig.remove; });\n                if (shouldRemoveField) {\n                    var argMatchCount_1 = 0;\n                    node.arguments.forEach(function (arg) {\n                        if (argMatcher(arg)) {\n                            argMatchCount_1 += 1;\n                        }\n                    });\n                    if (argMatchCount_1 === 1) {\n                        return null;\n                    }\n                }\n            },\n        },\n        Argument: {\n            enter: function (node) {\n                if (argMatcher(node)) {\n                    return null;\n                }\n            },\n        },\n    }));\n}\nfunction removeFragmentSpreadFromDocument(config, doc) {\n    function enter(node) {\n        if (config.some(function (def) { return def.name === node.name.value; })) {\n            return null;\n        }\n    }\n    return nullIfDocIsEmpty(visit(doc, {\n        FragmentSpread: { enter: enter },\n        FragmentDefinition: { enter: enter },\n    }));\n}\nfunction getAllFragmentSpreadsFromSelectionSet(selectionSet) {\n    var allFragments = [];\n    selectionSet.selections.forEach(function (selection) {\n        if ((isField(selection) || isInlineFragment(selection)) &&\n            selection.selectionSet) {\n            getAllFragmentSpreadsFromSelectionSet(selection.selectionSet).forEach(function (frag) { return allFragments.push(frag); });\n        }\n        else if (selection.kind === 'FragmentSpread') {\n            allFragments.push(selection);\n        }\n    });\n    return allFragments;\n}\nfunction buildQueryFromSelectionSet(document) {\n    var definition = getMainDefinition(document);\n    var definitionOperation = definition.operation;\n    if (definitionOperation === 'query') {\n        return document;\n    }\n    var modifiedDoc = visit(document, {\n        OperationDefinition: {\n            enter: function (node) {\n                return __assign(__assign({}, node), { operation: 'query' });\n            },\n        },\n    });\n    return modifiedDoc;\n}\nfunction removeClientSetsFromDocument(document) {\n    checkDocument(document);\n    var modifiedDoc = removeDirectivesFromDocument([\n        {\n            test: function (directive) { return directive.name.value === 'client'; },\n            remove: true,\n        },\n    ], document);\n    if (modifiedDoc) {\n        modifiedDoc = visit(modifiedDoc, {\n            FragmentDefinition: {\n                enter: function (node) {\n                    if (node.selectionSet) {\n                        var isTypenameOnly = node.selectionSet.selections.every(function (selection) {\n                            return isField(selection) && selection.name.value === '__typename';\n                        });\n                        if (isTypenameOnly) {\n                            return null;\n                        }\n                    }\n                },\n            },\n        });\n    }\n    return modifiedDoc;\n}\n\nvar canUseWeakMap = typeof WeakMap === 'function' && !(typeof navigator === 'object' &&\n    navigator.product === 'ReactNative');\n\nvar toString = Object.prototype.toString;\nfunction cloneDeep(value) {\n    return cloneDeepHelper(value, new Map());\n}\nfunction cloneDeepHelper(val, seen) {\n    switch (toString.call(val)) {\n        case \"[object Array]\": {\n            if (seen.has(val))\n                return seen.get(val);\n            var copy_1 = val.slice(0);\n            seen.set(val, copy_1);\n            copy_1.forEach(function (child, i) {\n                copy_1[i] = cloneDeepHelper(child, seen);\n            });\n            return copy_1;\n        }\n        case \"[object Object]\": {\n            if (seen.has(val))\n                return seen.get(val);\n            var copy_2 = Object.create(Object.getPrototypeOf(val));\n            seen.set(val, copy_2);\n            Object.keys(val).forEach(function (key) {\n                copy_2[key] = cloneDeepHelper(val[key], seen);\n            });\n            return copy_2;\n        }\n        default:\n            return val;\n    }\n}\n\nfunction getEnv() {\n    if (typeof process !== 'undefined' && process.env.NODE_ENV) {\n        return process.env.NODE_ENV;\n    }\n    return 'development';\n}\nfunction isEnv(env) {\n    return getEnv() === env;\n}\nfunction isProduction() {\n    return isEnv('production') === true;\n}\nfunction isDevelopment() {\n    return isEnv('development') === true;\n}\nfunction isTest() {\n    return isEnv('test') === true;\n}\n\nfunction tryFunctionOrLogError(f) {\n    try {\n        return f();\n    }\n    catch (e) {\n        if (console.error) {\n            console.error(e);\n        }\n    }\n}\nfunction graphQLResultHasError(result) {\n    return result.errors && result.errors.length;\n}\n\nfunction deepFreeze(o) {\n    Object.freeze(o);\n    Object.getOwnPropertyNames(o).forEach(function (prop) {\n        if (o[prop] !== null &&\n            (typeof o[prop] === 'object' || typeof o[prop] === 'function') &&\n            !Object.isFrozen(o[prop])) {\n            deepFreeze(o[prop]);\n        }\n    });\n    return o;\n}\nfunction maybeDeepFreeze(obj) {\n    if (isDevelopment() || isTest()) {\n        var symbolIsPolyfilled = typeof Symbol === 'function' && typeof Symbol('') === 'string';\n        if (!symbolIsPolyfilled) {\n            return deepFreeze(obj);\n        }\n    }\n    return obj;\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction mergeDeep() {\n    var sources = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        sources[_i] = arguments[_i];\n    }\n    return mergeDeepArray(sources);\n}\nfunction mergeDeepArray(sources) {\n    var target = sources[0] || {};\n    var count = sources.length;\n    if (count > 1) {\n        var pastCopies = [];\n        target = shallowCopyForMerge(target, pastCopies);\n        for (var i = 1; i < count; ++i) {\n            target = mergeHelper(target, sources[i], pastCopies);\n        }\n    }\n    return target;\n}\nfunction isObject(obj) {\n    return obj !== null && typeof obj === 'object';\n}\nfunction mergeHelper(target, source, pastCopies) {\n    if (isObject(source) && isObject(target)) {\n        if (Object.isExtensible && !Object.isExtensible(target)) {\n            target = shallowCopyForMerge(target, pastCopies);\n        }\n        Object.keys(source).forEach(function (sourceKey) {\n            var sourceValue = source[sourceKey];\n            if (hasOwnProperty.call(target, sourceKey)) {\n                var targetValue = target[sourceKey];\n                if (sourceValue !== targetValue) {\n                    target[sourceKey] = mergeHelper(shallowCopyForMerge(targetValue, pastCopies), sourceValue, pastCopies);\n                }\n            }\n            else {\n                target[sourceKey] = sourceValue;\n            }\n        });\n        return target;\n    }\n    return source;\n}\nfunction shallowCopyForMerge(value, pastCopies) {\n    if (value !== null &&\n        typeof value === 'object' &&\n        pastCopies.indexOf(value) < 0) {\n        if (Array.isArray(value)) {\n            value = value.slice(0);\n        }\n        else {\n            value = __assign({ __proto__: Object.getPrototypeOf(value) }, value);\n        }\n        pastCopies.push(value);\n    }\n    return value;\n}\n\nvar haveWarned = Object.create({});\nfunction warnOnceInDevelopment(msg, type) {\n    if (type === void 0) { type = 'warn'; }\n    if (!isProduction() && !haveWarned[msg]) {\n        if (!isTest()) {\n            haveWarned[msg] = true;\n        }\n        if (type === 'error') {\n            console.error(msg);\n        }\n        else {\n            console.warn(msg);\n        }\n    }\n}\n\nfunction stripSymbols(data) {\n    return JSON.parse(JSON.stringify(data));\n}\n\nexport { addTypenameToDocument, argumentsObjectFromField, assign, buildQueryFromSelectionSet, canUseWeakMap, checkDocument, cloneDeep, createFragmentMap, getDefaultValues, getDirectiveInfoFromField, getDirectiveNames, getDirectivesFromDocument, getEnv, getFragmentDefinition, getFragmentDefinitions, getFragmentQueryDocument, getInclusionDirectives, getMainDefinition, getMutationDefinition, getOperationDefinition, getOperationDefinitionOrDie, getOperationName, getQueryDefinition, getStoreKeyName, graphQLResultHasError, hasClientExports, hasDirectives, isDevelopment, isEnv, isField, isIdValue, isInlineFragment, isJsonValue, isNumberValue, isProduction, isScalarValue, isTest, maybeDeepFreeze, mergeDeep, mergeDeepArray, removeArgumentsFromDocument, removeClientSetsFromDocument, removeConnectionDirectiveFromDocument, removeDirectivesFromDocument, removeFragmentSpreadFromDocument, resultKeyNameFromField, shouldInclude, storeKeyNameFromField, stripSymbols, toIdValue, tryFunctionOrLogError, valueFromNode, valueToObjectRepresentation, variablesInOperation, warnOnceInDevelopment };\n//# sourceMappingURL=bundle.esm.js.map\n"],"sourceRoot":""}