{"version":3,"sources":["webpack:///./node_modules/.pnpm/@babel/runtime@7.12.5/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","webpack:///./node_modules/.pnpm/@babel/runtime@7.12.5/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","webpack:///./node_modules/.pnpm/@babel/runtime@7.12.5/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack:///./node_modules/.pnpm/@wry/equality@0.1.11/node_modules/@wry/equality/lib/equality.esm.js","webpack:///./node_modules/.pnpm/@babel/runtime@7.12.5/node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///./node_modules/.pnpm/@babel/runtime@7.12.5/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack:///./node_modules/.pnpm/@wry/context@0.4.4/node_modules/@wry/context/lib/context.esm.js","webpack:///./node_modules/.pnpm/@babel/runtime@7.12.5/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack:///./node_modules/.pnpm/@babel/runtime@7.12.5/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack:///./node_modules/.pnpm/@babel/runtime@7.12.5/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack:///./node_modules/.pnpm/@babel/runtime@7.12.5/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack:///./node_modules/.pnpm/@babel/runtime@7.12.5/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack:///./node_modules/.pnpm/@babel/runtime@7.12.5/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js"],"names":["_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","length","i","F","s","n","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","undefined","_a","prototype","toString","hasOwnProperty","previousComparisons","Map","equal","a","b","check","clear","aTag","call","bTag","previouslyCompared","aKeys","keys","bKeys","keyCount","k","name","message","size","aIterator","entries","isMap","aKey","aValue","has","get","bSet","set","Set","add","_defineProperty","obj","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","_objectSpread2","target","source","forEach","getOwnPropertyDescriptors","currentContext","MISSING_VALUE","idCounter","makeSlotClass","Slot","id","Date","now","Math","random","join","hasValue","context_1","parent","slots","getValue","withValue","callback","thisArg","__proto__","bind","context","saved","noContext","globalKey","host","_arrayLikeToArray","arr","len","arr2","_unsupportedIterableToArray","minLen","arrayLikeToArray","constructor","from","test","_arrayWithoutHoles","_iterableToArray","iter","_nonIterableSpread","_toConsumableArray","arrayWithoutHoles","iterableToArray","nonIterableSpread"],"mappings":"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","file":"js/chunk-vendors~e0511360.a422270f.js","sourcesContent":["import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","var _a = Object.prototype, toString = _a.toString, hasOwnProperty = _a.hasOwnProperty;\r\nvar previousComparisons = new Map();\r\n/**\r\n * Performs a deep equality check on two JavaScript values, tolerating cycles.\r\n */\r\nfunction equal(a, b) {\r\n    try {\r\n        return check(a, b);\r\n    }\r\n    finally {\r\n        previousComparisons.clear();\r\n    }\r\n}\r\nfunction check(a, b) {\r\n    // If the two values are strictly equal, our job is easy.\r\n    if (a === b) {\r\n        return true;\r\n    }\r\n    // Object.prototype.toString returns a representation of the runtime type of\r\n    // the given value that is considerably more precise than typeof.\r\n    var aTag = toString.call(a);\r\n    var bTag = toString.call(b);\r\n    // If the runtime types of a and b are different, they could maybe be equal\r\n    // under some interpretation of equality, but for simplicity and performance\r\n    // we just return false instead.\r\n    if (aTag !== bTag) {\r\n        return false;\r\n    }\r\n    switch (aTag) {\r\n        case '[object Array]':\r\n            // Arrays are a lot like other objects, but we can cheaply compare their\r\n            // lengths as a short-cut before comparing their elements.\r\n            if (a.length !== b.length)\r\n                return false;\r\n        // Fall through to object case...\r\n        case '[object Object]': {\r\n            if (previouslyCompared(a, b))\r\n                return true;\r\n            var aKeys = Object.keys(a);\r\n            var bKeys = Object.keys(b);\r\n            // If `a` and `b` have a different number of enumerable keys, they\r\n            // must be different.\r\n            var keyCount = aKeys.length;\r\n            if (keyCount !== bKeys.length)\r\n                return false;\r\n            // Now make sure they have the same keys.\r\n            for (var k = 0; k < keyCount; ++k) {\r\n                if (!hasOwnProperty.call(b, aKeys[k])) {\r\n                    return false;\r\n                }\r\n            }\r\n            // Finally, check deep equality of all child properties.\r\n            for (var k = 0; k < keyCount; ++k) {\r\n                var key = aKeys[k];\r\n                if (!check(a[key], b[key])) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        case '[object Error]':\r\n            return a.name === b.name && a.message === b.message;\r\n        case '[object Number]':\r\n            // Handle NaN, which is !== itself.\r\n            if (a !== a)\r\n                return b !== b;\r\n        // Fall through to shared +a === +b case...\r\n        case '[object Boolean]':\r\n        case '[object Date]':\r\n            return +a === +b;\r\n        case '[object RegExp]':\r\n        case '[object String]':\r\n            return a == \"\" + b;\r\n        case '[object Map]':\r\n        case '[object Set]': {\r\n            if (a.size !== b.size)\r\n                return false;\r\n            if (previouslyCompared(a, b))\r\n                return true;\r\n            var aIterator = a.entries();\r\n            var isMap = aTag === '[object Map]';\r\n            while (true) {\r\n                var info = aIterator.next();\r\n                if (info.done)\r\n                    break;\r\n                // If a instanceof Set, aValue === aKey.\r\n                var _a = info.value, aKey = _a[0], aValue = _a[1];\r\n                // So this works the same way for both Set and Map.\r\n                if (!b.has(aKey)) {\r\n                    return false;\r\n                }\r\n                // However, we care about deep equality of values only when dealing\r\n                // with Map structures.\r\n                if (isMap && !check(aValue, b.get(aKey))) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n    }\r\n    // Otherwise the values are not equal.\r\n    return false;\r\n}\r\nfunction previouslyCompared(a, b) {\r\n    // Though cyclic references can make an object graph appear infinite from the\r\n    // perspective of a depth-first traversal, the graph still contains a finite\r\n    // number of distinct object references. We use the previousComparisons cache\r\n    // to avoid comparing the same pair of object references more than once, which\r\n    // guarantees termination (even if we end up comparing every object in one\r\n    // graph to every object in the other graph, which is extremely unlikely),\r\n    // while still allowing weird isomorphic structures (like rings with different\r\n    // lengths) a chance to pass the equality test.\r\n    var bSet = previousComparisons.get(a);\r\n    if (bSet) {\r\n        // Return true here because we can be sure false will be returned somewhere\r\n        // else if the objects are not equivalent.\r\n        if (bSet.has(b))\r\n            return true;\r\n    }\r\n    else {\r\n        previousComparisons.set(a, bSet = new Set);\r\n    }\r\n    bSet.add(b);\r\n    return false;\r\n}\n\nexport default equal;\nexport { equal };\n//# sourceMappingURL=equality.esm.js.map\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","// This currentContext variable will only be used if the makeSlotClass\r\n// function is called, which happens only if this is the first copy of the\r\n// @wry/context package to be imported.\r\nvar currentContext = null;\r\n// This unique internal object is used to denote the absence of a value\r\n// for a given Slot, and is never exposed to outside code.\r\nvar MISSING_VALUE = {};\r\nvar idCounter = 1;\r\n// Although we can't do anything about the cost of duplicated code from\r\n// accidentally bundling multiple copies of the @wry/context package, we can\r\n// avoid creating the Slot class more than once using makeSlotClass.\r\nvar makeSlotClass = function () { return /** @class */ (function () {\r\n    function Slot() {\r\n        // If you have a Slot object, you can find out its slot.id, but you cannot\r\n        // guess the slot.id of a Slot you don't have access to, thanks to the\r\n        // randomized suffix.\r\n        this.id = [\r\n            \"slot\",\r\n            idCounter++,\r\n            Date.now(),\r\n            Math.random().toString(36).slice(2),\r\n        ].join(\":\");\r\n    }\r\n    Slot.prototype.hasValue = function () {\r\n        for (var context_1 = currentContext; context_1; context_1 = context_1.parent) {\r\n            // We use the Slot object iself as a key to its value, which means the\r\n            // value cannot be obtained without a reference to the Slot object.\r\n            if (this.id in context_1.slots) {\r\n                var value = context_1.slots[this.id];\r\n                if (value === MISSING_VALUE)\r\n                    break;\r\n                if (context_1 !== currentContext) {\r\n                    // Cache the value in currentContext.slots so the next lookup will\r\n                    // be faster. This caching is safe because the tree of contexts and\r\n                    // the values of the slots are logically immutable.\r\n                    currentContext.slots[this.id] = value;\r\n                }\r\n                return true;\r\n            }\r\n        }\r\n        if (currentContext) {\r\n            // If a value was not found for this Slot, it's never going to be found\r\n            // no matter how many times we look it up, so we might as well cache\r\n            // the absence of the value, too.\r\n            currentContext.slots[this.id] = MISSING_VALUE;\r\n        }\r\n        return false;\r\n    };\r\n    Slot.prototype.getValue = function () {\r\n        if (this.hasValue()) {\r\n            return currentContext.slots[this.id];\r\n        }\r\n    };\r\n    Slot.prototype.withValue = function (value, callback, \r\n    // Given the prevalence of arrow functions, specifying arguments is likely\r\n    // to be much more common than specifying `this`, hence this ordering:\r\n    args, thisArg) {\r\n        var _a;\r\n        var slots = (_a = {\r\n                __proto__: null\r\n            },\r\n            _a[this.id] = value,\r\n            _a);\r\n        var parent = currentContext;\r\n        currentContext = { parent: parent, slots: slots };\r\n        try {\r\n            // Function.prototype.apply allows the arguments array argument to be\r\n            // omitted or undefined, so args! is fine here.\r\n            return callback.apply(thisArg, args);\r\n        }\r\n        finally {\r\n            currentContext = parent;\r\n        }\r\n    };\r\n    // Capture the current context and wrap a callback function so that it\r\n    // reestablishes the captured context when called.\r\n    Slot.bind = function (callback) {\r\n        var context = currentContext;\r\n        return function () {\r\n            var saved = currentContext;\r\n            try {\r\n                currentContext = context;\r\n                return callback.apply(this, arguments);\r\n            }\r\n            finally {\r\n                currentContext = saved;\r\n            }\r\n        };\r\n    };\r\n    // Immediately run a callback function without any captured context.\r\n    Slot.noContext = function (callback, \r\n    // Given the prevalence of arrow functions, specifying arguments is likely\r\n    // to be much more common than specifying `this`, hence this ordering:\r\n    args, thisArg) {\r\n        if (currentContext) {\r\n            var saved = currentContext;\r\n            try {\r\n                currentContext = null;\r\n                // Function.prototype.apply allows the arguments array argument to be\r\n                // omitted or undefined, so args! is fine here.\r\n                return callback.apply(thisArg, args);\r\n            }\r\n            finally {\r\n                currentContext = saved;\r\n            }\r\n        }\r\n        else {\r\n            return callback.apply(thisArg, args);\r\n        }\r\n    };\r\n    return Slot;\r\n}()); };\r\n// We store a single global implementation of the Slot class as a permanent\r\n// non-enumerable symbol property of the Array constructor. This obfuscation\r\n// does nothing to prevent access to the Slot class, but at least it ensures\r\n// the implementation (i.e. currentContext) cannot be tampered with, and all\r\n// copies of the @wry/context package (hopefully just one) will share the\r\n// same Slot implementation. Since the first copy of the @wry/context package\r\n// to be imported wins, this technique imposes a very high cost for any\r\n// future breaking changes to the Slot class.\r\nvar globalKey = \"@wry/context:Slot\";\r\nvar host = Array;\r\nvar Slot = host[globalKey] || function () {\r\n    var Slot = makeSlotClass();\r\n    try {\r\n        Object.defineProperty(host, globalKey, {\r\n            value: host[globalKey] = Slot,\r\n            enumerable: false,\r\n            writable: false,\r\n            configurable: false,\r\n        });\r\n    }\r\n    finally {\r\n        return Slot;\r\n    }\r\n}();\n\nvar bind = Slot.bind, noContext = Slot.noContext;\r\nfunction setTimeoutWithContext(callback, delay) {\r\n    return setTimeout(bind(callback), delay);\r\n}\r\n// Turn any generator function into an async function (using yield instead\r\n// of await), with context automatically preserved across yields.\r\nfunction asyncFromGen(genFn) {\r\n    return function () {\r\n        var gen = genFn.apply(this, arguments);\r\n        var boundNext = bind(gen.next);\r\n        var boundThrow = bind(gen.throw);\r\n        return new Promise(function (resolve, reject) {\r\n            function invoke(method, argument) {\r\n                try {\r\n                    var result = method.call(gen, argument);\r\n                }\r\n                catch (error) {\r\n                    return reject(error);\r\n                }\r\n                var next = result.done ? resolve : invokeNext;\r\n                if (isPromiseLike(result.value)) {\r\n                    result.value.then(next, result.done ? reject : invokeThrow);\r\n                }\r\n                else {\r\n                    next(result.value);\r\n                }\r\n            }\r\n            var invokeNext = function (value) { return invoke(boundNext, value); };\r\n            var invokeThrow = function (error) { return invoke(boundThrow, error); };\r\n            invokeNext();\r\n        });\r\n    };\r\n}\r\nfunction isPromiseLike(value) {\r\n    return value && typeof value.then === \"function\";\r\n}\r\n// If you use the fibers npm package to implement coroutines in Node.js,\r\n// you should call this function at least once to ensure context management\r\n// remains coherent across any yields.\r\nvar wrappedFibers = [];\r\nfunction wrapYieldingFiberMethods(Fiber) {\r\n    // There can be only one implementation of Fiber per process, so this array\r\n    // should never grow longer than one element.\r\n    if (wrappedFibers.indexOf(Fiber) < 0) {\r\n        var wrap = function (obj, method) {\r\n            var fn = obj[method];\r\n            obj[method] = function () {\r\n                return noContext(fn, arguments, this);\r\n            };\r\n        };\r\n        // These methods can yield, according to\r\n        // https://github.com/laverdet/node-fibers/blob/ddebed9b8ae3883e57f822e2108e6943e5c8d2a8/fibers.js#L97-L100\r\n        wrap(Fiber, \"yield\");\r\n        wrap(Fiber.prototype, \"run\");\r\n        wrap(Fiber.prototype, \"throwInto\");\r\n        wrappedFibers.push(Fiber);\r\n    }\r\n    return Fiber;\r\n}\n\nexport { Slot, asyncFromGen, bind, noContext, setTimeoutWithContext as setTimeout, wrapYieldingFiberMethods };\n//# sourceMappingURL=context.esm.js.map\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}"],"sourceRoot":""}